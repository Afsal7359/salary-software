{
    "sourceFile": "backend/controller/Report.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1703677234349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703677323247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+const SalaryBill = require(\"../models/SalaryBill\");\r\n+\r\n+module.exports={\r\n+\r\n+    GetPFReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body);\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+                const salaryData = await SalaryBill.find({\r\n+                        date: {\r\n+                        $gte:  (fromMonth),\r\n+                        $lte:  (toMonth),\r\n+                        },\r\n+                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                    })\r\n+                    .populate({\r\n+                            path: \"employeeid\",\r\n+                            populate: [\r\n+                            \r\n+                                { path: \"PostId\" }\r\n+                            ],\r\n+                            })\r\n+                    .populate('departmentid')\r\n+                    .populate('unitid')\r\n+                    .populate({ path: 'tablerow.salaryComponent' })\r\n+                    if (salaryData.length === 0) {\r\n+                        return res.status(404).json({\r\n+                          success: false,\r\n+                          message: 'No salary data found within the specified date range',\r\n+                        });\r\n+                      }\r\n+                  \r\n+                      res.status(200).json({\r\n+                        success: true,\r\n+                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                        data: salaryData,\r\n+                      });\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server Error\",\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    },\r\n+\r\n+    GetESIReport : async(req,res)=>{\r\n+        try {\r\n+            \r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:'Error in Fetching ESI Report Data',\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703677665082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+const SalaryBill = require(\"../models/SalaryBill\");\r\n+\r\n+module.exports={\r\n+\r\n+    GetPFReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body);\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+                const salaryData = await SalaryBill.find({\r\n+                        date: {\r\n+                        $gte:  (fromMonth),\r\n+                        $lte:  (toMonth),\r\n+                        },\r\n+                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                    })\r\n+                    .populate({\r\n+                            path: \"employeeid\",\r\n+                            populate: [\r\n+                            \r\n+                                { path: \"PostId\" }\r\n+                            ],\r\n+                            })\r\n+                    .populate('departmentid')\r\n+                    .populate('unitid')\r\n+                    .populate({ path: 'tablerow.salaryComponent' })\r\n+                    if (salaryData.length === 0) {\r\n+                        return res.status(404).json({\r\n+                          success: false,\r\n+                          message: 'No salary data found within the specified date range',\r\n+                        });\r\n+                      }\r\n+                  \r\n+                      res.status(200).json({\r\n+                        success: true,\r\n+                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                        data: salaryData,\r\n+                      });\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server Error\",\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    },\r\n+\r\n+    GetESIReport : async(req,res)=>{\r\n+        try {\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+            const salaryData = await SalaryBill.find({\r\n+                    date: {\r\n+                    $gte:  (fromMonth),\r\n+                    $lte:  (toMonth),\r\n+                    },\r\n+                    employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                })\r\n+                .populate({\r\n+                        path: \"employeeid\",\r\n+                        populate: [\r\n+                        \r\n+                            { path: \"PostId\" }\r\n+                        ],\r\n+                        })\r\n+                .populate('departmentid')\r\n+                .populate('unitid')\r\n+                .populate({ path: 'tablerow.salaryComponent' })\r\n+                if (salaryData.length === 0) {\r\n+                    return res.status(404).json({\r\n+                      success: false,\r\n+                      message: 'No salary data found within the specified date range',\r\n+                    });\r\n+                  }\r\n+              \r\n+                  res.status(200).json({\r\n+                    success: true,\r\n+                    message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                    data: salaryData,\r\n+                  });\r\n+\r\n+            \r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:'Error in Fetching ESI Report Data',\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703677853478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+const SalaryBill = require(\"../models/SalaryBill\");\r\n+\r\n+module.exports={\r\n+\r\n+    GetPFReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body);\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+                const salaryData = await SalaryBill.find({\r\n+                        date: {\r\n+                        $gte:  (fromMonth),\r\n+                        $lte:  (toMonth),\r\n+                        },\r\n+                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                    })\r\n+                    .populate({\r\n+                            path: \"employeeid\",\r\n+                            populate: [\r\n+                            \r\n+                                { path: \"PostId\" }\r\n+                            ],\r\n+                            })\r\n+                    .populate('departmentid')\r\n+                    .populate('unitid')\r\n+                    .populate({ path: 'tablerow.salaryComponent' })\r\n+                    if (salaryData.length === 0) {\r\n+                        return res.status(404).json({\r\n+                          success: false,\r\n+                          message: 'No salary data found within the specified date range',\r\n+                        });\r\n+                      }\r\n+                  \r\n+                      res.status(200).json({\r\n+                        success: true,\r\n+                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                        data: salaryData,\r\n+                      });\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server Error\",\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    },\r\n+\r\n+    GetESIReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body,\":::boooody\");\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+            const salaryData = await SalaryBill.find({\r\n+                    date: {\r\n+                    $gte:  (fromMonth),\r\n+                    $lte:  (toMonth),\r\n+                    },\r\n+                    employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                })\r\n+                .populate({\r\n+                        path: \"employeeid\",\r\n+                        populate: [\r\n+                        \r\n+                            { path: \"PostId\" }\r\n+                        ],\r\n+                        })\r\n+                .populate('departmentid')\r\n+                .populate('unitid')\r\n+                .populate({ path: 'tablerow.salaryComponent' })\r\n+                if (salaryData.length === 0) {\r\n+                    return res.status(404).json({\r\n+                      success: false,\r\n+                      message: 'No salary data found within the specified date range',\r\n+                    });\r\n+                  }\r\n+              \r\n+                  res.status(200).json({\r\n+                    success: true,\r\n+                    message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                    data: salaryData,\r\n+                  });\r\n+\r\n+            \r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:'Error in Fetching ESI Report Data',\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703677909079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,11 +65,11 @@\n                         \r\n                             { path: \"PostId\" }\r\n                         ],\r\n                         })\r\n-                .populate('departmentid')\r\n-                .populate('unitid')\r\n-                .populate({ path: 'tablerow.salaryComponent' })\r\n+                // .populate('departmentid')\r\n+                // .populate('unitid')\r\n+                // .populate({ path: 'tablerow.salaryComponent' })\r\n                 if (salaryData.length === 0) {\r\n                     return res.status(404).json({\r\n                       success: false,\r\n                       message: 'No salary data found within the specified date range',\r\n@@ -90,210 +90,5 @@\n                 error:error.message\r\n             })\r\n         }\r\n     }\r\n-}\n-const SalaryBill = require(\"../models/SalaryBill\");\r\n-\r\n-module.exports={\r\n-\r\n-    GetPFReport : async(req,res)=>{\r\n-        try {\r\n-            console.log(req.body);\r\n-            const {fromMonth,toMonth}=req.body\r\n-\r\n-                const salaryData = await SalaryBill.find({\r\n-                        date: {\r\n-                        $gte:  (fromMonth),\r\n-                        $lte:  (toMonth),\r\n-                        },\r\n-                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n-                    })\r\n-                    .populate({\r\n-                            path: \"employeeid\",\r\n-                            populate: [\r\n-                            \r\n-                                { path: \"PostId\" }\r\n-                            ],\r\n-                            })\r\n-                    .populate('departmentid')\r\n-                    .populate('unitid')\r\n-                    .populate({ path: 'tablerow.salaryComponent' })\r\n-                    if (salaryData.length === 0) {\r\n-                        return res.status(404).json({\r\n-                          success: false,\r\n-                          message: 'No salary data found within the specified date range',\r\n-                        });\r\n-                      }\r\n-                  \r\n-                      res.status(200).json({\r\n-                        success: true,\r\n-                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n-                        data: salaryData,\r\n-                      });\r\n-\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-            res.status(500).json({\r\n-                success:false,\r\n-                message:\"Server Error\",\r\n-                error:error.message\r\n-            })\r\n-        }\r\n-    },\r\n-\r\n-    GetESIReport : async(req,res)=>{\r\n-        try {\r\n-            const {fromMonth,toMonth}=req.body\r\n-\r\n-            const salaryData = await SalaryBill.find({\r\n-                    date: {\r\n-                    $gte:  (fromMonth),\r\n-                    $lte:  (toMonth),\r\n-                    },\r\n-                    employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n-                })\r\n-                .populate({\r\n-                        path: \"employeeid\",\r\n-                        populate: [\r\n-                        \r\n-                            { path: \"PostId\" }\r\n-                        ],\r\n-                        })\r\n-                .populate('departmentid')\r\n-                .populate('unitid')\r\n-                .populate({ path: 'tablerow.salaryComponent' })\r\n-                if (salaryData.length === 0) {\r\n-                    return res.status(404).json({\r\n-                      success: false,\r\n-                      message: 'No salary data found within the specified date range',\r\n-                    });\r\n-                  }\r\n-              \r\n-                  res.status(200).json({\r\n-                    success: true,\r\n-                    message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n-                    data: salaryData,\r\n-                  });\r\n-\r\n-            \r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                success:false,\r\n-                message:'Error in Fetching ESI Report Data',\r\n-                error:error.message\r\n-            })\r\n-        }\r\n-    }\r\n-}\n-const SalaryBill = require(\"../models/SalaryBill\");\r\n-\r\n-module.exports={\r\n-\r\n-    GetPFReport : async(req,res)=>{\r\n-        try {\r\n-            console.log(req.body);\r\n-            const {fromMonth,toMonth}=req.body\r\n-\r\n-                const salaryData = await SalaryBill.find({\r\n-                        date: {\r\n-                        $gte:  (fromMonth),\r\n-                        $lte:  (toMonth),\r\n-                        },\r\n-                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n-                    })\r\n-                    .populate({\r\n-                            path: \"employeeid\",\r\n-                            populate: [\r\n-                            \r\n-                                { path: \"PostId\" }\r\n-                            ],\r\n-                            })\r\n-                    .populate('departmentid')\r\n-                    .populate('unitid')\r\n-                    .populate({ path: 'tablerow.salaryComponent' })\r\n-                    if (salaryData.length === 0) {\r\n-                        return res.status(404).json({\r\n-                          success: false,\r\n-                          message: 'No salary data found within the specified date range',\r\n-                        });\r\n-                      }\r\n-                  \r\n-                      res.status(200).json({\r\n-                        success: true,\r\n-                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n-                        data: salaryData,\r\n-                      });\r\n-\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-            res.status(500).json({\r\n-                success:false,\r\n-                message:\"Server Error\",\r\n-                error:error.message\r\n-            })\r\n-        }\r\n-    },\r\n-\r\n-    GetESIReport : async(req,res)=>{\r\n-        try {\r\n-            \r\n-        } catch (error) {\r\n-            res.status(500).json({\r\n-                success:false,\r\n-                message:'Error in Fetching ESI Report Data',\r\n-                error:error.message\r\n-            })\r\n-        }\r\n-    }\r\n-}\n-const SalaryBill = require(\"../models/SalaryBill\");\r\n-\r\n-module.exports={\r\n-\r\n-    GetPFReport : async(req,res)=>{\r\n-        try {\r\n-            console.log(req.body);\r\n-            const {fromMonth,toMonth}=req.body\r\n-\r\n-                const salaryData = await SalaryBill.find({\r\n-                        date: {\r\n-                        $gte:  (fromMonth),\r\n-                        $lte:  (toMonth),\r\n-                        },\r\n-                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n-                    })\r\n-                    .populate({\r\n-                            path: \"employeeid\",\r\n-                            populate: [\r\n-                            \r\n-                                { path: \"PostId\" }\r\n-                            ],\r\n-                            })\r\n-                    .populate('departmentid')\r\n-                    .populate('unitid')\r\n-                    .populate({ path: 'tablerow.salaryComponent' })\r\n-                    if (salaryData.length === 0) {\r\n-                        return res.status(404).json({\r\n-                          success: false,\r\n-                          message: 'No salary data found within the specified date range',\r\n-                        });\r\n-                      }\r\n-                  \r\n-                      res.status(200).json({\r\n-                        success: true,\r\n-                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n-                        data: salaryData,\r\n-                      });\r\n-\r\n-        } catch (error) {\r\n-            console.log(error);\r\n-            res.status(500).json({\r\n-                success:false,\r\n-                message:\"Server Error\",\r\n-                error:error.message\r\n-            })\r\n-        }\r\n-    },\r\n-\r\n-    GetEPS\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703677946254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,10 @@\n                 })\r\n                 .populate({\r\n                         path: \"employeeid\",\r\n                         populate: [\r\n-                        \r\n                             { path: \"PostId\" }\r\n+                            { path: \"PostId\" }\r\n                         ],\r\n                         })\r\n                 // .populate('departmentid')\r\n                 // .populate('unitid')\r\n"
                },
                {
                    "date": 1703677957615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+const SalaryBill = require(\"../models/SalaryBill\");\r\n+\r\n+module.exports={\r\n+\r\n+    GetPFReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body);\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+                const salaryData = await SalaryBill.find({\r\n+                        date: {\r\n+                        $gte:  (fromMonth),\r\n+                        $lte:  (toMonth),\r\n+                        },\r\n+                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                    })\r\n+                    .populate({\r\n+                            path: \"employeeid\",\r\n+                            populate: [\r\n+                            \r\n+                                { path: \"PostId\" }\r\n+                            ],\r\n+                            })\r\n+                    .populate('departmentid')\r\n+                    .populate('unitid')\r\n+                    .populate({ path: 'tablerow.salaryComponent' })\r\n+                    if (salaryData.length === 0) {\r\n+                        return res.status(404).json({\r\n+                          success: false,\r\n+                          message: 'No salary data found within the specified date range',\r\n+                        });\r\n+                      }\r\n+                  \r\n+                      res.status(200).json({\r\n+                        success: true,\r\n+                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                        data: salaryData,\r\n+                      });\r\n+\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server Error\",\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    },\r\n+\r\n+    GetESIReport : async(req,res)=>{\r\n+        try {\r\n+            console.log(req.body,\":::boooody\");\r\n+            const {fromMonth,toMonth}=req.body\r\n+\r\n+            const salaryData = await SalaryBill.find({\r\n+                    date: {\r\n+                    $gte:  (fromMonth),\r\n+                    $lte:  (toMonth),\r\n+                    },\r\n+                    employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n+                })\r\n+                .populate({\r\n+                        path: \"employeeid\",\r\n+                        populate: [\r\n+                            { path: \"EmployeeTypeId\" },\r\n+                            { path: \"PostId\" }\r\n+                        ],\r\n+                        })\r\n+                // .populate('departmentid')\r\n+                // .populate('unitid')\r\n+                // .populate({ path: 'tablerow.salaryComponent' })\r\n+                if (salaryData.length === 0) {\r\n+                    return res.status(404).json({\r\n+                      success: false,\r\n+                      message: 'No salary data found within the specified date range',\r\n+                    });\r\n+                  }\r\n+              \r\n+                  res.status(200).json({\r\n+                    success: true,\r\n+                    message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n+                    data: salaryData,\r\n+                  });\r\n+\r\n+            \r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:'Error in Fetching ESI Report Data',\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703678097878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,8 @@\n                     date: {\r\n                     $gte:  (fromMonth),\r\n                     $lte:  (toMonth),\r\n                     },\r\n-                    employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n                 })\r\n                 .populate({\r\n                         path: \"employeeid\",\r\n                         populate: [\r\n"
                }
            ],
            "date": 1703677234349,
            "name": "Commit-0",
            "content": "const SalaryBill = require(\"../models/SalaryBill\");\r\n\r\nmodule.exports={\r\n\r\n    GetPFReport : async(req,res)=>{\r\n        try {\r\n            console.log(req.body);\r\n            const {fromMonth,toMonth}=req.body\r\n\r\n                const salaryData = await SalaryBill.find({\r\n                        date: {\r\n                        $gte:  (fromMonth),\r\n                        $lte:  (toMonth),\r\n                        },\r\n                        employeeTypeId:\"6566be7b0085f19cfbfd00c1\"\r\n                    })\r\n                    .populate({\r\n                            path: \"employeeid\",\r\n                            populate: [\r\n                            \r\n                                { path: \"PostId\" }\r\n                            ],\r\n                            })\r\n                    .populate('departmentid')\r\n                    .populate('unitid')\r\n                    .populate({ path: 'tablerow.salaryComponent' })\r\n                    if (salaryData.length === 0) {\r\n                        return res.status(404).json({\r\n                          success: false,\r\n                          message: 'No salary data found within the specified date range',\r\n                        });\r\n                      }\r\n                  \r\n                      res.status(200).json({\r\n                        success: true,\r\n                        message:` Salary data fetched successfully from ${fromMonth} to ${toMonth}`,\r\n                        data: salaryData,\r\n                      });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            res.status(500).json({\r\n                success:false,\r\n                message:\"Server Error\",\r\n                error:error.message\r\n            })\r\n        }\r\n    },\r\n\r\n    GetEPS\r\n}"
        }
    ]
}