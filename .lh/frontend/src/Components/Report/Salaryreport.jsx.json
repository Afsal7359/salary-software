{
    "sourceFile": "frontend/src/Components/Report/Salaryreport.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 127,
            "patches": [
                {
                    "date": 1704782203361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704782241222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n   }\r\n   \r\n   console.log(Data,\":;;;;dddddddata\");\r\n    }\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n   return (\r\n     <>\r\n     <PageHeader headerdata={headerdata}/>\r\n     {/* <div>\r\n"
                },
                {
                    "date": 1704782265579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,8 @@\n     }\r\n const responses = await GetSalaryComponent\r\n if(responses.success){\r\n   setSalaryComponent(response.data)\r\n-  toast.success(response.message)\r\n }else{\r\n   toast.error(response.message)\r\n }\r\n \r\n"
                },
                {
                    "date": 1704782333681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,187 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+const responses = await GetSalaryComponent\r\n+if(responses.success){\r\n+  setSalaryComponent(responses.data)\r\n+}else{\r\n+  toast.error(response.message)\r\n+}\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+  console.log(Data,\":;;;;dddddddata\");\r\n+   }\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704782341048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n const responses = await GetSalaryComponent\r\n if(responses.success){\r\n   setSalaryComponent(responses.data)\r\n }else{\r\n-  toast.error(response.message)\r\n+  toast.error(responses.message)\r\n }\r\n \r\n   } catch (error) {\r\n     console.log(error);\r\n"
                },
                {
                    "date": 1704782706664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,201 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+  console.log(Data,\":;;;;dddddddata\");\r\n+   }\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704782803584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,8 +179,11 @@\n                         <th>N.O Of Days In Month</th>\r\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n+                       { salaryComponent.map((index,data)=>(\r\n+                          <th>{data.}</th>\r\n+                       ))}\r\n                         <th> </th>\r\n                       </tr>\r\n                       <tr>\r\n \r\n"
                },
                {
                    "date": 1704782822974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n                        { salaryComponent.map((index,data)=>(\r\n-                          <th>{data.}</th>\r\n+                          <th>{data.incrementComponents}</th>\r\n                        ))}\r\n                         <th> </th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704782881194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,204 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+  console.log(Data,\":;;;;dddddddata\");\r\n+   }\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                       {Data.length === 0 && salaryComponent.map((index,data)=>(\r\n+                          <th>{data.incrementComponents}</th>\r\n+                       ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704782958917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                       {Data.length === 0 && salaryComponent.map((index,data)=>(\r\n+                          <th>{data.incrementComponents}</th>\r\n+                       ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783007987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                       {Data.length !== 0 && salaryComponent.map((index,data)=>(\r\n+                          <th>{data.incrementComponents}</th>\r\n+                       ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783142740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,205 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                       {Data.length === 0 ?\"\" : salaryComponent.map((index,data)=>(\r\n+                          <th>{data.incrementComponents}</th>\r\n+                       ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783172759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -180,9 +180,9 @@\n                         <th>N.O Of Days In Month</th>\r\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n-                       {Data.length === 0 ?\"\" : salaryComponent.map((index,data)=>(\r\n+                       {Data.length === 0 ?\"NoData\" : salaryComponent.map((index,data)=>(\r\n                           <th>{data.incrementComponents}</th>\r\n                        ))}\r\n                         <th> </th>\r\n                       </tr>\r\n"
                },
                {
                    "date": 1704783182193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,1197 +201,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       {Data.length !== 0 && salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       {Data.length === 0 && salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n-  console.log(Data,\":;;;;dddddddata\");\r\n-   }\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       {Data.length === 0 && salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n-  console.log(Data,\":;;;;dddddddata\");\r\n-   }\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       { salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-const responses = await GetSalaryComponent\r\n-if(responses.success){\r\n-  setSalaryComponent(responses.data)\r\n-}else{\r\n-  toast.error(responses.message)\r\n-}\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n-  console.log(Data,\":;;;;dddddddata\");\r\n-   }\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-const responses = await GetSalaryComponent\r\n-if(responses.success){\r\n-  setSalaryComponent(response.data)\r\n-}else{\r\n-  toast.error(response.message)\r\n-}\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n-  console.log(Data,\":;;;;dddddddata\");\r\n-   }\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783457413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,8 +171,13 @@\n                       <tr>\r\n                        <th><div>Employee Master data</div></th>\r\n                        <th><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n+                            {salaryComponent.map((data, index) => (\r\n+                  <th key={index} colSpan=\"2\">\r\n+                    {data.incrementComponents} / {data.decrementComponents}\r\n+                  </th>\r\n+                ))}\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>Employee Name</th>\r\n"
                },
                {
                    "date": 1704783466902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                            {salaryComponent.map((data, index) => (\r\n+                  <th key={index} colSpan=\"2\">\r\n+                    {data.incrementComponents} / {data.decrementComponents}\r\n+                  </th>\r\n+                ))}\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                       {/* {Data.length === 0 ?\"NoData\" : salaryComponent.map((index,data)=>(\r\n+                          <th>{data.incrementComponents}</th>\r\n+                       ))} */}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783548309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        <th key={index} colSpan=\"2\">\r\n+                          {data.incrementComponents} / {data.decrementComponents}\r\n+                        </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783572276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  })\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        <th key={index} colSpan=\"2\">\r\n+                          {data.incrementComponents}\r\n+                        </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783613774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,207 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        <th key={index} colSpan=\"2\">\r\n+                          {data.incrementComponents}\r\n+                        </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783630852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        <th key={index} colSpan=\"2\">\r\n+                          {data.incrementComponents}\r\n+                        </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783694424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        <th key={index} >\r\n+                          {data.incrementComponents}\r\n+                        </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783719604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,1254 +204,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                        <th key={index} colSpan=\"2\">\r\n-                          {data.incrementComponents}\r\n-                        </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                        <th key={index} colSpan=\"2\">\r\n-                          {data.incrementComponents}\r\n-                        </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                        <th key={index} colSpan=\"2\">\r\n-                          {data.incrementComponents}\r\n-                        </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                        <th key={index} colSpan=\"2\">\r\n-                          {data.incrementComponents} / {data.decrementComponents}\r\n-                        </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                            {salaryComponent.map((data, index) => (\r\n-                  <th key={index} colSpan=\"2\">\r\n-                    {data.incrementComponents} / {data.decrementComponents}\r\n-                  </th>\r\n-                ))}\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       {/* {Data.length === 0 ?\"NoData\" : salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))} */}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  })\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                            {salaryComponent.map((data, index) => (\r\n-                  <th key={index} colSpan=\"2\">\r\n-                    {data.incrementComponents} / {data.decrementComponents}\r\n-                  </th>\r\n-                ))}\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                       {Data.length === 0 ?\"NoData\" : salaryComponent.map((index,data)=>(\r\n-                          <th>{data.incrementComponents}</th>\r\n-                       ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704783880053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,11 +182,13 @@\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n                         {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                        <th key={index} >\r\n-                          {data.incrementComponents}\r\n-                        </th>\r\n+                         <th>\r\n+                            {Array.isArray(data.incrementComponents) && data.incrementComponents.map((item, itemIndex) => (\r\n+                              <p key={itemIndex}>{item.name}</p>\r\n+                            ))}\r\n+                          </th>\r\n                         ))}\r\n                         <th> </th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704783935645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,10 @@\n                         <th>Eligible Pay</th>\r\n                         {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n                          <th>\r\n                             {Array.isArray(data.incrementComponents) && data.incrementComponents.map((item, itemIndex) => (\r\n-                              <p key={itemIndex}>{item.name}</p>\r\n+                              <p key={itemIndex}>{item.name}{ console.log(item.name)}</p>\r\n+                             \r\n                             ))}\r\n                           </th>\r\n                         ))}\r\n                         <th> </th>\r\n"
                },
                {
                    "date": 1704783955012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n                         <th>Eligible Pay</th>\r\n                         {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n                          <th>\r\n                             {Array.isArray(data.incrementComponents) && data.incrementComponents.map((item, itemIndex) => (\r\n-                              <p key={itemIndex}>{item.name}{ console.log(item.name)}</p>\r\n+                              <p key={itemIndex}>{item.name}{ console.log(item.name,\"nnnnnnname\")}</p>\r\n                              \r\n                             ))}\r\n                           </th>\r\n                         ))}\r\n"
                },
                {
                    "date": 1704784116624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,14 +182,26 @@\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n                         {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n-                         <th>\r\n-                            {Array.isArray(data.incrementComponents) && data.incrementComponents.map((item, itemIndex) => (\r\n-                              <p key={itemIndex}>{item.name}{ console.log(item.name,\"nnnnnnname\")}</p>\r\n-                             \r\n-                            ))}\r\n-                          </th>\r\n+                          <tr key={index}>\r\n+                            {/* Other table cells */}\r\n+                            {Array.isArray(data.incrementComponents) && (\r\n+                              <td>\r\n+                                {data.incrementComponents.map((item, itemIndex) => (\r\n+                                  <div key={itemIndex}>{item.name}</div>\r\n+                                ))}\r\n+                              </td>\r\n+                            )}\r\n+                            {Array.isArray(data.decrementComponents) && (\r\n+                              <td>\r\n+                                {data.decrementComponents.map((item, itemIndex) => (\r\n+                                  <div key={itemIndex}>{item.name}</div>\r\n+                                ))}\r\n+                              </td>\r\n+                            )}\r\n+                            {/* Other table cells */}\r\n+                          </tr>\r\n                         ))}\r\n                         <th> </th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704787135231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                               <td>\r\n                                 {data.incrementComponents.map((item, itemIndex) => (\r\n                                   <div key={itemIndex}>{item.name}</div>\r\n                                 ))}\r\n-                              </td>\r\n+                               </td>\r\n                             )}\r\n                             {Array.isArray(data.decrementComponents) && (\r\n                               <td>\r\n                                 {data.decrementComponents.map((item, itemIndex) => (\r\n"
                },
                {
                    "date": 1704790554256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n   const tableData = ['A', 'B', 'C', 'D'];\r\n \r\n   const [matchingElements, setMatchingElements] = useState([]);\r\n \r\n-  const [salaryComponent,setSalaryComponent]=useState('');\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n   const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n   const [fromMonth,setFromMonth]=useState('');\r\n   const [toMonth,setToMonth]=useState('');\r\n   const [Data,setData]=useState('');\r\n@@ -181,25 +181,22 @@\n                         <th>N.O Of Days In Month</th>\r\n                         <th>Loss Of Pay Days</th>\r\n                         <th>Loss Of Pay</th>\r\n                         <th>Eligible Pay</th>\r\n-                        {Array.isArray(salaryComponent) && salaryComponent.map((data, index) => (\r\n+                        {salaryComponent.map((data, index) => (\r\n                           <tr key={index}>\r\n                             {/* Other table cells */}\r\n-                            {Array.isArray(data.incrementComponents) && (\r\n-                              <td>\r\n+                            \r\n                                 {data.incrementComponents.map((item, itemIndex) => (\r\n                                   <div key={itemIndex}>{item.name}</div>\r\n                                 ))}\r\n-                               </td>\r\n-                            )}\r\n-                            {Array.isArray(data.decrementComponents) && (\r\n+                            {/* {Array.isArray(data.decrementComponents) && (\r\n                               <td>\r\n                                 {data.decrementComponents.map((item, itemIndex) => (\r\n                                   <div key={itemIndex}>{item.name}</div>\r\n                                 ))}\r\n                               </td>\r\n-                            )}\r\n+                            )} */}\r\n                             {/* Other table cells */}\r\n                           </tr>\r\n                         ))}\r\n                         <th> </th>\r\n"
                },
                {
                    "date": 1704790620327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            {/* Other table cells */}\r\n+                            \r\n+                                {data.incrementComponents.map((item, itemIndex) => (\r\n+                                  <div key={itemIndex}>{item.name}</div>\r\n+                                ))}\r\n+                         \r\n+                            {/* Other table cells */}\r\n+                          </tr>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790687741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,212 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                                {/* {data.incrementComponents.map((item, itemIndex) => (\r\n+                                  <div key={itemIndex}>{item.name}</div>\r\n+                                ))} */}\r\n+                         \r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790750036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790772734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790798425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        \r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790823143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Gross Salary</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790868586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th> </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790881600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704790897594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -193,8 +193,9 @@\n                             {data.name}\r\n                           </th>\r\n                         ))}\r\n                         <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n                       </tr>\r\n                       <tr>\r\n \r\n                       </tr>\r\n@@ -210,1719 +211,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Gross Salary</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        \r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                                {/* {data.incrementComponents.map((item, itemIndex) => (\r\n-                                  <div key={itemIndex}>{item.name}</div>\r\n-                                ))} */}\r\n-                         \r\n-                          </th>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.map((data, index) => (\r\n-                          <tr key={index}>\r\n-                            {/* Other table cells */}\r\n-                            \r\n-                                {data.incrementComponents.map((item, itemIndex) => (\r\n-                                  <div key={itemIndex}>{item.name}</div>\r\n-                                ))}\r\n-                         \r\n-                            {/* Other table cells */}\r\n-                          </tr>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.map((data, index) => (\r\n-                          <tr key={index}>\r\n-                            {/* Other table cells */}\r\n-                            \r\n-                                {data.incrementComponents.map((item, itemIndex) => (\r\n-                                  <div key={itemIndex}>{item.name}</div>\r\n-                                ))}\r\n-                            {/* {Array.isArray(data.decrementComponents) && (\r\n-                              <td>\r\n-                                {data.decrementComponents.map((item, itemIndex) => (\r\n-                                  <div key={itemIndex}>{item.name}</div>\r\n-                                ))}\r\n-                              </td>\r\n-                            )} */}\r\n-                            {/* Other table cells */}\r\n-                          </tr>\r\n-                        ))}\r\n-                        <th> </th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791244113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={2}><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791252242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                     <div className=\"table-responsive\">\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n-                       <th colSpan={2}><div>Employee Master data</div></th>\r\n+                       <th colSpan={6}><div>Employee Master data</div></th>\r\n                        <th><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704791262459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791277070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={8}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791375396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={salaryComponent.incrementComponents.length}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791397655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791444271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}><div style={{justifyContent:\"center\"}}>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791466149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                     <div className=\"table-responsive\">\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n-                       <th colSpan={7}><div style={{justifyContent:\"center\"}}>Employee Master data</div></th>\r\n+                       <th colSpan={7}  style={{justifyContent:\"center\"}}><div>Employee Master data</div></th>\r\n                        <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704791477085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}  style={{alignItems:\"center\"}}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791493513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                     <div className=\"table-responsive\">\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n-                       <th colSpan={7}  style={{alignItems:\"center\"}}><div>Employee Master data</div></th>\r\n+                       <th colSpan={7}  style={{flex:3}}><div>Employee Master data</div></th>\r\n                        <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704791507059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                       <th colSpan={7}  style={{justifyItems:\"center\"}}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791535545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,654 +168,9 @@\n                 (<p className='m-3'>No Data Available</p>):(\r\n                     <div className=\"table-responsive\">\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}  style={{justifyItems:\"center\"}}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}  style={{flex:3}}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}  style={{justifyContent:\"center\"}}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n+                      <tr style={{justifyContent:\"center\"}}>\r\n                        <th colSpan={7}><div>Employee Master data</div></th>\r\n                        <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n@@ -856,1080 +211,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={salaryComponent.incrementComponents.length}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={8}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th colSpan={6}><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                       <th><div>Employee Master data</div></th>\r\n-                       <th><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791542675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{alignItems:\"center\"}}>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791575595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791592339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791600514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n                        <th  style={{border:\"2px solid\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n@@ -211,650 +211,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{alignItems:\"center\"}}>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{justifyContent:\"center\"}}>\r\n-                       <th colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791662178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n                     <div className=\"table-responsive\">\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n                        <th  style={{border:\"2px solid\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n                        <th><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n"
                },
                {
                    "date": 1704791691319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,10 +170,10 @@\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th><div>Deduction</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th style={{textAlign:\"center\"}}><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>Employee Name</th>\r\n"
                },
                {
                    "date": 1704791710763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th style={{textAlign:\"center\"}}><div>Deduction</div></th>\r\n+                       <th style={{border:\"2px solid\",textAlign:\"center\"}}><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>Employee Name</th>\r\n"
                },
                {
                    "date": 1704791745104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th style={{border:\"2px solid\",textAlign:\"center\"}}><div>Deduction</div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={salaryComponent.incrementComponents.length}><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>Employee Name</th>\r\n"
                },
                {
                    "date": 1704791761708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,9 +171,9 @@\n                     <thead>\r\n                       <tr style={{border:\"2px solid\"}}>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n                        <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{textAlign:\"center\"}} colSpan={salaryComponent.incrementComponents.length}><div>Deduction</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={salaryComponent.incrementComponents.length}><div>Deduction</div></th>\r\n                       </tr>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>Employee Name</th>\r\n"
                },
                {
                    "date": 1704791816379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={salaryComponent.decrementComponents.length}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704791853147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,215 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793183837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+   salaryComponent.forEach(item => {\r\n+    if (item.type) {\r\n+      if (item.type === 'Increment') {\r\n+        incrementComponents.push(item);\r\n+      } else if (item.type === 'Decrement') {\r\n+        decrementComponents.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+   \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793226073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+   salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.type === 'Increment') {\r\n+        incrementComponents.push(item);\r\n+      } else if (item.type === 'Decrement') {\r\n+        decrementComponents.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+   \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793258172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+   salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === 'Decrement') {\r\n+        decrementComponents.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+   \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793301383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,229 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+   salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '')\r\n+    }\r\n+  });\r\n+   \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793418249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,234 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793457611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,234 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   salaryComponent& salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793530681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,8 +82,10 @@\n    const permenantstaff =[]\r\n    const dailywagestaff =[]\r\n    const contractstaff =[]\r\n \r\n+   if (Array.isArray(salaryComponent)) {\r\n+\r\n    salaryComponent& salaryComponent.forEach(item => {\r\n     if (item.EmployeeTypeId) {\r\n       if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n         permenantstaff.push(item);\r\n@@ -93,242 +95,11 @@\n         contractstaff.push(item);\r\n       }\r\n     }\r\n   });\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n+}else{\r\n   \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n }\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n   console.log(permenantstaff,\"permenant staff\");\r\n   console.log(dailywagestaff,\"dailwage staff\");\r\n   console.log(contractstaff,\"Cotract staff\"); \r\n   return (\r\n@@ -464,1566 +235,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-   salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '')\r\n-    }\r\n-  });\r\n-   \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-   salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === 'Decrement') {\r\n-        decrementComponents.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-   \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-   salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.type === 'Increment') {\r\n-        incrementComponents.push(item);\r\n-      } else if (item.type === 'Decrement') {\r\n-        decrementComponents.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-   \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-   salaryComponent.forEach(item => {\r\n-    if (item.type) {\r\n-      if (item.type === 'Increment') {\r\n-        incrementComponents.push(item);\r\n-      } else if (item.type === 'Decrement') {\r\n-        decrementComponents.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-   \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={salaryComponent.decrementComponents.length}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={salaryComponent.incrementComponents.length}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793540250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Array.isArray(salaryComponent)) {\r\n+\r\n+   salaryComponent& salaryComponent.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704793646588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n    const permenantstaff =[]\r\n    const dailywagestaff =[]\r\n    const contractstaff =[]\r\n \r\n-   if (Array.isArray(salaryComponent)) {\r\n+   if (salaryComponent.length >0) {\r\n \r\n    salaryComponent& salaryComponent.forEach(item => {\r\n     if (item.EmployeeTypeId) {\r\n       if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n"
                },
                {
                    "date": 1704793662150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n    const contractstaff =[]\r\n \r\n    if (salaryComponent.length >0) {\r\n \r\n-   salaryComponent& salaryComponent.forEach(item => {\r\n+   salaryComponent&&salaryComponent.forEach(item => {\r\n     if (item.EmployeeTypeId) {\r\n       if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n         permenantstaff.push(item);\r\n       } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n"
                },
                {
                    "date": 1704793690790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,239 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                      <tr>\r\n+\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704795895799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,11 @@\n                         <th>Total Deduction </th>\r\n                         <th>Total Net Amount</th>\r\n                       </tr>\r\n                       <tr>\r\n-\r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <th>{data.}</th>\r\n+                          ))}\r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                     </tbody>\r\n@@ -235,483 +237,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (salaryComponent.length >0) {\r\n-\r\n-   salaryComponent&&salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Array.isArray(salaryComponent)) {\r\n-\r\n-   salaryComponent& salaryComponent.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  \r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704795927036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,8 +221,9 @@\n                         <th>Total Net Amount</th>\r\n                       </tr>\r\n                       <tr>\r\n                           {permenantstaff.map((data,index)=>(\r\n+                            <th>{data.name}</th>\r\n                             <th>{data.}</th>\r\n                           ))}\r\n                       </tr>\r\n                     </thead>\r\n"
                },
                {
                    "date": 1704795970545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,10 +221,13 @@\n                         <th>Total Net Amount</th>\r\n                       </tr>\r\n                       <tr>\r\n                           {permenantstaff.map((data,index)=>(\r\n+                            <div>\r\n                             <th>{data.name}</th>\r\n-                            <th>{data.}</th>\r\n+                            <th>{data.EmployeeType}</th>\r\n+                            th\r\n+                            </div>\r\n                           ))}\r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n"
                },
                {
                    "date": 1704795997611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,9 +224,9 @@\n                           {permenantstaff.map((data,index)=>(\r\n                             <div>\r\n                             <th>{data.name}</th>\r\n                             <th>{data.EmployeeType}</th>\r\n-                            th\r\n+                            <th>{data.basicSalary}</th>\r\n                             </div>\r\n                           ))}\r\n                       </tr>\r\n                     </thead>\r\n"
                },
                {
                    "date": 1704796050882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                             <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704796177799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n                         <th>Total Net Amount</th>\r\n                       </tr>\r\n                      \r\n                           {permenantstaff.map((data,index)=>(\r\n-                             <tr>\r\n+                            <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             </tr>\r\n"
                },
                {
                    "date": 1704796383662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,8 +225,11 @@\n                             <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n+                            <td> {salaryComponent.decrementComponents.map((data, index) => (\r\n+                              <td></td>\r\n+                             ))}</td>\r\n                             </tr>\r\n                           ))}\r\n                       \r\n                     </thead>\r\n"
                },
                {
                    "date": 1704796635397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,11 +225,11 @@\n                             <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n-                            <td> {salaryComponent.decrementComponents.map((data, index) => (\r\n-                              <td></td>\r\n-                             ))}</td>\r\n+                            <td> {salaryComponent.forEach(item =>{\r\n+                              \r\n+                            })}</td>\r\n                             </tr>\r\n                           ))}\r\n                       \r\n                     </thead>\r\n"
                },
                {
                    "date": 1704796888952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,250 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td> {salaryComponent.forEach(item =>{\r\n+                              if(item.type == \"days\"){\r\n+                                return   <td>{data[item.id]}</td>\r\n+                                }\r\n+                            })}</td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704798194923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             <td> {salaryComponent.forEach(item =>{\r\n-                              if(item.type == \"days\"){\r\n+                              if(item._id == data.){\r\n                                 return   <td>{data[item.id]}</td>\r\n                                 }\r\n                             })}</td>\r\n                             </tr>\r\n"
                },
                {
                    "date": 1704798214844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             <td> {salaryComponent.forEach(item =>{\r\n-                              if(item._id == data.){\r\n+                              if(item._id == data.tabledata                                ){\r\n                                 return   <td>{data[item.id]}</td>\r\n                                 }\r\n                             })}</td>\r\n                             </tr>\r\n@@ -246,498 +246,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td> {salaryComponent.forEach(item =>{\r\n-                              \r\n-                            })}</td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <div>\r\n-                            <th>{data.name}</th>\r\n-                            <th>{data.EmployeeType}</th>\r\n-                            <th>{data.basicSalary}</th>\r\n-                            </div>\r\n-                          ))}\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704798283472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             <td> {salaryComponent.forEach(item =>{\r\n-                              if(item._id == data.tabledata                                ){\r\n+                              if(item._id == data.tabledata.map((datas)=>(datas))                                ){\r\n                                 return   <td>{data[item.id]}</td>\r\n                                 }\r\n                             })}</td>\r\n                             </tr>\r\n"
                },
                {
                    "date": 1704798525540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,11 +225,11 @@\n                             <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n-                            <td> {salaryComponent.forEach(item =>{\r\n-                              if(item._id == data.tabledata.map((datas)=>(datas))                                ){\r\n-                                return   <td>{data[item.id]}</td>\r\n+                            <td> {data.salaryComponent.forEach(item =>{\r\n+                              if(item._id === salaryComponent.map((datas)=>(datas.salaryComponent._id))){\r\n+                                return   <td>{item.name}</td>\r\n                                 }\r\n                             })}</td>\r\n                             </tr>\r\n                           ))}\r\n"
                },
                {
                    "date": 1704798621453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,13 +225,15 @@\n                             <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n-                            <td> {data.salaryComponent.forEach(item =>{\r\n-                              if(item._id === salaryComponent.map((datas)=>(datas.salaryComponent._id))){\r\n-                                return   <td>{item.name}</td>\r\n-                                }\r\n-                            })}</td>\r\n+                            <td>{data.salaryComponent.map((item, itemIndex) => (\r\n+                            <React.Fragment key={itemIndex}>\r\n+                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n+                                <td>{item.name}</td>\r\n+                              )}\r\n+                            </React.Fragment>\r\n+                          ))}</td>\r\n                             </tr>\r\n                           ))}\r\n                       \r\n                     </thead>\r\n"
                },
                {
                    "date": 1704798668389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,252 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{data.tabledata.salaryComponent.map((item, itemIndex) => (\r\n+                            <React.Fragment key={itemIndex}>\r\n+                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n+                                <td>{item.name}</td>\r\n+                              )}\r\n+                            </React.Fragment>\r\n+                          ))}</td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704798713705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,252 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{data.tabledata.map((item, itemIndex) => (\r\n+                            <React.Fragment key={itemIndex}>\r\n+                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n+                                <td>{item.name}</td>\r\n+                              )}\r\n+                            </React.Fragment>\r\n+                          ))}</td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704798768386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,15 +225,18 @@\n                             <tr>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n-                            <td>{data.tabledata.map((item, itemIndex) => (\r\n-                            <React.Fragment key={itemIndex}>\r\n-                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n-                                <td>{item.name}</td>\r\n-                              )}\r\n-                            </React.Fragment>\r\n-                          ))}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((item, itemIndex) => {\r\n+                                const isItemInSalaryComponent = Array.isArray(salaryComponent) && salaryComponent.some(salaryItem => salaryItem._id === item._id);\r\n+                                return (\r\n+                                  <React.Fragment key={itemIndex}>\r\n+                                    {isItemInSalaryComponent && <td>{item.name}</td>}\r\n+                                  </React.Fragment>\r\n+                                );\r\n+                              })}\r\n+                            </td>\r\n                             </tr>\r\n                           ))}\r\n                       \r\n                     </thead>\r\n"
                },
                {
                    "date": 1704798832697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,255 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((item, itemIndex) => {\r\n+                                const isItemInSalaryComponent =  salaryComponent.some(salaryItem => salaryItem._id === item._id);\r\n+                                return (\r\n+                                  <React.Fragment key={itemIndex}>\r\n+                                    {isItemInSalaryComponent && <td>{item.name}</td>}\r\n+                                  </React.Fragment>\r\n+                                );\r\n+                              })}\r\n+                            </td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704799106741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             <td>\r\n                               {data.tabledata.map((item, itemIndex) => {\r\n-                                const isItemInSalaryComponent =  salaryComponent.some(salaryItem => salaryItem._id === item._id);\r\n+                                const isItemInSalaryComponent =  salaryComponent.incrementComponents.some(salaryItem => salaryItem._id === item._id);\r\n                                 return (\r\n                                   <React.Fragment key={itemIndex}>\r\n                                     {isItemInSalaryComponent && <td>{item.name}</td>}\r\n                                   </React.Fragment>\r\n"
                },
                {
                    "date": 1704801222446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,256 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name===data.name){\r\n+                                      return <span key={itemIndex+'i'+index}>{item.value[\r\n+                                        data[`days_${item.label}`]?data[`days_\r\n+                                        ${item.label}`]:'N/A']}/nbsp;</span>;\r\n+                                        }\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801290670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name === data.salaryComponent.name){\r\n+                                      return <td>{data.salaryComponent.}</td>\r\n+                                        }\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801314248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name === data.salaryComponent.name){\r\n+                                      return <td>{data.price}</td>\r\n+                                        }\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801371174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,255 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name === data.salaryComponent.name){\r\n+                                      console.log(data.price,\"dsssssssssssata\");\r\n+                                      return <td>{data.price}</td>\r\n+                                        }\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801406283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,8 +232,9 @@\n                                     if(item.name === data.salaryComponent.name){\r\n                                       console.log(data.price,\"dsssssssssssata\");\r\n                                       return <td>{data.price}</td>\r\n                                         }\r\n+                                        {data.price}\r\n                                   });\r\n                               })}\r\n                             </td>\r\n                             </tr>\r\n"
                },
                {
                    "date": 1704801439125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,257 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name === data.salaryComponent.name){\r\n+                                      console.log(data.price,\"dsssssssssssata\");\r\n+                                      return <td>{data.price}</td>\r\n+                                        }\r\n+                                      {data.price}\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            <td>{data.price}</td>\r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801458001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,9 +236,9 @@\n                                       {data.price}\r\n                                   });\r\n                               })}\r\n                             </td>\r\n-                            <td>{data.price}</td>\r\n+                            \r\n                             </tr>\r\n                           ))}\r\n                       \r\n                     </thead>\r\n"
                },
                {
                    "date": 1704801658771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,256 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                              {data.tabledata.map((data, itemIndex) => {\r\n+                                  salaryComponent.incrementComponents.forEach(item => {\r\n+                                    if(item.name === data.salaryComponent.name){\r\n+                                      console.log(data.price,\"dsssssssssssata\");\r\n+                                      return <td>{data.price}</td>\r\n+                                        }\r\n+                                  });\r\n+                              })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801789606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr>\r\n+                     \r\n+                          {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                            {/* Matching and rendering increment components */}\r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))}\r\n+                      \r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704801995759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+  <th>SL NO</th>\r\n+  <th>Employee Name</th>\r\n+  <th>Employee Type</th>\r\n+  <th>Basic Pay</th>\r\n+  <th>N.O Of Days In Month</th>\r\n+  <th>Loss Of Pay Days</th>\r\n+  <th>Loss Of Pay</th>\r\n+  <th>Eligible Pay</th>\r\n+  {/* Headers for increment components */}\r\n+  {salaryComponent.incrementComponents.map((data, index) => (\r\n+    <th key={index}>{data.name}</th>\r\n+  ))}\r\n+  <th>Total Earnings</th>\r\n+  {/* Headers for decrement components */}\r\n+  {salaryComponent.decrementComponents.map((data, index) => (\r\n+    <th key={index}>{data.name}</th>\r\n+  ))}\r\n+  <th>Total Deduction</th>\r\n+  <th>Total Net Amount</th>\r\n+</tr>\r\n+\r\n+{permenantstaff.map((data, index) => (\r\n+  <tr key={index}>\r\n+    <td>{/* SL NO */}</td>\r\n+    <td>{data.name}</td>\r\n+    <td>{data.EmployeeType}</td>\r\n+    <td>{data.basicSalary}</td>\r\n+    <td>{/* N.O Of Days In Month */}</td>\r\n+    <td>{/* Loss Of Pay Days */}</td>\r\n+    <td>{/* Loss Of Pay */}</td>\r\n+    <td>{/* Eligible Pay */}</td>\r\n+    {/* Matching and rendering increment components */}\r\n+    {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+      const tableDataMatch = data.tabledata.find(\r\n+        tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+      );\r\n+      return (\r\n+        <td key={incIndex}>\r\n+          {tableDataMatch ? tableDataMatch.price : null}\r\n+        </td>\r\n+      );\r\n+    })}\r\n+    <td>{/* Total Earnings */}</td>\r\n+    {/* Matching and rendering decrement components */}\r\n+    {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+      // Match and retrieve data for deduction components\r\n+      // Similar to the approach used for increment components\r\n+      return (\r\n+        <td key={decIndex}>\r\n+          {/* Render corresponding deduction data */}\r\n+        </td>\r\n+      );\r\n+    })}\r\n+    <td>{/* Total Deduction */}</td>\r\n+    <td>{/* Total Net Amount */}</td>\r\n+  </tr>\r\n+))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802146413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+  <th>SL NO</th>\r\n+  <th>Employee Name</th>\r\n+  <th>Employee Type</th>\r\n+  <th>Basic Pay</th>\r\n+  <th>N.O Of Days In Month</th>\r\n+  <th>Loss Of Pay Days</th>\r\n+  <th>Loss Of Pay</th>\r\n+  <th>Eligible Pay</th>\r\n+  {/* Headers for increment components */}\r\n+  {salaryComponent.incrementComponents.map((data, index) => (\r\n+    <th key={index}>{data.name}</th>\r\n+  ))}\r\n+  <th>Total Earnings</th>\r\n+  {/* Headers for decrement components */}\r\n+  {salaryComponent.decrementComponents.map((data, index) => (\r\n+    <th key={index}>{data.name}</th>\r\n+  ))}\r\n+  <th>Total Deduction</th>\r\n+  <th>Total Net Amount</th>\r\n+</tr>\r\n+{permenantstaff.map((data, index) => (\r\n+  <tr key={index}>\r\n+    <td>{/* SL NO */}</td>\r\n+    <td>{data.name}</td>\r\n+    <td>{data.EmployeeType}</td>\r\n+    <td>{data.basicSalary}</td>\r\n+    <td>{/* N.O Of Days In Month */}</td>\r\n+    <td>{/* Loss Of Pay Days */}</td>\r\n+    <td>{/* Loss Of Pay */}</td>\r\n+    <td>{/* Eligible Pay */}</td>\r\n+    \r\n+    {/* Matching and rendering increment components */}\r\n+    {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+      const tableDataMatch = data.tabledata.find(\r\n+        tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+      );\r\n+      return (\r\n+        <td key={incIndex}>\r\n+          {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+        </td>\r\n+      );\r\n+    })}\r\n+    \r\n+    <td>{/* Total Earnings */}</td>\r\n+    \r\n+    {/* Matching and rendering decrement components */}\r\n+    {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+      const tableDataMatch = data.tabledata.find(\r\n+        tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+      );\r\n+      return (\r\n+        <td key={decIndex}>\r\n+          {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+        </td>\r\n+      );\r\n+    })}\r\n+    \r\n+    <td>{/* Total Deduction */}</td>\r\n+    <td>{/* Total Net Amount */}</td>\r\n+  </tr>\r\n+))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802297989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+                          <th>SL NO</th>\r\n+                          <th>Employee Name</th>\r\n+                          <th>Employee Type</th>\r\n+                          <th>Basic Pay</th>\r\n+                          <th>N.O Of Days In Month</th>\r\n+                          <th>Loss Of Pay Days</th>\r\n+                          <th>Loss Of Pay</th>\r\n+                          <th>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Deduction</th>\r\n+                          <th>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{/* SL NO */}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{data.}</td>\r\n+                            <td>{/* Loss Of Pay Days */}</td>\r\n+                            <td>{/* Loss Of Pay */}</td>\r\n+                            <td>{/* Eligible Pay */}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Earnings */}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Deduction */}</td>\r\n+                            <td>{/* Total Net Amount */}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802306530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,9 +268,9 @@\n                             <td>{/* SL NO */}</td>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n-                            <td>{data.}</td>\r\n+                            <td>{}</td>\r\n                             <td>{/* Loss Of Pay Days */}</td>\r\n                             <td>{/* Loss Of Pay */}</td>\r\n                             <td>{/* Eligible Pay */}</td>\r\n                             \r\n@@ -317,3449 +317,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      {/* <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr> */}\r\n-                     \r\n-                          {/* {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                       \r\n-                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                                    const tableDataMatch = data.tabledata.find(\r\n-                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                                    );\r\n-                                    return (\r\n-                                      <td key={incIndex}>\r\n-                                        {tableDataMatch ? tableDataMatch.price : null}\r\n-                                      </td>\r\n-                                    );\r\n-                                  })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))} */}\r\n-                      <tr>\r\n-  <th>SL NO</th>\r\n-  <th>Employee Name</th>\r\n-  <th>Employee Type</th>\r\n-  <th>Basic Pay</th>\r\n-  <th>N.O Of Days In Month</th>\r\n-  <th>Loss Of Pay Days</th>\r\n-  <th>Loss Of Pay</th>\r\n-  <th>Eligible Pay</th>\r\n-  {/* Headers for increment components */}\r\n-  {salaryComponent.incrementComponents.map((data, index) => (\r\n-    <th key={index}>{data.name}</th>\r\n-  ))}\r\n-  <th>Total Earnings</th>\r\n-  {/* Headers for decrement components */}\r\n-  {salaryComponent.decrementComponents.map((data, index) => (\r\n-    <th key={index}>{data.name}</th>\r\n-  ))}\r\n-  <th>Total Deduction</th>\r\n-  <th>Total Net Amount</th>\r\n-</tr>\r\n-{permenantstaff.map((data, index) => (\r\n-  <tr key={index}>\r\n-    <td>{/* SL NO */}</td>\r\n-    <td>{data.name}</td>\r\n-    <td>{data.EmployeeType}</td>\r\n-    <td>{data.basicSalary}</td>\r\n-    <td>{/* N.O Of Days In Month */}</td>\r\n-    <td>{/* Loss Of Pay Days */}</td>\r\n-    <td>{/* Loss Of Pay */}</td>\r\n-    <td>{/* Eligible Pay */}</td>\r\n-    \r\n-    {/* Matching and rendering increment components */}\r\n-    {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-      const tableDataMatch = data.tabledata.find(\r\n-        tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-      );\r\n-      return (\r\n-        <td key={incIndex}>\r\n-          {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n-        </td>\r\n-      );\r\n-    })}\r\n-    \r\n-    <td>{/* Total Earnings */}</td>\r\n-    \r\n-    {/* Matching and rendering decrement components */}\r\n-    {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n-      const tableDataMatch = data.tabledata.find(\r\n-        tableItem => tableItem.salaryComponent.name === decComponent.name\r\n-      );\r\n-      return (\r\n-        <td key={decIndex}>\r\n-          {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n-        </td>\r\n-      );\r\n-    })}\r\n-    \r\n-    <td>{/* Total Deduction */}</td>\r\n-    <td>{/* Total Net Amount */}</td>\r\n-  </tr>\r\n-))}\r\n-\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      {/* <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr> */}\r\n-                     \r\n-                          {/* {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                       \r\n-                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                                    const tableDataMatch = data.tabledata.find(\r\n-                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                                    );\r\n-                                    return (\r\n-                                      <td key={incIndex}>\r\n-                                        {tableDataMatch ? tableDataMatch.price : null}\r\n-                                      </td>\r\n-                                    );\r\n-                                  })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))} */}\r\n-                      <tr>\r\n-  <th>SL NO</th>\r\n-  <th>Employee Name</th>\r\n-  <th>Employee Type</th>\r\n-  <th>Basic Pay</th>\r\n-  <th>N.O Of Days In Month</th>\r\n-  <th>Loss Of Pay Days</th>\r\n-  <th>Loss Of Pay</th>\r\n-  <th>Eligible Pay</th>\r\n-  {/* Headers for increment components */}\r\n-  {salaryComponent.incrementComponents.map((data, index) => (\r\n-    <th key={index}>{data.name}</th>\r\n-  ))}\r\n-  <th>Total Earnings</th>\r\n-  {/* Headers for decrement components */}\r\n-  {salaryComponent.decrementComponents.map((data, index) => (\r\n-    <th key={index}>{data.name}</th>\r\n-  ))}\r\n-  <th>Total Deduction</th>\r\n-  <th>Total Net Amount</th>\r\n-</tr>\r\n-\r\n-{permenantstaff.map((data, index) => (\r\n-  <tr key={index}>\r\n-    <td>{/* SL NO */}</td>\r\n-    <td>{data.name}</td>\r\n-    <td>{data.EmployeeType}</td>\r\n-    <td>{data.basicSalary}</td>\r\n-    <td>{/* N.O Of Days In Month */}</td>\r\n-    <td>{/* Loss Of Pay Days */}</td>\r\n-    <td>{/* Loss Of Pay */}</td>\r\n-    <td>{/* Eligible Pay */}</td>\r\n-    {/* Matching and rendering increment components */}\r\n-    {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-      const tableDataMatch = data.tabledata.find(\r\n-        tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-      );\r\n-      return (\r\n-        <td key={incIndex}>\r\n-          {tableDataMatch ? tableDataMatch.price : null}\r\n-        </td>\r\n-      );\r\n-    })}\r\n-    <td>{/* Total Earnings */}</td>\r\n-    {/* Matching and rendering decrement components */}\r\n-    {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n-      // Match and retrieve data for deduction components\r\n-      // Similar to the approach used for increment components\r\n-      return (\r\n-        <td key={decIndex}>\r\n-          {/* Render corresponding deduction data */}\r\n-        </td>\r\n-      );\r\n-    })}\r\n-    <td>{/* Total Deduction */}</td>\r\n-    <td>{/* Total Net Amount */}</td>\r\n-  </tr>\r\n-))}\r\n-\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                            {/* Matching and rendering increment components */}\r\n-                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                                    const tableDataMatch = data.tabledata.find(\r\n-                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                                    );\r\n-                                    return (\r\n-                                      <td key={incIndex}>\r\n-                                        {tableDataMatch ? tableDataMatch.price : null}\r\n-                                      </td>\r\n-                                    );\r\n-                                  })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name === data.salaryComponent.name){\r\n-                                      console.log(data.price,\"dsssssssssssata\");\r\n-                                      return <td>{data.price}</td>\r\n-                                        }\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name === data.salaryComponent.name){\r\n-                                      console.log(data.price,\"dsssssssssssata\");\r\n-                                      return <td>{data.price}</td>\r\n-                                        }\r\n-                                      {data.price}\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name === data.salaryComponent.name){\r\n-                                      console.log(data.price,\"dsssssssssssata\");\r\n-                                      return <td>{data.price}</td>\r\n-                                        }\r\n-                                        {data.price}\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name === data.salaryComponent.name){\r\n-                                      return <td>{data.price}</td>\r\n-                                        }\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name === data.salaryComponent.name){\r\n-                                      return <td>{data.salaryComponent.}</td>\r\n-                                        }\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((data, itemIndex) => {\r\n-                                  salaryComponent.incrementComponents.forEach(item => {\r\n-                                    if(item.name===data.name){\r\n-                                      return <span key={itemIndex+'i'+index}>{item.value[\r\n-                                        data[`days_${item.label}`]?data[`days_\r\n-                                        ${item.label}`]:'N/A']}/nbsp;</span>;\r\n-                                        }\r\n-                                  });\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((item, itemIndex) => {\r\n-                                const isItemInSalaryComponent =  salaryComponent.incrementComponents.some(salaryItem => salaryItem._id === item._id);\r\n-                                return (\r\n-                                  <React.Fragment key={itemIndex}>\r\n-                                    {isItemInSalaryComponent && <td>{item.name}</td>}\r\n-                                  </React.Fragment>\r\n-                                );\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                              {data.tabledata.map((item, itemIndex) => {\r\n-                                const isItemInSalaryComponent = Array.isArray(salaryComponent) && salaryComponent.some(salaryItem => salaryItem._id === item._id);\r\n-                                return (\r\n-                                  <React.Fragment key={itemIndex}>\r\n-                                    {isItemInSalaryComponent && <td>{item.name}</td>}\r\n-                                  </React.Fragment>\r\n-                                );\r\n-                              })}\r\n-                            </td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>{data.tabledata.salaryComponent.map((item, itemIndex) => (\r\n-                            <React.Fragment key={itemIndex}>\r\n-                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n-                                <td>{item.name}</td>\r\n-                              )}\r\n-                            </React.Fragment>\r\n-                          ))}</td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr>\r\n-                     \r\n-                          {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>{data.salaryComponent.map((item, itemIndex) => (\r\n-                            <React.Fragment key={itemIndex}>\r\n-                              {salaryComponent.some(salaryItem => salaryItem._id === item._id) && (\r\n-                                <td>{item.name}</td>\r\n-                              )}\r\n-                            </React.Fragment>\r\n-                          ))}</td>\r\n-                            </tr>\r\n-                          ))}\r\n-                      \r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802348023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,10 +268,10 @@\n                             <td>{/* SL NO */}</td>\r\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n                             <td>{}</td>\r\n-                            <td>{/* Loss Of Pay Days */}</td>\r\n                             <td>{/* Loss Of Pay */}</td>\r\n                             <td>{/* Eligible Pay */}</td>\r\n                             \r\n                             {/* Matching and rendering increment components */}\r\n"
                },
                {
                    "date": 1704802360819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -269,9 +269,9 @@\n                             <td>{data.name}</td>\r\n                             <td>{data.EmployeeType}</td>\r\n                             <td>{data.basicSalary}</td>\r\n                             <td>{30}</td>\r\n-                            <td>{}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n                             <td>{/* Loss Of Pay */}</td>\r\n                             <td>{/* Eligible Pay */}</td>\r\n                             \r\n                             {/* Matching and rendering increment components */}\r\n"
                },
                {
                    "date": 1704802391256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+                          <th>SL NO</th>\r\n+                          <th>Employee Name</th>\r\n+                          <th>Employee Type</th>\r\n+                          <th>Basic Pay</th>\r\n+                          <th>N.O Of Days In Month</th>\r\n+                          <th>Loss Of Pay Days</th>\r\n+                          <th>Loss Of Pay</th>\r\n+                          <th>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Deduction</th>\r\n+                          <th>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{/* SL NO */}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n+                            <td>{data.LossOfPayDays}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n+                            <td>{/* Eligible Pay */}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Earnings */}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Deduction */}</td>\r\n+                            <td>{/* Total Net Amount */}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802416530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -271,9 +271,9 @@\n                             <td>{data.basicSalary}</td>\r\n                             <td>{30}</td>\r\n                             <td>{data.LossOfPayDays}</td>\r\n                             <td>{data.LossOfPay}</td>\r\n-                            <td>{/* Eligible Pay */}</td>\r\n+                            <td>{data.EligiblePay}</td>\r\n                             \r\n                             {/* Matching and rendering increment components */}\r\n                             {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n                               const tableDataMatch = data.tabledata.find(\r\n"
                },
                {
                    "date": 1704802430391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+                          <th>SL NO</th>\r\n+                          <th>Employee Name</th>\r\n+                          <th>Employee Type</th>\r\n+                          <th>Basic Pay</th>\r\n+                          <th>N.O Of Days In Month</th>\r\n+                          <th>Loss Of Pay Days</th>\r\n+                          <th>Loss Of Pay</th>\r\n+                          <th>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Deduction</th>\r\n+                          <th>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{index+1}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n+                            <td>{data.LossOfPayDays}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n+                            <td>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Earnings */}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{/* Total Deduction */}</td>\r\n+                            <td>{/* Total Net Amount */}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802455994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -285,9 +285,9 @@\n                                 </td>\r\n                               );\r\n                             })}\r\n                             \r\n-                            <td>{/* Total Earnings */}</td>\r\n+                            <td>{data.TotalIncrement}</td>\r\n                             \r\n                             {/* Matching and rendering decrement components */}\r\n                             {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n                               const tableDataMatch = data.tabledata.find(\r\n@@ -317,647 +317,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      {/* <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr> */}\r\n-                     \r\n-                          {/* {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                       \r\n-                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                                    const tableDataMatch = data.tabledata.find(\r\n-                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                                    );\r\n-                                    return (\r\n-                                      <td key={incIndex}>\r\n-                                        {tableDataMatch ? tableDataMatch.price : null}\r\n-                                      </td>\r\n-                                    );\r\n-                                  })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))} */}\r\n-                      <tr>\r\n-                          <th>SL NO</th>\r\n-                          <th>Employee Name</th>\r\n-                          <th>Employee Type</th>\r\n-                          <th>Basic Pay</th>\r\n-                          <th>N.O Of Days In Month</th>\r\n-                          <th>Loss Of Pay Days</th>\r\n-                          <th>Loss Of Pay</th>\r\n-                          <th>Eligible Pay</th>\r\n-                          {/* Headers for increment components */}\r\n-                          {salaryComponent.incrementComponents.map((data, index) => (\r\n-                            <th key={index}>{data.name}</th>\r\n-                          ))}\r\n-                          <th>Total Earnings</th>\r\n-                          {/* Headers for decrement components */}\r\n-                          {salaryComponent.decrementComponents.map((data, index) => (\r\n-                            <th key={index}>{data.name}</th>\r\n-                          ))}\r\n-                          <th>Total Deduction</th>\r\n-                          <th>Total Net Amount</th>\r\n-                        </tr>\r\n-                        {permenantstaff.map((data, index) => (\r\n-                          <tr key={index}>\r\n-                            <td>{/* SL NO */}</td>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>{30}</td>\r\n-                            <td>{data.LossOfPayDays}</td>\r\n-                            <td>{data.LossOfPay}</td>\r\n-                            <td>{data.EligiblePay}</td>\r\n-                            \r\n-                            {/* Matching and rendering increment components */}\r\n-                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                              const tableDataMatch = data.tabledata.find(\r\n-                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                              );\r\n-                              return (\r\n-                                <td key={incIndex}>\r\n-                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n-                                </td>\r\n-                              );\r\n-                            })}\r\n-                            \r\n-                            <td>{/* Total Earnings */}</td>\r\n-                            \r\n-                            {/* Matching and rendering decrement components */}\r\n-                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n-                              const tableDataMatch = data.tabledata.find(\r\n-                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n-                              );\r\n-                              return (\r\n-                                <td key={decIndex}>\r\n-                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n-                                </td>\r\n-                              );\r\n-                            })}\r\n-                            \r\n-                            <td>{/* Total Deduction */}</td>\r\n-                            <td>{/* Total Net Amount */}</td>\r\n-                          </tr>\r\n-                        ))}\r\n-\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salaryreport\n-import React, { useMemo,useState,useEffect } from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { GetMonthlyReport } from '../../Apicalls/Report';\r\n-import { toast } from 'react-toastify';\r\n-import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n-\r\n-function Salaryreport() {\r\n-\r\n-    const headerdata = useMemo(()=>{\r\n-        return{\r\n-            data:\"REPORT\",\r\n-            page:\"Salary Monthly Report\"\r\n-        }\r\n-    },[])\r\n-\r\n-    const set1 = ['A', 'B', 'C', 'D'];\r\n-  const set2 = ['C', 'D', 'E', 'F'];\r\n-  const tableData = ['A', 'B', 'C', 'D'];\r\n-\r\n-  const [matchingElements, setMatchingElements] = useState([]);\r\n-\r\n-  const [salaryComponent,setSalaryComponent]=useState([]);\r\n-  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n-  const [fromMonth,setFromMonth]=useState('');\r\n-  const [toMonth,setToMonth]=useState('');\r\n-  const [Data,setData]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-    salarymasterDataFetch();\r\n-  },[Data])\r\n-\r\n-  const salarymasterDataFetch = async()=>{\r\n-    try {\r\n-      if(!issalaryComponentDataFetch){\r\n-        const response=await GetSalaryComponent();\r\n-        if(response.success){\r\n-\t\t\t\t\tsetSalaryComponent(response.data);\r\n-\t\t\t\t}else{\r\n-\t\t\t\t\tsetSalaryComponent([]);\r\n-\t\t\t\t}\r\n-\t\t\t}setissalaryComponentDataFetch(true)\r\n-    } catch (error) {\r\n-      toast.error(error.message)\r\n-    }\r\n-  }\r\n-\r\n-  useEffect(() => {\r\n-    const foundElements = tableData.filter(\r\n-      element => set1.includes(element) && set2.includes(element)\r\n-    );\r\n-    setMatchingElements(foundElements);\r\n-  }, []);\r\n-\r\n-\r\n- \r\n-\r\n-  const handlesubmit =async(event)=>{\r\n-    event.preventDefault();\r\n-  try {\r\n-    const formdata = {\r\n-      fromMonth : fromMonth,\r\n-      toMonth : toMonth,\r\n-    }\r\n-  const response = await GetMonthlyReport(formdata)\r\n-  if (response.success){\r\n-    setData(response.data);\r\n-    toast.success(response.message)\r\n-    }else{\r\n-      toast.error(response.message)\r\n-    }\r\n-\r\n-  } catch (error) {\r\n-    console.log(error);\r\n-    toast.error(error.message);\r\n-  }\r\n-  \r\n- \r\n-   }\r\n-   console.log(Data,\":;;;;dddddddata\");\r\n-   console.log(salaryComponent,\"salaryComponent\");\r\n-\r\n-   const permenantstaff =[]\r\n-   const dailywagestaff =[]\r\n-   const contractstaff =[]\r\n-\r\n-   if (Data.length > 0) {\r\n-\r\n-   Data.forEach(item => {\r\n-    if (item.EmployeeTypeId) {\r\n-      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n-        permenantstaff.push(item);\r\n-      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n-        dailywagestaff.push(item);\r\n-      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n-        contractstaff.push(item);\r\n-      }\r\n-    }\r\n-  });\r\n-}else{\r\n-  console.error(\"salaryComponent is not an array\");\r\n-}\r\n-  console.log(permenantstaff,\"permenant staff\");\r\n-  console.log(dailywagestaff,\"dailwage staff\");\r\n-  console.log(contractstaff,\"Cotract staff\"); \r\n-  return (\r\n-    <>\r\n-    <PageHeader headerdata={headerdata}/>\r\n-    {/* <div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>1 Set of Data</th>\r\n-            <th>Matching Data</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {tableData.map((item, index) => (\r\n-            <tr key={index}>\r\n-              <td>{item}</td>\r\n-              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-    </div> */}\r\n-       <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                  <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>PF REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-\r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                      <form >\r\n-                        \r\n-                            \r\n-                        <a type='button' className=\" me-2\" >\r\n-                          {/* <img src={pdficon} alt=\"\" /> */}\r\n-                          <input\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={fromMonth}\r\n-                            onChange={(e) => setFromMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                        </a>\r\n-                        <a type='button'  className=\" me-2\">\r\n-                          {/* <img src={TXticon} alt=\"\" /> */}\r\n-                          <input\r\n-                            // {...register('toMonth', { required: 'Please select a month' })}\r\n-                          className='form-control'\r\n-                            type=\"date\"\r\n-                            value={toMonth}\r\n-                            onChange={(e) => setToMonth(e.target.value)}\r\n-                            required\r\n-                          />\r\n-                          \r\n-                          </a>\r\n-  \r\n-                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                            Submit\r\n-                        </button>\r\n-                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n-                    \r\n-                        </form>\r\n-                      </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr style={{border:\"2px solid\"}}>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n-                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n-                      </tr>\r\n-                      {/* <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>Employee Name</th>\r\n-                        <th>BasicPay</th>\r\n-                        <th>N.O Of Days In Month</th>\r\n-                        <th>Loss Of Pay Days</th>\r\n-                        <th>Loss Of Pay</th>\r\n-                        <th>Eligible Pay</th>\r\n-                        {salaryComponent.incrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Earnings</th>\r\n-                        {salaryComponent.decrementComponents.map((data, index) => (\r\n-                          <th key={index}>\r\n-                            {data.name}\r\n-                          </th>\r\n-                        ))}\r\n-                        <th>Total Deduction </th>\r\n-                        <th>Total Net Amount</th>\r\n-                      </tr> */}\r\n-                     \r\n-                          {/* {permenantstaff.map((data,index)=>(\r\n-                            <tr>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>\r\n-                       \r\n-                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                                    const tableDataMatch = data.tabledata.find(\r\n-                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                                    );\r\n-                                    return (\r\n-                                      <td key={incIndex}>\r\n-                                        {tableDataMatch ? tableDataMatch.price : null}\r\n-                                      </td>\r\n-                                    );\r\n-                                  })}\r\n-                            </td>\r\n-                            \r\n-                            </tr>\r\n-                          ))} */}\r\n-                      <tr>\r\n-                          <th>SL NO</th>\r\n-                          <th>Employee Name</th>\r\n-                          <th>Employee Type</th>\r\n-                          <th>Basic Pay</th>\r\n-                          <th>N.O Of Days In Month</th>\r\n-                          <th>Loss Of Pay Days</th>\r\n-                          <th>Loss Of Pay</th>\r\n-                          <th>Eligible Pay</th>\r\n-                          {/* Headers for increment components */}\r\n-                          {salaryComponent.incrementComponents.map((data, index) => (\r\n-                            <th key={index}>{data.name}</th>\r\n-                          ))}\r\n-                          <th>Total Earnings</th>\r\n-                          {/* Headers for decrement components */}\r\n-                          {salaryComponent.decrementComponents.map((data, index) => (\r\n-                            <th key={index}>{data.name}</th>\r\n-                          ))}\r\n-                          <th>Total Deduction</th>\r\n-                          <th>Total Net Amount</th>\r\n-                        </tr>\r\n-                        {permenantstaff.map((data, index) => (\r\n-                          <tr key={index}>\r\n-                            <td>{/* SL NO */}</td>\r\n-                            <td>{data.name}</td>\r\n-                            <td>{data.EmployeeType}</td>\r\n-                            <td>{data.basicSalary}</td>\r\n-                            <td>{30}</td>\r\n-                            <td>{data.LossOfPay}</td>\r\n-                            <td>{/* Loss Of Pay */}</td>\r\n-                            <td>{/* Eligible Pay */}</td>\r\n-                            \r\n-                            {/* Matching and rendering increment components */}\r\n-                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n-                              const tableDataMatch = data.tabledata.find(\r\n-                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n-                              );\r\n-                              return (\r\n-                                <td key={incIndex}>\r\n-                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n-                                </td>\r\n-                              );\r\n-                            })}\r\n-                            \r\n-                            <td>{/* Total Earnings */}</td>\r\n-                            \r\n-                            {/* Matching and rendering decrement components */}\r\n-                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n-                              const tableDataMatch = data.tabledata.find(\r\n-                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n-                              );\r\n-                              return (\r\n-                                <td key={decIndex}>\r\n-                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n-                                </td>\r\n-                              );\r\n-                            })}\r\n-                            \r\n-                            <td>{/* Total Deduction */}</td>\r\n-                            <td>{/* Total Net Amount */}</td>\r\n-                          </tr>\r\n-                        ))}\r\n-\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802501107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,321 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                      {/* <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>BasicPay</th>\r\n+                        <th>N.O Of Days In Month</th>\r\n+                        <th>Loss Of Pay Days</th>\r\n+                        <th>Loss Of Pay</th>\r\n+                        <th>Eligible Pay</th>\r\n+                        {salaryComponent.incrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Earnings</th>\r\n+                        {salaryComponent.decrementComponents.map((data, index) => (\r\n+                          <th key={index}>\r\n+                            {data.name}\r\n+                          </th>\r\n+                        ))}\r\n+                        <th>Total Deduction </th>\r\n+                        <th>Total Net Amount</th>\r\n+                      </tr> */}\r\n+                     \r\n+                          {/* {permenantstaff.map((data,index)=>(\r\n+                            <tr>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>\r\n+                       \r\n+                                  {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                                    const tableDataMatch = data.tabledata.find(\r\n+                                      tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                                    );\r\n+                                    return (\r\n+                                      <td key={incIndex}>\r\n+                                        {tableDataMatch ? tableDataMatch.price : null}\r\n+                                      </td>\r\n+                                    );\r\n+                                  })}\r\n+                            </td>\r\n+                            \r\n+                            </tr>\r\n+                          ))} */}\r\n+                      <tr>\r\n+                          <th>SL NO</th>\r\n+                          <th>Employee Name</th>\r\n+                          <th>Employee Type</th>\r\n+                          <th>Basic Pay</th>\r\n+                          <th>N.O Of Days In Month</th>\r\n+                          <th>Loss Of Pay Days</th>\r\n+                          <th>Loss Of Pay</th>\r\n+                          <th>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Deduction</th>\r\n+                          <th>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{index+1}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n+                            <td>{data.LossOfPayDays}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n+                            <td>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalDeduction}</td>\r\n+                            <td>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802553950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                          <th>SL NO</th>\r\n+                          <th>Employee Name</th>\r\n+                          <th>Employee Type</th>\r\n+                          <th>Basic Pay</th>\r\n+                          <th>N.O Of Days In Month</th>\r\n+                          <th>Loss Of Pay Days</th>\r\n+                          <th>Loss Of Pay</th>\r\n+                          <th>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index}>{data.name}</th>\r\n+                          ))}\r\n+                          <th>Total Deduction</th>\r\n+                          <th>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{index+1}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n+                            <td>{data.LossOfPayDays}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n+                            <td>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalDeduction}</td>\r\n+                            <td>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802623581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td>{index+1}</td>\r\n+                            <td>{data.name}</td>\r\n+                            <td>{data.EmployeeType}</td>\r\n+                            <td>{data.basicSalary}</td>\r\n+                            <td>{30}</td>\r\n+                            <td>{data.LossOfPayDays}</td>\r\n+                            <td>{data.LossOfPay}</td>\r\n+                            <td>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td>{data.TotalDeduction}</td>\r\n+                            <td>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802661265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+  console.log(permenantstaff,\"permenant staff\");\r\n+  console.log(dailywagestaff,\"dailwage staff\");\r\n+  console.log(contractstaff,\"Cotract staff\"); \r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802737908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,282 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802789762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = () => {\r\n+  event.preventDefault()\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802934274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault(); \r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704802987886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,284 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault(); \r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803249294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,302 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+      const columnHeader = worksheet[cellAddress] ? worksheet[cellAddress].v : '';\r\n+\r\n+      if (i === range.s.r) { // Header row\r\n+        if (j < 3) { // First 3 columns\r\n+          worksheet[cellAddress].s = { fill: { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } } }; // Grey color\r\n+        } else {\r\n+          worksheet[cellAddress].s = { fill: { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } } }; // Pink color\r\n+        }\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803309942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,10 +108,15 @@\n   const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n   for (let i = range.s.r; i <= range.e.r; ++i) {\r\n     for (let j = range.s.c; j <= range.e.c; ++j) {\r\n       const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n-      const columnHeader = worksheet[cellAddress] ? worksheet[cellAddress].v : '';\r\n \r\n+      if (!worksheet[cellAddress]) {\r\n+        continue; // Skip if the cell is undefined\r\n+      }\r\n+\r\n+      const columnHeader = worksheet[cellAddress].v;\r\n+\r\n       if (i === range.s.r) { // Header row\r\n         if (j < 3) { // First 3 columns\r\n           worksheet[cellAddress].s = { fill: { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } } }; // Grey color\r\n         } else {\r\n@@ -125,8 +130,9 @@\n   XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n   XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n };\r\n \r\n+\r\n   return (\r\n     <>\r\n     <PageHeader headerdata={headerdata}/>\r\n     {/* <div>\r\n"
                },
                {
                    "date": 1704803368792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,326 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803561870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,20 @@\n                             <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n                           </tr>\r\n                         ))}\r\n-\r\n+                         {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          })}\r\n                     </thead>\r\n                     <tbody>\r\n                     </tbody>\r\n                   </table>\r\n"
                },
                {
                    "date": 1704803579022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,337 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+                         {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803655646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,350 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+                         {contractstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+\r\n+                          {dailywagestaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803810434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,350 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+                         {contractstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+\r\n+                          {dailywagestaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803841202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,9 +323,9 @@\n                           ))}\r\n \r\n                           {dailywagestaff.map((data, index) => (\r\n                           <tr key={index}>\r\n-                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+contractstaff.length+1}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n                             <td style={{border:\"2px solid\"}}>{30}</td>\r\n"
                },
                {
                    "date": 1704803899929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,8 +331,10 @@\n                             <td style={{border:\"2px solid\"}}>{30}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n                             <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            <td></td>\r\n+                            <td>haai</td>\r\n                            </tr> \r\n                           ))}\r\n                     </thead>\r\n                     <tbody>\r\n"
                },
                {
                    "date": 1704803944717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,379 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+                         {contractstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+\r\n+                          {dailywagestaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+contractstaff.length+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           \r\n+                           </tr> \r\n+                          ))}\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704803962287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,406 @@\n+import React, { useMemo,useState,useEffect } from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { GetMonthlyReport } from '../../Apicalls/Report';\r\n+import { toast } from 'react-toastify';\r\n+import { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n+import * as XLSX from 'xlsx';\r\n+\r\n+function Salaryreport() {\r\n+\r\n+    const headerdata = useMemo(()=>{\r\n+        return{\r\n+            data:\"REPORT\",\r\n+            page:\"Salary Monthly Report\"\r\n+        }\r\n+    },[])\r\n+\r\n+    const set1 = ['A', 'B', 'C', 'D'];\r\n+  const set2 = ['C', 'D', 'E', 'F'];\r\n+  const tableData = ['A', 'B', 'C', 'D'];\r\n+\r\n+  const [matchingElements, setMatchingElements] = useState([]);\r\n+\r\n+  const [salaryComponent,setSalaryComponent]=useState([]);\r\n+  const [issalaryComponentDataFetch, setissalaryComponentDataFetch]=useState(false);\r\n+  const [fromMonth,setFromMonth]=useState('');\r\n+  const [toMonth,setToMonth]=useState('');\r\n+  const [Data,setData]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+    salarymasterDataFetch();\r\n+  },[Data])\r\n+\r\n+  const salarymasterDataFetch = async()=>{\r\n+    try {\r\n+      if(!issalaryComponentDataFetch){\r\n+        const response=await GetSalaryComponent();\r\n+        if(response.success){\r\n+\t\t\t\t\tsetSalaryComponent(response.data);\r\n+\t\t\t\t}else{\r\n+\t\t\t\t\tsetSalaryComponent([]);\r\n+\t\t\t\t}\r\n+\t\t\t}setissalaryComponentDataFetch(true)\r\n+    } catch (error) {\r\n+      toast.error(error.message)\r\n+    }\r\n+  }\r\n+\r\n+  useEffect(() => {\r\n+    const foundElements = tableData.filter(\r\n+      element => set1.includes(element) && set2.includes(element)\r\n+    );\r\n+    setMatchingElements(foundElements);\r\n+  }, []);\r\n+\r\n+\r\n+ \r\n+\r\n+  const handlesubmit =async(event)=>{\r\n+    event.preventDefault();\r\n+  try {\r\n+    const formdata = {\r\n+      fromMonth : fromMonth,\r\n+      toMonth : toMonth,\r\n+    }\r\n+  const response = await GetMonthlyReport(formdata)\r\n+  if (response.success){\r\n+    setData(response.data);\r\n+    toast.success(response.message)\r\n+    }else{\r\n+      toast.error(response.message)\r\n+    }\r\n+\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+    toast.error(error.message);\r\n+  }\r\n+  \r\n+ \r\n+   }\r\n+   console.log(Data,\":;;;;dddddddata\");\r\n+   console.log(salaryComponent,\"salaryComponent\");\r\n+\r\n+   const permenantstaff =[]\r\n+   const dailywagestaff =[]\r\n+   const contractstaff =[]\r\n+\r\n+   if (Data.length > 0) {\r\n+\r\n+   Data.forEach(item => {\r\n+    if (item.EmployeeTypeId) {\r\n+      if (item.EmployeeTypeId === '6566be7b0085f19cfbfd00c1') {\r\n+        permenantstaff.push(item);\r\n+      } else if (item.EmployeeTypeId === '659bbd63d4d7dd6ffd8dfd7f') {\r\n+        dailywagestaff.push(item);\r\n+      }else if(item.EmployeeTypeId === '659cd2f6a247674dda047a1d'){\r\n+        contractstaff.push(item);\r\n+      }\r\n+    }\r\n+  });\r\n+}else{\r\n+  console.error(\"salaryComponent is not an array\");\r\n+}\r\n+const downloadExcel = (event) => {\r\n+  event.preventDefault();\r\n+\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+\r\n+  // Set colors for specific columns\r\n+  const greyColor = { patternType: 'solid', fgColor: { rgb: 'C0C0C0' } };\r\n+  const pinkColor = { patternType: 'solid', fgColor: { rgb: 'FFC0CB' } };\r\n+\r\n+  const columnColors = [\r\n+    greyColor, // Color for the first column\r\n+    greyColor, // Color for the second column\r\n+    greyColor, // Color for the third column\r\n+    pinkColor, // Color for the fourth column and onwards\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+    pinkColor,\r\n+  ];\r\n+\r\n+  const range = XLSX.utils.decode_range(worksheet['!ref']);\r\n+\r\n+  for (let i = range.s.r; i <= range.e.r; ++i) {\r\n+    for (let j = range.s.c; j <= range.e.c; ++j) {\r\n+      const cellAddress = XLSX.utils.encode_cell({ r: i, c: j });\r\n+\r\n+      if (worksheet[cellAddress] && worksheet[cellAddress].s && columnColors[j]) {\r\n+        worksheet[cellAddress].s = columnColors[j];\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `Report of _${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+\r\n+  return (\r\n+    <>\r\n+    <PageHeader headerdata={headerdata}/>\r\n+    {/* <div>\r\n+      <table>\r\n+        <thead>\r\n+          <tr>\r\n+            <th>1 Set of Data</th>\r\n+            <th>Matching Data</th>\r\n+          </tr>\r\n+        </thead>\r\n+        <tbody>\r\n+          {tableData.map((item, index) => (\r\n+            <tr key={index}>\r\n+              <td>{item}</td>\r\n+              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n+            </tr>\r\n+          ))}\r\n+        </tbody>\r\n+      </table>\r\n+    </div> */}\r\n+       <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                  <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>PF REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+\r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                      <form >\r\n+                        \r\n+                            \r\n+                        <a type='button' className=\" me-2\" >\r\n+                          {/* <img src={pdficon} alt=\"\" /> */}\r\n+                          <input\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={fromMonth}\r\n+                            onChange={(e) => setFromMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                        </a>\r\n+                        <a type='button'  className=\" me-2\">\r\n+                          {/* <img src={TXticon} alt=\"\" /> */}\r\n+                          <input\r\n+                            // {...register('toMonth', { required: 'Please select a month' })}\r\n+                          className='form-control'\r\n+                            type=\"date\"\r\n+                            value={toMonth}\r\n+                            onChange={(e) => setToMonth(e.target.value)}\r\n+                            required\r\n+                          />\r\n+                          \r\n+                          </a>\r\n+  \r\n+                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                            Submit\r\n+                        </button>\r\n+                        <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                    \r\n+                        </form>\r\n+                      </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr style={{border:\"2px solid\"}}>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={7}><div>Employee Master data</div></th>\r\n+                       <th  style={{border:\"2px solid\",textAlign:\"center\"}} colSpan={(salaryComponent.incrementComponents.length)+1}><div>Pay Item </div></th>\r\n+                       <th  style={{textAlign:\"center\"}} colSpan={(salaryComponent.decrementComponents.length)+1}><div>Deduction</div></th>\r\n+                      </tr>\r\n+                     \r\n+                      <tr>\r\n+                          <th  style={{border:\"2px solid\"}}>SL NO</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Name</th>\r\n+                          <th style={{border:\"2px solid\"}}>Employee Type</th>\r\n+                          <th style={{border:\"2px solid\"}}>Basic Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>N.O Of Days In Month</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay Days</th>\r\n+                          <th style={{border:\"2px solid\"}}>Loss Of Pay</th>\r\n+                          <th style={{border:\"2px solid\"}}>Eligible Pay</th>\r\n+                          {/* Headers for increment components */}\r\n+                          {salaryComponent.incrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Earnings</th>\r\n+                          {/* Headers for decrement components */}\r\n+                          {salaryComponent.decrementComponents.map((data, index) => (\r\n+                            <th key={index} style={{border:\"2px solid\"}}>{data.name}</th>\r\n+                          ))}\r\n+                          <th style={{border:\"2px solid\"}}>Total Deduction</th>\r\n+                          <th style={{border:\"2px solid\"}}>Total Net Amount</th>\r\n+                        </tr>\r\n+                        {permenantstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{index+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            \r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                          </tr>\r\n+                        ))}\r\n+                         {contractstaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                            {/* Matching and rendering increment components */}\r\n+                            {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+\r\n+                          {dailywagestaff.map((data, index) => (\r\n+                          <tr key={index}>\r\n+                            <td style={{border:\"2px solid\"}}>{permenantstaff.length+contractstaff.length+1}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.name}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EmployeeType}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.basicSalary}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{30}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPayDays}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.LossOfPay}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.EligiblePay}</td>\r\n+                           {/* Matching and rendering increment components */}\r\n+                           {salaryComponent.incrementComponents.map((incComponent, incIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === incComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={incIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === incComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalIncrement}</td>\r\n+                            \r\n+                            {/* Matching and rendering decrement components */}\r\n+                            {salaryComponent.decrementComponents.map((decComponent, decIndex) => {\r\n+                              const tableDataMatch = data.tabledata.find(\r\n+                                tableItem => tableItem.salaryComponent.name === decComponent.name\r\n+                              );\r\n+                              return (\r\n+                                <td key={decIndex} style={{border:\"2px solid\"}}>\r\n+                                  {tableDataMatch && tableDataMatch.salaryComponent.name === decComponent.name ? tableDataMatch.price : null}\r\n+                                </td>\r\n+                              );\r\n+                            })}\r\n+                            \r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalDeduction}</td>\r\n+                            <td style={{border:\"2px solid\"}}>{data.TotalGrossSalary}</td>\r\n+                           </tr> \r\n+                          ))}\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salaryreport\n\\ No newline at end of file\n"
                }
            ],
            "date": 1704782203361,
            "name": "Commit-0",
            "content": "import React, { useMemo,useState,useEffect } from 'react'\r\nimport PageHeader from '../PageHeader'\r\nimport { GetMonthlyReport } from '../../Apicalls/Report';\r\nimport { toast } from 'react-toastify';\r\nimport { GetSalaryComponent } from '../../Apicalls/salarymaster';\r\n\r\nfunction Salaryreport() {\r\n\r\n    const headerdata = useMemo(()=>{\r\n        return{\r\n            data:\"REPORT\",\r\n            page:\"Salary Monthly Report\"\r\n        }\r\n    },[])\r\n\r\n    const set1 = ['A', 'B', 'C', 'D'];\r\n  const set2 = ['C', 'D', 'E', 'F'];\r\n  const tableData = ['A', 'B', 'C', 'D'];\r\n\r\n  const [matchingElements, setMatchingElements] = useState([]);\r\n\r\n  const [salaryComponent,setSalaryComponent]=useState('');\r\n\r\n  useEffect(() => {\r\n    const foundElements = tableData.filter(\r\n      element => set1.includes(element) && set2.includes(element)\r\n    );\r\n    setMatchingElements(foundElements);\r\n  }, []);\r\n\r\n\r\n  const [fromMonth,setFromMonth]=useState('');\r\n  const [toMonth,setToMonth]=useState('');\r\n  const [Data,setData]=useState('');\r\n\r\n  const handlesubmit =async(event)=>{\r\n    event.preventDefault();\r\n  try {\r\n    const formdata = {\r\n      fromMonth : fromMonth,\r\n      toMonth : toMonth,\r\n    }\r\n  const response = await GetMonthlyReport(formdata)\r\n  if (response.success){\r\n    setData(response.data);\r\n    toast.success(response.message)\r\n    }else{\r\n      toast.error(response.message)\r\n    }\r\nconst responses = await GetSalaryComponent\r\nif(responses.success){\r\n  setSalaryComponent(response.data)\r\n  toast.success(response.message)\r\n}else{\r\n  toast.error(response.message)\r\n}\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    toast.error(error.message);\r\n  }\r\n  \r\n  console.log(Data,\":;;;;dddddddata\");\r\n   }\r\n  return (\r\n    <>\r\n    <PageHeader headerdata={headerdata}/>\r\n    {/* <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>1 Set of Data</th>\r\n            <th>Matching Data</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{item}</td>\r\n              <td>{matchingElements.includes(item) ? item : '-'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div> */}\r\n       <div className=\"card card-table show-entire\">\r\n              <div className=\"card-body\">\r\n                <div className=\"page-table-header mb-2\">\r\n                  <div className=\"row align-items-center\">\r\n                  <div className=\"col\">\r\n                      <div className=\"doctor-table-blk\">\r\n                        <h3>PF REPORT</h3>\r\n                        <div className=\"doctor-search-blk\">\r\n                          {/* <div className=\"top-nav-search table-search-blk\">\r\n                            <form>\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n                              <a className=\"btn\" >\r\n                                <img src={searchicon} alt=\"\" />\r\n                              </a>\r\n                            </form>\r\n                          \r\n                          </div> */}\r\n                          <div className=\"add-groups\">\r\n                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n                           \r\n                              <img src={addicon} alt=\"\" />\r\n                            </a> */}\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-auto  ms-auto\">\r\n                      \r\n                      <form >\r\n                        \r\n                            \r\n                        <a type='button' className=\" me-2\" >\r\n                          {/* <img src={pdficon} alt=\"\" /> */}\r\n                          <input\r\n                          className='form-control'\r\n                            type=\"date\"\r\n                            value={fromMonth}\r\n                            onChange={(e) => setFromMonth(e.target.value)}\r\n                            required\r\n                          />\r\n                        </a>\r\n                        <a type='button'  className=\" me-2\">\r\n                          {/* <img src={TXticon} alt=\"\" /> */}\r\n                          <input\r\n                            // {...register('toMonth', { required: 'Please select a month' })}\r\n                          className='form-control'\r\n                            type=\"date\"\r\n                            value={toMonth}\r\n                            onChange={(e) => setToMonth(e.target.value)}\r\n                            required\r\n                          />\r\n                          \r\n                          </a>\r\n  \r\n                        <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n                            Submit\r\n                        </button>\r\n                        {/* <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button> */}\r\n                    \r\n                        </form>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                {Data.length === 0 ? \r\n                (<p className='m-3'>No Data Available</p>):(\r\n                    <div className=\"table-responsive\">\r\n                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                    <thead>\r\n                      <tr>\r\n                       <th><div>Employee Master data</div></th>\r\n                       <th><div>Pay Item </div></th>\r\n                       <th><div>Deduction</div></th>\r\n                      </tr>\r\n                      <tr>\r\n                        <th>SL NO</th>\r\n                        <th>Employee Name</th>\r\n                        <th>BasicPay</th>\r\n                        <th>N.O Of Days In Month</th>\r\n                        <th>Loss Of Pay Days</th>\r\n                        <th>Loss Of Pay</th>\r\n                        <th>Eligible Pay</th>\r\n                        <th> </th>\r\n                      </tr>\r\n                      <tr>\r\n\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    </tbody>\r\n                  </table>\r\n                \r\n                </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Salaryreport"
        }
    ]
}