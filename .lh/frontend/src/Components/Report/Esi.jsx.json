{
    "sourceFile": "frontend/src/Components/Report/Esi.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 150,
            "patches": [
                {
                    "date": 1703662198942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703662213653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+// const response = await GetPFReport(formdata)\r\n+// if (response.success){\r\n+//   setData(response.data);\r\n+//   toast.success(response.message)\r\n+//   }else{\r\n+//     toast.error(response.message)\r\n+//   }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th>EDLI WAGES</th>\r\n+                        \r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    \r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703662249876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n                         <th>IP NAME</th>\r\n                         <th>EMPLOYEE TYPE</th>\r\n                         <th>No of Days for which wages paid/payable during the month</th>\r\n                         <th>Total Monthly Wages</th>\r\n-                        <th>EDLI WAGES</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n                         \r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n"
                },
                {
                    "date": 1703662270951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,147 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+// const response = await GetPFReport(formdata)\r\n+// if (response.success){\r\n+//   setData(response.data);\r\n+//   toast.success(response.message)\r\n+//   }else{\r\n+//     toast.error(response.message)\r\n+//   }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>\" Last Working Day</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    \r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703662287912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,9 @@\n                         <th>No of Days for which wages paid/payable during the month</th>\r\n                         <th>Total Monthly Wages</th>\r\n                         <th> Reason Code for Zero workings days</th>\r\n                         <th>\" Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                     \r\n"
                },
                {
                    "date": 1703662298973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,149 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+// const response = await GetPFReport(formdata)\r\n+// if (response.success){\r\n+//   setData(response.data);\r\n+//   toast.success(response.message)\r\n+//   }else{\r\n+//     toast.error(response.message)\r\n+//   }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>\" Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    \r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703662309923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,150 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+// const response = await GetPFReport(formdata)\r\n+// if (response.success){\r\n+//   setData(response.data);\r\n+//   toast.success(response.message)\r\n+//   }else{\r\n+//     toast.error(response.message)\r\n+//   }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>\" Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    \r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703662321960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n                         <th>EMPLOYEE TYPE</th>\r\n                         <th>No of Days for which wages paid/payable during the month</th>\r\n                         <th>Total Monthly Wages</th>\r\n                         <th> Reason Code for Zero workings days</th>\r\n-                        <th>\" Last Working Day</th>\r\n+                        <th>Last Working Day</th>\r\n                         <th>Employee Contribution</th>\r\n                         <th>Employer Contribution</th>\r\n                         <th>TOTAL ESI</th>\r\n                       </tr>\r\n"
                },
                {
                    "date": 1703678381040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React,{useState,useEffect} from 'react'\r\n import * as XLSX from 'xlsx';\r\n import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n \r\n function Esi() {\r\n \r\n     const [fromMonth,setFromMonth]=useState('');\r\n@@ -16,20 +17,20 @@\n   const formdata = {\r\n     fromMonth : fromMonth,\r\n     toMonth : toMonth,\r\n   }\r\n-// const response = await GetPFReport(formdata)\r\n-// if (response.success){\r\n-//   setData(response.data);\r\n-//   toast.success(response.message)\r\n-//   }else{\r\n-//     toast.error(response.message)\r\n-//   }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n } catch (error) {\r\n   console.log(error);\r\n   toast.error(error.message);\r\n }\r\n-\r\n+console.log(Data,\"ESI DATA\");\r\n  }\r\n   return (\r\n     <>\r\n          <div className=\"card card-table show-entire\">\r\n"
                },
                {
                    "date": 1703678559585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item,index)=>{\r\n+                      <tr>\r\n+                        <td>{index+1}</td>\r\n+                        <td>{}</td>\r\n+                      </tr>\r\n+                    })}\r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703678599568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item,index)=>{\r\n+                      <tr>\r\n+                        <td>{index+1}</td>\r\n+                        <td>{item.employeeid.}</td>\r\n+                      </tr>\r\n+                    })}\r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703678635195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,157 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item,index)=>{\r\n+                      <tr>\r\n+                        <td>{index+1}</td>\r\n+                        <td>{item.employeeid.Ipnumber\r\n+}</td>\r\n+                      </tr>\r\n+                    })}\r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703678652756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,10 +119,9 @@\n                     <tbody>\r\n                     {Data.map((item,index)=>{\r\n                       <tr>\r\n                         <td>{index+1}</td>\r\n-                        <td>{item.employeeid.Ipnumber\r\n-}</td>\r\n+                        <td>{item.employeeid.Ipnumber}</td>\r\n                       </tr>\r\n                     })}\r\n                     \r\n                     </tbody>\r\n"
                },
                {
                    "date": 1703678714934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,158 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item,index)=>{\r\n+                      <tr>\r\n+                        <td>{index+1}</td>\r\n+                        <td>{item.employeeid.Ipnumber}</td>\r\n+                        <td>{item.employeeid.name}</td>\r\n+                        <td>{item.employeeid.}</td>\r\n+                      </tr>\r\n+                    })}\r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703678735079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,158 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item,index)=>{\r\n+                      <tr>\r\n+                        <td>{index+1}</td>\r\n+                        <td>{item.employeeid.Ipnumber}</td>\r\n+                        <td>{item.employeeid.name}</td>\r\n+                        <td>{item.employeeid.EmployeeTypeId.name}</td>\r\n+                      </tr>\r\n+                    })}\r\n+                    \r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703679451367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,16 +116,16 @@\n                         <th>TOTAL ESI</th>\r\n                       </tr>\r\n                     </thead>\r\n                     <tbody>\r\n-                    {Data.map((item,index)=>{\r\n+                    {Data.map((item,index)=>(\r\n                       <tr>\r\n                         <td>{index+1}</td>\r\n                         <td>{item.employeeid.Ipnumber}</td>\r\n                         <td>{item.employeeid.name}</td>\r\n                         <td>{item.employeeid.EmployeeTypeId.name}</td>\r\n                       </tr>\r\n-                    })}\r\n+                    ))}\r\n                     \r\n                     </tbody>\r\n                   </table>\r\n                 \r\n"
                },
                {
                    "date": 1703679512299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,162 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+               \r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703679585248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,163 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703679784554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td> <select name=\"\" id=\"\">\r\n+                            <option value=\"1\">1</option>\r\n+                            <option value=\"1\">1</option>\r\n+                            </select> </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703679806492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,8 +127,10 @@\n                             {item.employeeid && item.employeeid.EmployeeTypeId\r\n                               ? item.employeeid.EmployeeTypeId.name\r\n                               : ''}\r\n                           </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n                           <td> <select name=\"\" id=\"\">\r\n                             <option value=\"1\">1</option>\r\n                             <option value=\"1\">1</option>\r\n                             </select> </td>\r\n"
                },
                {
                    "date": 1703679825477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,169 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option value=\"1\">1</option>\r\n+                            <option value=\"1\">1</option>\r\n+                            </select> </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703679855484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,170 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n+                  \r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option value=\"1\">1</option>\r\n+                            <option value=\"1\">1</option>\r\n+                            </select> </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703680261555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,15 @@\n   toast.error(error.message);\r\n }\r\n console.log(Data,\"ESI DATA\");\r\n  }\r\n+ const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n   return (\r\n     <>\r\n          <div className=\"card card-table show-entire\">\r\n               <div className=\"card-body\">\r\n@@ -91,10 +98,9 @@\n \r\n                       <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n                           Submit\r\n                       </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n                       </form>\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n"
                },
                {
                    "date": 1703680321865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+ const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703680424492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,181 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+ const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input type=\"text\" />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}\r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703737950166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,182 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+\r\n+    const [fromMonth,setFromMonth]=useState('');\r\n+    const [toMonth,setToMonth]=useState('');\r\n+    const [Data,setData]=useState('');\r\n+    const []\r\n+console.log(fromMonth,toMonth);\r\n+\r\n+\r\n+const handlesubmit =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetESIReport(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+console.log(Data,\"ESI DATA\");\r\n+ }\r\n+ const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input type=\"text\" />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703738130058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n \r\n     const [fromMonth,setFromMonth]=useState('');\r\n     const [toMonth,setToMonth]=useState('');\r\n     const [Data,setData]=useState('');\r\n-    const []\r\n+    const [lastworkday,setLastWorkDay]=useState('');\r\n console.log(fromMonth,toMonth);\r\n \r\n \r\n const handlesubmit =async(event)=>{\r\n@@ -144,9 +144,13 @@\n                             <option>3</option>\r\n                             <option >4</option>\r\n                             </select> </td>\r\n                             <td>\r\n-                              <input type=\"text\" />\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               value={lastworkday}\r\n+                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n                             </td>\r\n                         </tr>\r\n                       ))}\r\n \r\n"
                },
                {
                    "date": 1703738885496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,198 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+  const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+\r\n+    const selectedReasonCode = document.querySelector('select').value;\r\n+    const selectedLastWorkDay = lastworkday;\r\n+\r\n+    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+    rows.forEach((row, index) => {\r\n+      if (index === 0) {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      } else {\r\n+        row.push(index === 0 ? 'Selected Reason Code' : selectedReasonCode);\r\n+        row.push(index === 0 ? 'Last Work Day' : selectedLastWorkDay);\r\n+      }\r\n+    });\r\n+\r\n+    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+  };\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               value={lastworkday}\r\n+                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703739064447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,208 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+  const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+  \r\n+    // Get selected value from dropdown\r\n+    const selectedReasonCode = document.querySelector('select').value;\r\n+    const selectedLastWorkDay = lastworkday;\r\n+  \r\n+    // Remove the <select> element from the worksheet\r\n+    const modifiedWorksheet = worksheet;\r\n+    XLSX.utils.sheet_add_aoa(modifiedWorksheet, [], { origin: 'A1' }); // Clear the content of the first cell (optional)\r\n+  \r\n+    // Replace the select element with the selected value in the sheet\r\n+    const rows = XLSX.utils.sheet_to_json(modifiedWorksheet, { header: 1 });\r\n+    const modifiedRows = rows.map((row, index) => {\r\n+      if (index === 0) {\r\n+        return [...row, 'Selected Reason Code', 'Last Work Day'];\r\n+      } else {\r\n+        return [\r\n+          ...row.slice(0, row.length - 2), // Remove the last two columns\r\n+          index === 0 ? 'Selected Reason Code' : selectedReasonCode,\r\n+          index === 0 ? 'Last Work Day' : selectedLastWorkDay,\r\n+        ];\r\n+      }\r\n+    });\r\n+  \r\n+    const updatedWorksheet = XLSX.utils.aoa_to_sheet(modifiedRows);\r\n+  \r\n+    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+  };\r\n+  \r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               value={lastworkday}\r\n+                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703739163917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,10 +156,10 @@\n                             {item.employeeid && item.employeeid.EmployeeTypeId\r\n                               ? item.employeeid.EmployeeTypeId.name\r\n                               : ''}\r\n                           </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n+                          <td>dggsdfg</td>\r\n+                          <td>dsfdsgd</td>\r\n                           <td> <select>\r\n                             <option>Select reason code</option>\r\n                             <option>1</option>\r\n                             <option >2</option>\r\n@@ -204,3113 +204,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-  const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-\r\n-    const selectedReasonCode = document.querySelector('select').value;\r\n-    const selectedLastWorkDay = lastworkday;\r\n-\r\n-    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-    rows.forEach((row, index) => {\r\n-      if (index === 0) {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      } else {\r\n-        row.push(index === 0 ? 'Selected Reason Code' : selectedReasonCode);\r\n-        row.push(index === 0 ? 'Last Work Day' : selectedLastWorkDay);\r\n-      }\r\n-    });\r\n-\r\n-    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-  };\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               value={lastworkday}\r\n-                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-    const [lastworkday,setLastWorkDay]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n- const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               value={lastworkday}\r\n-                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n- const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input type=\"text\" />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n- const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n- const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option value=\"1\">1</option>\r\n-                            <option value=\"1\">1</option>\r\n-                            </select> </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option value=\"1\">1</option>\r\n-                            <option value=\"1\">1</option>\r\n-                            </select> </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select name=\"\" id=\"\">\r\n-                            <option value=\"1\">1</option>\r\n-                            <option value=\"1\">1</option>\r\n-                            </select> </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}\r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item,index)=>(\r\n-                      <tr>\r\n-                        <td>{index+1}</td>\r\n-                        <td>{item.employeeid.Ipnumber}</td>\r\n-                        <td>{item.employeeid.name}</td>\r\n-                        <td>{item.employeeid.EmployeeTypeId.name}</td>\r\n-                      </tr>\r\n-                    ))}\r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item,index)=>{\r\n-                      <tr>\r\n-                        <td>{index+1}</td>\r\n-                        <td>{item.employeeid.Ipnumber}</td>\r\n-                        <td>{item.employeeid.name}</td>\r\n-                        <td>{item.employeeid.}</td>\r\n-                      </tr>\r\n-                    })}\r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item,index)=>{\r\n-                      <tr>\r\n-                        <td>{index+1}</td>\r\n-                        <td>{item.employeeid.Ipnumber}</td>\r\n-                      </tr>\r\n-                    })}\r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item,index)=>{\r\n-                      <tr>\r\n-                        <td>{index+1}</td>\r\n-                        <td>{item.employeeid.}</td>\r\n-                      </tr>\r\n-                    })}\r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item,index)=>{\r\n-                      <tr>\r\n-                        <td>{index+1}</td>\r\n-                        <td>{}</td>\r\n-                      </tr>\r\n-                    })}\r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-const response = await GetESIReport(formdata)\r\n-if (response.success){\r\n-  setData(response.data);\r\n-  toast.success(response.message)\r\n-  }else{\r\n-    toast.error(response.message)\r\n-  }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-console.log(Data,\"ESI DATA\");\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    \r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-// const response = await GetPFReport(formdata)\r\n-// if (response.success){\r\n-//   setData(response.data);\r\n-//   toast.success(response.message)\r\n-//   }else{\r\n-//     toast.error(response.message)\r\n-//   }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>\" Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    \r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-// const response = await GetPFReport(formdata)\r\n-// if (response.success){\r\n-//   setData(response.data);\r\n-//   toast.success(response.message)\r\n-//   }else{\r\n-//     toast.error(response.message)\r\n-//   }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>\" Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    \r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-// const response = await GetPFReport(formdata)\r\n-// if (response.success){\r\n-//   setData(response.data);\r\n-//   toast.success(response.message)\r\n-//   }else{\r\n-//     toast.error(response.message)\r\n-//   }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        \r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    \r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-\r\n-function Esi() {\r\n-\r\n-    const [fromMonth,setFromMonth]=useState('');\r\n-    const [toMonth,setToMonth]=useState('');\r\n-    const [Data,setData]=useState('');\r\n-console.log(fromMonth,toMonth);\r\n-\r\n-\r\n-const handlesubmit =async(event)=>{\r\n-  event.preventDefault();\r\n-try {\r\n-  const formdata = {\r\n-    fromMonth : fromMonth,\r\n-    toMonth : toMonth,\r\n-  }\r\n-// const response = await GetPFReport(formdata)\r\n-// if (response.success){\r\n-//   setData(response.data);\r\n-//   toast.success(response.message)\r\n-//   }else{\r\n-//     toast.error(response.message)\r\n-//   }\r\n-} catch (error) {\r\n-  console.log(error);\r\n-  toast.error(error.message);\r\n-}\r\n-\r\n- }\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n-                  \r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-               \r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>EPS WAGES</th>\r\n-                        <th>EDLI WAGES</th>\r\n-                        \r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    \r\n-                    \r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703739366979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,37 +31,27 @@\n \r\n   const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n     const wb = XLSX.utils.book_new();\r\n-  \r\n-    // Get selected value from dropdown\r\n+\r\n     const selectedReasonCode = document.querySelector('select').value;\r\n     const selectedLastWorkDay = lastworkday;\r\n-  \r\n-    // Remove the <select> element from the worksheet\r\n-    const modifiedWorksheet = worksheet;\r\n-    XLSX.utils.sheet_add_aoa(modifiedWorksheet, [], { origin: 'A1' }); // Clear the content of the first cell (optional)\r\n-  \r\n-    // Replace the select element with the selected value in the sheet\r\n-    const rows = XLSX.utils.sheet_to_json(modifiedWorksheet, { header: 1 });\r\n-    const modifiedRows = rows.map((row, index) => {\r\n+\r\n+    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+    rows.forEach((row, index) => {\r\n       if (index === 0) {\r\n-        return [...row, 'Selected Reason Code', 'Last Work Day'];\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n       } else {\r\n-        return [\r\n-          ...row.slice(0, row.length - 2), // Remove the last two columns\r\n-          index === 0 ? 'Selected Reason Code' : selectedReasonCode,\r\n-          index === 0 ? 'Last Work Day' : selectedLastWorkDay,\r\n-        ];\r\n+        row.push(index === 0 ? 'Selected Reason Code' : selectedReasonCode);\r\n+        row.push(index === 0 ? 'Last Work Day' : selectedLastWorkDay);\r\n       }\r\n     });\r\n-  \r\n-    const updatedWorksheet = XLSX.utils.aoa_to_sheet(modifiedRows);\r\n-  \r\n+\r\n+    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n     XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n     XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n   };\r\n-  \r\n   return (\r\n     <>\r\n          <div className=\"card card-table show-entire\">\r\n               <div className=\"card-body\">\r\n@@ -156,10 +146,10 @@\n                             {item.employeeid && item.employeeid.EmployeeTypeId\r\n                               ? item.employeeid.EmployeeTypeId.name\r\n                               : ''}\r\n                           </td>\r\n-                          <td>dggsdfg</td>\r\n-                          <td>dsfdsgd</td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n                           <td> <select>\r\n                             <option>Select reason code</option>\r\n                             <option>1</option>\r\n                             <option >2</option>\r\n"
                },
                {
                    "date": 1703739501900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,10 +159,9 @@\n                             <td>\r\n                               <input\r\n                                className='form-control'\r\n                                type=\"date\"\r\n-                               value={lastworkday}\r\n-                               onChange={(e) => setLastWorkDay(e.target.value)} />\r\n+                            />\r\n                             </td>\r\n                         </tr>\r\n                       ))}\r\n \r\n"
                },
                {
                    "date": 1703742234653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+  const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+  \r\n+    const selectedReasonCode = document.querySelector('select').value;\r\n+    const selectedLastWorkDay = lastworkday;\r\n+  \r\n+    // Remove the dropdown column header\r\n+    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+    rows.forEach((row, index) => {\r\n+      if (index === 0) {\r\n+        const dropdownIndex = row.indexOf('Select reason code');\r\n+        if (dropdownIndex !== -1) {\r\n+          row.splice(dropdownIndex, 1);\r\n+        }\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      } else {\r\n+        row.splice(row.indexOf('Select reason code'), 1); // Remove dropdown value\r\n+        row.push(selectedReasonCode, selectedLastWorkDay);\r\n+      }\r\n+    });\r\n+  \r\n+    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+  \r\n+    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+  };\r\n+  \r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703742309682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,22 +33,32 @@\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n     const wb = XLSX.utils.book_new();\r\n   \r\n     const selectedReasonCode = document.querySelector('select').value;\r\n-    const selectedLastWorkDay = lastworkday;\r\n   \r\n-    // Remove the dropdown column header\r\n     const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+    const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+    const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+  \r\n+    if (dropdownColumnIndex !== -1) {\r\n+      // Remove the 'Select reason code' column from all rows\r\n+      rows.forEach((row) => {\r\n+        row.splice(dropdownColumnIndex, 1);\r\n+      });\r\n+    }\r\n+  \r\n     rows.forEach((row, index) => {\r\n       if (index === 0) {\r\n-        const dropdownIndex = row.indexOf('Select reason code');\r\n-        if (dropdownIndex !== -1) {\r\n-          row.splice(dropdownIndex, 1);\r\n+        if (lastWorkDayColumnIndex !== -1) {\r\n+          row.push('Selected Reason Code');\r\n+        } else {\r\n+          row.push('Selected Reason Code', 'Last Work Day');\r\n         }\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n       } else {\r\n-        row.splice(row.indexOf('Select reason code'), 1); // Remove dropdown value\r\n-        row.push(selectedReasonCode, selectedLastWorkDay);\r\n+        row.push(selectedReasonCode);\r\n+        if (lastWorkDayColumnIndex === -1) {\r\n+          row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+        }\r\n       }\r\n     });\r\n   \r\n     const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n@@ -199,202 +209,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-  const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-\r\n-    const selectedReasonCode = document.querySelector('select').value;\r\n-    const selectedLastWorkDay = lastworkday;\r\n-\r\n-    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-    rows.forEach((row, index) => {\r\n-      if (index === 0) {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      } else {\r\n-        row.push(index === 0 ? 'Selected Reason Code' : selectedReasonCode);\r\n-        row.push(index === 0 ? 'Last Work Day' : selectedLastWorkDay);\r\n-      }\r\n-    });\r\n-\r\n-    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-  };\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703745269859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,214 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+  const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+  \r\n+    const selectedReasonCode = document.querySelector('select').value;\r\n+  \r\n+    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+    const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+    const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+  \r\n+    if (dropdownColumnIndex !== -1) {\r\n+      // Remove the 'Select reason code' column from all rows\r\n+      rows.forEach((row) => {\r\n+        row.splice(dropdownColumnIndex, 1);\r\n+      });\r\n+    }\r\n+  \r\n+    rows.forEach((row, index) => {\r\n+      if (index === 0) {\r\n+        if (lastWorkDayColumnIndex !== -1) {\r\n+          row.push('Selected Reason Code');\r\n+        } else {\r\n+          row.push('Selected Reason Code', 'Last Work Day');\r\n+        }\r\n+      } else {\r\n+        row.push(selectedReasonCode);\r\n+        if (lastWorkDayColumnIndex === -1) {\r\n+          row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+        }\r\n+      }\r\n+    });\r\n+  \r\n+    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+  \r\n+    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+  };\r\n+  \r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>\r\n+                           <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703745405902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,213 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              {/* <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav> */}\r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703829709607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,192 +181,9 @@\n                         </tr>\r\n                       ))}\r\n \r\n                     </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-  const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-  \r\n-    const selectedReasonCode = document.querySelector('select').value;\r\n-  \r\n-    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-    const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-    const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-  \r\n-    if (dropdownColumnIndex !== -1) {\r\n-      // Remove the 'Select reason code' column from all rows\r\n-      rows.forEach((row) => {\r\n-        row.splice(dropdownColumnIndex, 1);\r\n-      });\r\n-    }\r\n-  \r\n-    rows.forEach((row, index) => {\r\n-      if (index === 0) {\r\n-        if (lastWorkDayColumnIndex !== -1) {\r\n-          row.push('Selected Reason Code');\r\n-        } else {\r\n-          row.push('Selected Reason Code', 'Last Work Day');\r\n-        }\r\n-      } else {\r\n-        row.push(selectedReasonCode);\r\n-        if (lastWorkDayColumnIndex === -1) {\r\n-          row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-        }\r\n-      }\r\n-    });\r\n-  \r\n-    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-  \r\n-    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-  };\r\n-  \r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n+                    <tbody style={{display:\"none\"}}>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n@@ -377,222 +194,8 @@\n                               : ''}\r\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n-                          <td>\r\n-                           <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                \r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-  const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-  \r\n-    const selectedReasonCode = document.querySelector('select').value;\r\n-  \r\n-    const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-    const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-    const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-  \r\n-    if (dropdownColumnIndex !== -1) {\r\n-      // Remove the 'Select reason code' column from all rows\r\n-      rows.forEach((row) => {\r\n-        row.splice(dropdownColumnIndex, 1);\r\n-      });\r\n-    }\r\n-  \r\n-    rows.forEach((row, index) => {\r\n-      if (index === 0) {\r\n-        if (lastWorkDayColumnIndex !== -1) {\r\n-          row.push('Selected Reason Code');\r\n-        } else {\r\n-          row.push('Selected Reason Code', 'Last Work Day');\r\n-        }\r\n-      } else {\r\n-        row.push(selectedReasonCode);\r\n-        if (lastWorkDayColumnIndex === -1) {\r\n-          row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-        }\r\n-      }\r\n-    });\r\n-  \r\n-    const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-  \r\n-    XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-  };\r\n-  \r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n                           <td> <select>\r\n                             <option>Select reason code</option>\r\n                             <option>1</option>\r\n                             <option >2</option>\r\n@@ -614,25 +217,9 @@\n                 </div>\r\n                       )}  \r\n                 \r\n               </div>\r\n-              {/* <nav aria-label=\"Page navigation example\">\r\n-           \r\n-           {memoizedData.length > itemsPerPage && (\r\n-             <ul className=\"pagination\">\r\n-               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n-                 .fill()\r\n-                 .map((_, index) => (\r\n-                         <li className=\"page-item\" key={index}>\r\n-                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n-                           </li>\r\n-                     \r\n-                  \r\n-                 ))}\r\n-             </ul>\r\n-           )}\r\n-        \r\n-           </nav> */}\r\n+              \r\n             </div>\r\n     </>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1703829777999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,8 +135,85 @@\n                 </div>\r\n                 {Data.length === 0 ? \r\n                 (<p className='m-3'>No Data Available</p>):(\r\n                     <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n                   <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n@@ -181,9 +258,9 @@\n                         </tr>\r\n                       ))}\r\n \r\n                     </tbody>\r\n-                    <tbody style={{display:\"none\"}}>\r\n+                       <tbody>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n@@ -212,9 +289,8 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                \r\n                 </div>\r\n                       )}  \r\n                 \r\n               </div>\r\n"
                },
                {
                    "date": 1703829849361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,38 +151,8 @@\n                         <th>Employer Contribution</th>\r\n                         <th>TOTAL ESI</th>\r\n                       </tr>\r\n                     </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n                        <tbody>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n@@ -212,9 +182,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive d-none\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n@@ -228,38 +198,9 @@\n                         <th>Employer Contribution</th>\r\n                         <th>TOTAL ESI</th>\r\n                       </tr>\r\n                     </thead>\r\n-                    <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n+                 \r\n                        <tbody>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n"
                },
                {
                    "date": 1703829874502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n                 </div>\r\n                 {Data.length === 0 ? \r\n                 (<p className='m-3'>No Data Available</p>):(\r\n                     <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table  mb-0 table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n"
                },
                {
                    "date": 1703829896523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     }\r\n   };\r\n \r\n const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n   const wb = XLSX.utils.book_new();\r\n \r\n   const selectedReasonCode = document.querySelector('select').value;\r\n \r\n@@ -182,9 +182,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive d-none\">\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n"
                },
                {
                    "date": 1703829904169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n"
                },
                {
                    "date": 1703829909430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n"
                },
                {
                    "date": 1703830124043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830150569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,260 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState(''); // Initialize state for the selected value\r\n+\r\n+  // Function to handle the change in the dropdown selection\r\n+  const handleSelectChange = (event) => {\r\n+    setSelectedValue(event.target.value); // Update the state with the selected value\r\n+  };\r\n+  \r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830317837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,261 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830356704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,264 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830373108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,8 +181,9 @@\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>   <select\r\n+                           className='form-control'\r\n                                   value={selectedValue[index] || ''}\r\n                                   onChange={(event) => handleSelectChange(event, index)}\r\n                                 >\r\n                                   <option value=\"\">Select reason code</option>\r\n"
                },
                {
                    "date": 1703830380572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>   <select\r\n-                           className='form-control'\r\n+                                  className='form-control'\r\n                                   value={selectedValue[index] || ''}\r\n                                   onChange={(event) => handleSelectChange(event, index)}\r\n                                 >\r\n                                   <option value=\"\">Select reason code</option>\r\n"
                },
                {
                    "date": 1703830444165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,266 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830492198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,266 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+  const wb = XLSX.utils.book_new();\r\n+\r\n+  const selectedReasonCode = document.querySelector('select').value;\r\n+\r\n+  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n+  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n+  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n+\r\n+  if (dropdownColumnIndex !== -1) {\r\n+    // Remove the 'Select reason code' column from all rows\r\n+    rows.forEach((row) => {\r\n+      row.splice(dropdownColumnIndex, 1);\r\n+    });\r\n+  }\r\n+\r\n+  rows.forEach((row, index) => {\r\n+    if (index === 0) {\r\n+      if (lastWorkDayColumnIndex !== -1) {\r\n+        row.push('Selected Reason Code');\r\n+      } else {\r\n+        row.push('Selected Reason Code', 'Last Work Day');\r\n+      }\r\n+    } else {\r\n+      row.push(selectedReasonCode);\r\n+      if (lastWorkDayColumnIndex === -1) {\r\n+        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n+      }\r\n+    }\r\n+  });\r\n+\r\n+  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n+\r\n+  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-tabless mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703830681936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,235 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831077765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,243 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newArray = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], // Merge the elements from both arrays\r\n+    sum: dataItem.value + selectedValue[index].selected // Calculate the sum\r\n+  }));\r\n+  \r\n+  console.log(newArray,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831220501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], \r\n+    sum: dataItem.value + selectedValue[index].selected\r\n+  }));\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831230390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], \r\n+    sum: dataItem.value + selectedValue[index].selected\r\n+  }));\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.0}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831264137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], \r\n+    sum: dataItem.value + selectedValue[index].selected\r\n+  }));\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831306149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \r\n   const newdata = Data.map((dataItem, index) => ({\r\n     ...dataItem,\r\n     ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n+    sum: dataItem.value + selectedValue[index].reas\r\n   }));\r\n   \r\n   console.log(newdata,\":NewArray\");\r\n \r\n"
                },
                {
                    "date": 1703831336920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...{ reason: selectedValue[index].reason }, // Renaming the field\r\n+    sum: dataItem.value + selectedValue[index].reason // Calculate the sum\r\n+  }));\r\n+\r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831526860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => {\r\n+    const { 0: reason, ...rest } = selectedValue[index]; // Extract '0' property as 'reason'\r\n+    return {\r\n+      ...dataItem,\r\n+      ...rest,\r\n+      reason, // Rename '0' to 'reason'\r\n+      sum: dataItem.value + reason // Calculate the sum\r\n+    };\r\n+  });\r\n+\r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831602299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    reason: selectedValue[index].reason, // Assign 'reason' property\r\n+    sum: dataItem.value + selectedValue[index].reason // Calculate the sum\r\n+  }));\r\n+\r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831694832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,725 +47,10 @@\n   console.log(selectedValue,\":selected va;lue\");\r\n \r\n   const newdata = Data.map((dataItem, index) => ({\r\n     ...dataItem,\r\n-    reason: selectedValue[index].reason, // Assign 'reason' property\r\n-    sum: dataItem.value + selectedValue[index].reason // Calculate the sum\r\n-  }));\r\n-\r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => {\r\n-    const { 0: reason, ...rest } = selectedValue[index]; // Extract '0' property as 'reason'\r\n-    return {\r\n-      ...dataItem,\r\n-      ...rest,\r\n-      reason, // Rename '0' to 'reason'\r\n-      sum: dataItem.value + reason // Calculate the sum\r\n-    };\r\n-  });\r\n-\r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...{ reason: selectedValue[index].reason }, // Renaming the field\r\n-    sum: dataItem.value + selectedValue[index].reason // Calculate the sum\r\n-  }));\r\n-\r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n     ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].reas\r\n+    sum: dataItem.value + selectedValue[index].selected\r\n   }));\r\n   \r\n   console.log(newdata,\":NewArray\");\r\n \r\n@@ -948,2764 +233,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n-  }));\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.0}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n-  }));\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newArray = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], // Merge the elements from both arrays\r\n-    sum: dataItem.value + selectedValue[index].selected // Calculate the sum\r\n-  }));\r\n-  \r\n-  console.log(newArray,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-tabless mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState(''); // Initialize state for the selected value\r\n-\r\n-  // Function to handle the change in the dropdown selection\r\n-  const handleSelectChange = (event) => {\r\n-    setSelectedValue(event.target.value); // Update the state with the selected value\r\n-  };\r\n-  \r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select value={selectedValue} onChange={handleSelectChange}>\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-  const wb = XLSX.utils.book_new();\r\n-\r\n-  const selectedReasonCode = document.querySelector('select').value;\r\n-\r\n-  const rows = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n-  const dropdownColumnIndex = rows[0].indexOf('Select reason code');\r\n-  const lastWorkDayColumnIndex = rows[0].indexOf('Last Working Day');\r\n-\r\n-  if (dropdownColumnIndex !== -1) {\r\n-    // Remove the 'Select reason code' column from all rows\r\n-    rows.forEach((row) => {\r\n-      row.splice(dropdownColumnIndex, 1);\r\n-    });\r\n-  }\r\n-\r\n-  rows.forEach((row, index) => {\r\n-    if (index === 0) {\r\n-      if (lastWorkDayColumnIndex !== -1) {\r\n-        row.push('Selected Reason Code');\r\n-      } else {\r\n-        row.push('Selected Reason Code', 'Last Work Day');\r\n-      }\r\n-    } else {\r\n-      row.push(selectedReasonCode);\r\n-      if (lastWorkDayColumnIndex === -1) {\r\n-        row.push(lastworkday); // Assuming lastworkday is the same for all rows\r\n-      }\r\n-    }\r\n-  });\r\n-\r\n-  const updatedWorksheet = XLSX.utils.aoa_to_sheet(rows);\r\n-\r\n-  XLSX.utils.book_append_sheet(wb, updatedWorksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth}_to_${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831845558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831926931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,250 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if (!selectedValue) {\r\n+    console.log(\": not selected value\");\r\n+  } else {\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index],\r\n+      sum: dataItem.value + (selectedValue[index]?.selected || 0) // Use optional chaining and default value\r\n+    }));\r\n+  \r\n+    if (Array.isArray(NewArray)) {\r\n+      setNewData(NewArray);\r\n+    } else {\r\n+      console.log(\"NewArray is not an array:\", NewArray);\r\n+    }\r\n+  }\r\n+  \r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703831961578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -212,9 +212,9 @@\n                       </tr>\r\n                     </thead>\r\n                  \r\n                        <tbody>\r\n-                    {newdata.map((item, index) => (\r\n+                    {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n                           <td>{item.employeeid && item.employeeid.name}</td>\r\n"
                },
                {
                    "date": 1703832000009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832018096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,205 +207,8 @@\n                       </tr>\r\n                     </thead>\r\n                  \r\n                        <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if (!selectedValue) {\r\n-    console.log(\": not selected value\");\r\n-  } else {\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index],\r\n-      sum: dataItem.value + (selectedValue[index]?.selected || 0) // Use optional chaining and default value\r\n-    }));\r\n-  \r\n-    if (Array.isArray(NewArray)) {\r\n-      setNewData(NewArray);\r\n-    } else {\r\n-      console.log(\"NewArray is not an array:\", NewArray);\r\n-    }\r\n-  }\r\n-  \r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n@@ -416,61 +219,8 @@\n                               : ''}\r\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n                           <td>{item}</td>\r\n                             <td>\r\n                               <input\r\n                                className='form-control'\r\n@@ -491,487 +241,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n-  }));\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832224791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n                 </div>\r\n                 {Data.length === 0 ? \r\n                 (<p className='m-3'>No Data Available</p>):(\r\n                     <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                  {/* <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n@@ -230,9 +230,9 @@\n                         </tr>\r\n                       ))}\r\n \r\n                     </tbody>\r\n-                  </table>\r\n+                  </table> */}\r\n                 </div>\r\n                       )}  \r\n                 \r\n               </div>\r\n"
                },
                {
                    "date": 1703832250464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  {/* <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table> */}\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832305047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          {/* <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td> */}\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832317733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,245 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832400381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832420934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,249 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }else{\r\n+    const NewArrayss = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArrayss);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832450271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,247 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+    setNewData(NewArray);\r\n+  }else{\r\n+    const NewArrayss = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArrayss);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832456342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,246 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+  }else{\r\n+    const NewArrayss = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArrayss);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832504625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,246 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    setNewData(Data)\r\n+  }else{\r\n+    const NewArrayss = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArrayss);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832590887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,248 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+    return NewArray\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    return NewArray\r\n+    // setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {NewArray.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832676798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,247 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+    return NewArray\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {NewArray.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832705088,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,246 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {NewArray.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832793259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,247 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const [newdata,setNewData]=useState(\"\");\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+\r\n+  if(!selectedValue){\r\n+    console.log(\":not selected value\");\r\n+    const NewArray = Data\r\n+  }else{\r\n+    const NewArray = Data.map((dataItem, index) => ({\r\n+      ...dataItem,\r\n+      ...selectedValue[index], \r\n+      sum: dataItem.value + selectedValue[index].selected\r\n+    }));\r\n+    setNewData(NewArray);\r\n+    console.log(\"selected success\");\r\n+  }\r\n+\r\n+\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {NewArray.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703832894551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,16 +48,15 @@\n   console.log(selectedValue,\":selected va;lue\");\r\n \r\n   if(!selectedValue){\r\n     console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n   }else{\r\n     const NewArray = Data.map((dataItem, index) => ({\r\n       ...dataItem,\r\n       ...selectedValue[index], \r\n       sum: dataItem.value + selectedValue[index].selected\r\n     }));\r\n-    setNewData(NewArray);\r\n+    setData(NewArray);\r\n     console.log(\"selected success\");\r\n   }\r\n \r\n \r\n@@ -156,61 +155,8 @@\n                         <th>TOTAL ESI</th>\r\n                       </tr>\r\n                     </thead>\r\n                        <tbody>\r\n-                    {NewArray.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n                     {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n@@ -221,201 +167,8 @@\n                               : ''}\r\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {NewArray.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n                           <td>   <select\r\n                                   className='form-control'\r\n                                   value={selectedValue[index] || ''}\r\n                                   onChange={(event) => handleSelectChange(event, index)}\r\n@@ -489,2717 +242,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n-    return NewArray\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {NewArray.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n-    return NewArray\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    return NewArray\r\n-    // setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {NewArray.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    setNewData(Data)\r\n-  }else{\r\n-    const NewArrayss = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArrayss);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n-  }else{\r\n-    const NewArrayss = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArrayss);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data\r\n-    setNewData(NewArray);\r\n-  }else{\r\n-    const NewArrayss = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArrayss);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }else{\r\n-    const NewArrayss = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArrayss);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          {/* <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td> */}\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  {/* <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table> */}\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setNewData(NewArray);\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  {/* <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table> */}\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833005271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], \r\n+    sum: dataItem.value + selectedValue[index].selected\r\n+  }));\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833091629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,238 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const newdata = Data.map((dataItem, index) => ({\r\n+    ...dataItem,\r\n+    ...selectedValue[index], \r\n+    sum: dataItem.value + selectedValue[index].selected?selected:\"\"\r\n+  }));\r\n+  \r\n+  console.log(newdata,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {newdata.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833196819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,16 +45,19 @@\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n   \r\n-\r\n+if(Data && selectedValue){\r\n   const newdata = Data.map((dataItem, index) => ({\r\n     ...dataItem,\r\n     ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected?selected:\"\"\r\n+    sum: dataItem.value + selectedValue[index].selected\r\n   }));\r\n+  setData(newdata)\r\n+}\r\n+ \r\n   \r\n-  console.log(newdata,\":NewArray\");\r\n+  console.log(Data,\":NewArray\");\r\n \r\n const downloadExcel = () => {\r\n   const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n   const wb = XLSX.utils.book_new();\r\n"
                },
                {
                    "date": 1703833233274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -203,9 +203,9 @@\n                       </tr>\r\n                     </thead>\r\n                  \r\n                        <tbody>\r\n-                    {newdata.map((item, index) => (\r\n+                    {Data.map((item, index) => (\r\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n                           <td>{item.employeeid && item.employeeid.name}</td>\r\n"
                },
                {
                    "date": 1703833426988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,241 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+// if(Data && selectedValue){\r\n+//   const newdata = Data.map((dataItem, index) => ({\r\n+//     ...dataItem,\r\n+//     ...selectedValue[index], \r\n+//     sum: dataItem.value + selectedValue[index].selected\r\n+//   }));\r\n+//   setData(newdata)\r\n+// }\r\n+ \r\n+  \r\n+  console.log(Data,\":NewArray\");\r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833449868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+// if(Data && selectedValue){\r\n+//   const newdata = Data.map((dataItem, index) => ({\r\n+//     ...dataItem,\r\n+//     ...selectedValue[index], \r\n+//     sum: dataItem.value + selectedValue[index].selected\r\n+//   }));\r\n+//   setData(newdata)\r\n+// }\r\n+ \r\n+  \r\n+\r\n+const downloadExcel = () => {\r\n+  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+  const wb = XLSX.utils.book_new();\r\n+  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+};\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833798782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,260 +44,11 @@\n       [index]: value,\r\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-// if(Data && selectedValue){\r\n-//   const newdata = Data.map((dataItem, index) => ({\r\n-//     ...dataItem,\r\n-//     ...selectedValue[index], \r\n-//     sum: dataItem.value + selectedValue[index].selected\r\n-//   }));\r\n-//   setData(newdata)\r\n-// }\r\n- \r\n-  \r\n \r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-// if(Data && selectedValue){\r\n-//   const newdata = Data.map((dataItem, index) => ({\r\n-//     ...dataItem,\r\n-//     ...selectedValue[index], \r\n-//     sum: dataItem.value + selectedValue[index].selected\r\n-//   }));\r\n-//   setData(newdata)\r\n-// }\r\n  \r\n   \r\n-  console.log(Data,\":NewArray\");\r\n \r\n const downloadExcel = () => {\r\n   const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n   const wb = XLSX.utils.book_new();\r\n@@ -477,730 +228,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-if(Data && selectedValue){\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n-  }));\r\n-  setData(newdata)\r\n-}\r\n- \r\n-  \r\n-  console.log(Data,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-\r\n-  const newdata = Data.map((dataItem, index) => ({\r\n-    ...dataItem,\r\n-    ...selectedValue[index], \r\n-    sum: dataItem.value + selectedValue[index].selected\r\n-  }));\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {newdata.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-  const [newdata,setNewData]=useState(\"\");\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n-  if(!selectedValue){\r\n-    console.log(\":not selected value\");\r\n-  }else{\r\n-    const NewArray = Data.map((dataItem, index) => ({\r\n-      ...dataItem,\r\n-      ...selectedValue[index], \r\n-      sum: dataItem.value + selectedValue[index].selected\r\n-    }));\r\n-    setData(NewArray);\r\n-    console.log(\"selected success\");\r\n-  }\r\n-\r\n-\r\n-  \r\n-  console.log(newdata,\":NewArray\");\r\n-\r\n-const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703833941523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n       ...selectedValue,\r\n       [index]: value,\r\n     });\r\n   };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-\r\n+  // console.log(selectedValue,\":selected va;lue\");\r\n+console.log(Data,\":Data Fetched\");\r\n  \r\n   \r\n \r\n const downloadExcel = () => {\r\n"
                },
                {
                    "date": 1703834008800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,50 +176,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n                  \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n                 </div>\r\n                       )}  \r\n                 \r\n               </div>\r\n"
                },
                {
                    "date": 1703834083790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,13 +146,10 @@\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n                           <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n+                          <td> {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name : ''}</td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>   <select\r\n                                   className='form-control'\r\n"
                },
                {
                    "date": 1703834143474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,19 +43,16 @@\n       ...selectedValue,\r\n       [index]: value,\r\n     });\r\n   };\r\n-  // console.log(selectedValue,\":selected va;lue\");\r\n-console.log(Data,\":Data Fetched\");\r\n- \r\n-  \r\n+  console.log(selectedValue,\":selected va;lue\");\r\n \r\n const downloadExcel = () => {\r\n-  const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-  const wb = XLSX.utils.book_new();\r\n-  XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-  XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-};\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n \r\n   return (\r\n     <>\r\n          <div className=\"card card-table show-entire\">\r\n@@ -146,10 +143,13 @@\n                         <tr key={index}>\r\n                           <td>{index + 1}</td>\r\n                           <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n                           <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td> {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name : ''}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>   <select\r\n                                   className='form-control'\r\n@@ -173,9 +173,56 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n                  \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n                 </div>\r\n                       )}  \r\n                 \r\n               </div>\r\n"
                },
                {
                    "date": 1703839706190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,16 @@\n       [index]: value,\r\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+  const tablerow ={\r\n+    \r\n+  }\r\n+  const handleDateChange =()=>{\r\n \r\n+  }\r\n+\r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n     const wb = XLSX.utils.book_new();\r\n     XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n@@ -166,8 +173,9 @@\n                             <td>\r\n                               <input\r\n                                className='form-control'\r\n                                type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n                             />\r\n                             </td>\r\n                         </tr>\r\n                       ))}\r\n"
                },
                {
                    "date": 1703839861772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,14 @@\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n   \r\n   const tablerow ={\r\n-    \r\n+    reasoncode :\"\",\r\n+    lastworkday:\"\"\r\n   }\r\n-  const handleDateChange =()=>{\r\n-\r\n+  const handleDateChange =(index)=>{\r\n+    const updatedRow = [...tablerow]\r\n+    updatedRow[index].\r\n   }\r\n \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n"
                },
                {
                    "date": 1703839883759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     lastworkday:\"\"\r\n   }\r\n   const handleDateChange =(index)=>{\r\n     const updatedRow = [...tablerow]\r\n-    updatedRow[index].\r\n+    updatedRow[index].lastworkday\r\n   }\r\n \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n"
                },
                {
                    "date": 1703839973460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n     // Add more options here as needed...\r\n   ];\r\n \r\n   const [selectedValue, setSelectedValue] = useState('');\r\n+  const [tablerow,setTablerow]=useState('');\r\n   const handleSelectChange = (event, index) => {\r\n     const { value } = event.target;\r\n     setSelectedValue({\r\n       ...selectedValue,\r\n@@ -45,15 +46,12 @@\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n   \r\n-  const tablerow ={\r\n-    reasoncode :\"\",\r\n-    lastworkday:\"\"\r\n-  }\r\n-  const handleDateChange =(index)=>{\r\n+\r\n+  const handleDateChange =(index,Value)=>{\r\n     const updatedRow = [...tablerow]\r\n-    updatedRow[index].lastworkday\r\n+    updatedRow[index].lastworkday=Value;\r\n   }\r\n \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n"
                },
                {
                    "date": 1703840023577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,11 @@\n \r\n   const handleDateChange =(index,Value)=>{\r\n     const updatedRow = [...tablerow]\r\n     updatedRow[index].lastworkday=Value;\r\n+    setTablerow(updatedRow);\r\n   }\r\n+  console.log(tablerow,\":tablerow\");\r\n \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n     const wb = XLSX.utils.book_new();\r\n"
                },
                {
                    "date": 1703840128286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,14 @@\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n   \r\n+  const tablerows ={\r\n+      lastworkday:\"\",\r\n+  }\r\n \r\n   const handleDateChange =(index,Value)=>{\r\n-    const updatedRow = [...tablerow]\r\n+    const updatedRow = [...tablerows]\r\n     updatedRow[index].lastworkday=Value;\r\n     setTablerow(updatedRow);\r\n   }\r\n   console.log(tablerow,\":tablerow\");\r\n"
                },
                {
                    "date": 1703840353119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     // Add more options here as needed...\r\n   ];\r\n \r\n   const [selectedValue, setSelectedValue] = useState('');\r\n-  const [tablerow,setTablerow]=useState('');\r\n+  const [tablerow,setTablerow]=useState([]);\r\n   const handleSelectChange = (event, index) => {\r\n     const { value } = event.target;\r\n     setSelectedValue({\r\n       ...selectedValue,\r\n"
                },
                {
                    "date": 1703840443364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,13 +50,13 @@\n   const tablerows ={\r\n       lastworkday:\"\",\r\n   }\r\n \r\n-  const handleDateChange =(index,Value)=>{\r\n-    const updatedRow = [...tablerows]\r\n-    updatedRow[index].lastworkday=Value;\r\n+  const handleDateChange = (index, value) => {\r\n+    const updatedRow = [...tablerow]; // Spread the array\r\n+    updatedRow[index].lastworkday = value;\r\n     setTablerow(updatedRow);\r\n-  }\r\n+  };\r\n   console.log(tablerow,\":tablerow\");\r\n \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n"
                },
                {
                    "date": 1703840501307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     // Add more options here as needed...\r\n   ];\r\n \r\n   const [selectedValue, setSelectedValue] = useState('');\r\n-  const [tablerow,setTablerow]=useState([]);\r\n+\r\n   const handleSelectChange = (event, index) => {\r\n     const { value } = event.target;\r\n     setSelectedValue({\r\n       ...selectedValue,\r\n@@ -49,9 +49,9 @@\n   \r\n   const tablerows ={\r\n       lastworkday:\"\",\r\n   }\r\n-\r\n+  const [tablerow,setTablerow]=useState([]);\r\n   const handleDateChange = (index, value) => {\r\n     const updatedRow = [...tablerow]; // Spread the array\r\n     updatedRow[index].lastworkday = value;\r\n     setTablerow(updatedRow);\r\n"
                },
                {
                    "date": 1703840610867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,16 +49,23 @@\n   \r\n   const tablerows ={\r\n       lastworkday:\"\",\r\n   }\r\n-  const [tablerow,setTablerow]=useState([]);\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+\r\n   const handleDateChange = (index, value) => {\r\n-    const updatedRow = [...tablerow]; // Spread the array\r\n-    updatedRow[index].lastworkday = value;\r\n-    setTablerow(updatedRow);\r\n+    setTablerow(prevRows => {\r\n+      return prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, lastworkday: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+    });\r\n   };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n+  \r\n+  console.log(tablerow, \":tablerow\");\r\n+  \r\n const downloadExcel = () => {\r\n     const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n     const wb = XLSX.utils.book_new();\r\n     XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n"
                },
                {
                    "date": 1703848458270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const [tablerow,setTablerow]=useState([]);\r\n+  useEffect(()=>{\r\n+    const tablerows ={\r\n+      lastworkday:\"\",\r\n+      reasoncode:\"\",\r\n+    }\r\n+    setTablerow(tablerows);\r\n+  },[tablerow])\r\n+ \r\n+  const handleDateChange = (index, value) => {\r\n+    const updatedRow = [...tablerow]; // Spread the array\r\n+    updatedRow[index].lastworkday = value;\r\n+    setTablerow(updatedRow);\r\n+  };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703848472302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n       lastworkday:\"\",\r\n       reasoncode:\"\",\r\n     }\r\n     setTablerow(tablerows);\r\n-  },[tablerow])\r\n+  },[])\r\n  \r\n   const handleDateChange = (index, value) => {\r\n     const updatedRow = [...tablerow]; // Spread the array\r\n     updatedRow[index].lastworkday = value;\r\n"
                },
                {
                    "date": 1703848510513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,254 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const [tablerow,setTablerow]=useState([]);\r\n+  useEffect(()=>{\r\n+    const tablerows ={\r\n+      lastworkday:[],\r\n+      reasoncode:\"\",\r\n+    }\r\n+    setTablerow(tablerows);\r\n+  },[])\r\n+ \r\n+  const handleDateChange = (index, value) => {\r\n+    const updatedRow = [...tablerow]; // Spread the array\r\n+    updatedRow[index].lastworkday = value;\r\n+    setTablerow(updatedRow);\r\n+  };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703848607759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,255 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const [tablerow, setTablerow] = useState({ lastworkday: [], reasoncode: \"\" });\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRow => ({\r\n+      ...prevRow,\r\n+      lastworkday: value // Update lastworkday property\r\n+    }));\r\n+  };\r\n+  \r\n+ \r\n+  const handleDateChange = (index, value) => {\r\n+    const updatedRow = [...tablerow]; // Spread the array\r\n+    updatedRow[index].lastworkday = value;\r\n+    setTablerow(updatedRow);\r\n+  };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703848648528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,259 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+  const handleSelectChange = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  \r\n+\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value // Update lastworkday property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+ \r\n+  // const handleDateChange = (index, value) => {\r\n+  //   const updatedRow = [...tablerow]; // Spread the array\r\n+  //   updatedRow[index].lastworkday = value;\r\n+  //   setTablerow(updatedRow);\r\n+  // };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703849122913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,12 @@\n   const [fromMonth, setFromMonth] = useState('');\r\n   const [toMonth, setToMonth] = useState('');\r\n   const [Data, setData] = useState([]);\r\n   const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n \r\n+\r\n   const handlesubmit = async (event) => {\r\n     event.preventDefault();\r\n     try {\r\n       const formdata = {\r\n@@ -35,22 +38,31 @@\n     { value: '4', label: 'Option 4' },\r\n     // Add more options here as needed...\r\n   ];\r\n \r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n \r\n-  const handleSelectChange = (event, index) => {\r\n+  const handleSelectChanges = (event, index) => {\r\n     const { value } = event.target;\r\n     setSelectedValue({\r\n       ...selectedValue,\r\n       [index]: value,\r\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n+   const handleSelectChange = (index, event) => {\r\n+    const { value } = event.target;\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        selectedValue: value // Update lastworkday property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n \r\n-  const [tablerow, setTablerow] = useState([]);\r\n \r\n+\r\n   const handleDateChange = (index, value) => {\r\n     setTablerow(prevRows => {\r\n       const updatedRows = [...prevRows];\r\n       updatedRows[index] = {\r\n@@ -255,1023 +267,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-\r\n-  const [tablerow, setTablerow] = useState({ lastworkday: [], reasoncode: \"\" });\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRow => ({\r\n-      ...prevRow,\r\n-      lastworkday: value // Update lastworkday property\r\n-    }));\r\n-  };\r\n-  \r\n- \r\n-  const handleDateChange = (index, value) => {\r\n-    const updatedRow = [...tablerow]; // Spread the array\r\n-    updatedRow[index].lastworkday = value;\r\n-    setTablerow(updatedRow);\r\n-  };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-\r\n-  const [tablerow,setTablerow]=useState([]);\r\n-  useEffect(()=>{\r\n-    const tablerows ={\r\n-      lastworkday:[],\r\n-      reasoncode:\"\",\r\n-    }\r\n-    setTablerow(tablerows);\r\n-  },[])\r\n- \r\n-  const handleDateChange = (index, value) => {\r\n-    const updatedRow = [...tablerow]; // Spread the array\r\n-    updatedRow[index].lastworkday = value;\r\n-    setTablerow(updatedRow);\r\n-  };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-\r\n-  const [tablerow,setTablerow]=useState([]);\r\n-  useEffect(()=>{\r\n-    const tablerows ={\r\n-      lastworkday:\"\",\r\n-      reasoncode:\"\",\r\n-    }\r\n-    setTablerow(tablerows);\r\n-  },[])\r\n- \r\n-  const handleDateChange = (index, value) => {\r\n-    const updatedRow = [...tablerow]; // Spread the array\r\n-    updatedRow[index].lastworkday = value;\r\n-    setTablerow(updatedRow);\r\n-  };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-  const handleSelectChange = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  \r\n-  const tablerows ={\r\n-      lastworkday:\"\",\r\n-  }\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      return prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, lastworkday: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-    });\r\n-  };\r\n-  \r\n-  console.log(tablerow, \":tablerow\");\r\n-  \r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703849187708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,19 +47,20 @@\n       [index]: value,\r\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n-   const handleSelectChange = (index, event) => {\r\n-    const { value } = event.target;\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n     setTablerow(prevRows => {\r\n       const updatedRows = [...prevRows];\r\n       updatedRows[index] = {\r\n         ...updatedRows[index],\r\n-        selectedValue: value // Update lastworkday property for a specific index\r\n+        selectedValue: value // Update selectedValue property for a specific index\r\n       };\r\n       return updatedRows;\r\n     });\r\n   };\r\n+  \r\n \r\n \r\n \r\n   const handleDateChange = (index, value) => {\r\n"
                },
                {
                    "date": 1703849217201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -189,9 +189,9 @@\n                           <td></td>\r\n                           <td>   <select\r\n                                   className='form-control'\r\n                                   value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(event, index)}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n                                 >\r\n                                   <option value=\"\">Select reason code</option>\r\n                                   {options.map((option) => (\r\n                                     <option key={option.value} value={option.value}>\r\n"
                },
                {
                    "date": 1703849358503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,273 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        selectedValue: value // Update selectedValue property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value // Update lastworkday property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+ \r\n+  // const handleDateChange = (index, value) => {\r\n+  //   const updatedRow = [...tablerow]; // Spread the array\r\n+  //   updatedRow[index].lastworkday = value;\r\n+  //   setTablerow(updatedRow);\r\n+  // };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''} // Ensure selectedValue[index] is defined\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                            </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703849435677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,20 +187,19 @@\n                           </td>\r\n                           <td></td>\r\n                           <td></td>\r\n                           <td>   <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''} // Ensure selectedValue[index] is defined\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                            </td>\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n                             <td>\r\n                               <input\r\n                                className='form-control'\r\n                                type=\"date\"\r\n"
                },
                {
                    "date": 1703849742759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,282 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const { value } = event.target;\r\n+    setSelectedValue({\r\n+      ...selectedValue,\r\n+      [index]: value,\r\n+    });\r\n+  };\r\n+  console.log(selectedValue,\":selected va;lue\");\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        selectedValue: value // Update selectedValue property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  \r\n+    // Other logic related to updating row data or state based on the selected value\r\n+  };\r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value // Update lastworkday property for a specific index\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+ \r\n+  // const handleDateChange = (index, value) => {\r\n+  //   const updatedRow = [...tablerow]; // Spread the array\r\n+  //   updatedRow[index].lastworkday = value;\r\n+  //   setTablerow(updatedRow);\r\n+  // };\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703849756887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n       [index]: value,\r\n     });\r\n   };\r\n   console.log(selectedValue,\":selected va;lue\");\r\n-  const handleSelectChanges = (index, event) => {\r\n+  const handleSelectChangess = (index, event) => {\r\n     const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n     setTablerow(prevRows => {\r\n       const updatedRows = [...prevRows];\r\n       updatedRows[index] = {\r\n"
                },
                {
                    "date": 1703849816700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,256 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+ \r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850341532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,267 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+ \r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850484858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+ \r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value }; \r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850549442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,14 @@\n \r\n  \r\n   const handleSelectChange = (index, event) => {\r\n     const value = event.target.value;\r\n+    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n+  \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n         if (i === index) {\r\n-          return { ...row, selectedValue: value }; \r\n+          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n         }\r\n         return row;\r\n       });\r\n       return updatedRows;\r\n@@ -268,1354 +270,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n- \r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n- \r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  const handleSelectChangess = (index, event) => {\r\n-    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        selectedValue: value // Update selectedValue property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  \r\n-    // Other logic related to updating row data or state based on the selected value\r\n-  };\r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value // Update lastworkday property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n- \r\n-  // const handleDateChange = (index, value) => {\r\n-  //   const updatedRow = [...tablerow]; // Spread the array\r\n-  //   updatedRow[index].lastworkday = value;\r\n-  //   setTablerow(updatedRow);\r\n-  // };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        selectedValue: value // Update selectedValue property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value // Update lastworkday property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n- \r\n-  // const handleDateChange = (index, value) => {\r\n-  //   const updatedRow = [...tablerow]; // Spread the array\r\n-  //   updatedRow[index].lastworkday = value;\r\n-  //   setTablerow(updatedRow);\r\n-  // };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const { value } = event.target;\r\n-    setSelectedValue({\r\n-      ...selectedValue,\r\n-      [index]: value,\r\n-    });\r\n-  };\r\n-  console.log(selectedValue,\":selected va;lue\");\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value; // Ensure event.target.value exists before destructuring\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        selectedValue: value // Update selectedValue property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value // Update lastworkday property for a specific index\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n- \r\n-  // const handleDateChange = (index, value) => {\r\n-  //   const updatedRow = [...tablerow]; // Spread the array\r\n-  //   updatedRow[index].lastworkday = value;\r\n-  //   setTablerow(updatedRow);\r\n-  // };\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850589525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,274 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+ \r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    const selectedValue = event.target.options[event.target.selectedIndex].text;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value, selectedValue: selectedValue };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850608245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,274 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+ \r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    const selectedValue = event.target.options[event.target.value].text;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value,  selectedValue };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850669935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,274 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n+    console.log('Selected Label:', selectedLabel); // Log selectedLabel\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>   <select\r\n+                                  className='form-control'\r\n+                                  value={selectedValue[index] || ''}\r\n+                                  onChange={(event) => handleSelectChange(index, event)}\r\n+                                >\r\n+                                  <option value=\"\">Select reason code</option>\r\n+                                  {options.map((option) => (\r\n+                                    <option key={option.value} value={option.value}>\r\n+                                      {option.label}\r\n+                                    </option>\r\n+                                  ))}\r\n+                                </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850700993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                                 >\r\n                                   <option value=\"\">Select reason code</option>\r\n                                   {options.map((option) => (\r\n                                     <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n+                                      {option.value}\r\n                                     </option>\r\n                                   ))}\r\n                                 </select> </td>\r\n                             <td>\r\n"
                },
                {
                    "date": 1703850750336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,275 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n+    console.log('Selected Label:', selectedLabel); // Log selectedLabel\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  \r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+  className='form-control'\r\n+  value={selectedValue[index] || ''}\r\n+  onChange={(event) => handleSelectChange(index, event)}\r\n+>\r\n+  <option value=\"\">Select reason code</option>\r\n+  {options.map((option) => (\r\n+    <option key={option.value} value={option.value}>\r\n+      {option.label} {/* Display option.label, not option.value */}\r\n+    </option>\r\n+  ))}\r\n+</select>\r\n+ </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850814140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,20 +41,24 @@\n \r\n \r\n   const handleSelectChange = (index, event) => {\r\n     const value = event.target.value;\r\n-    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n-    console.log('Selected Label:', selectedLabel); // Log selectedLabel\r\n   \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n         if (i === index) {\r\n-          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n+          return { ...row, selectedValue: value };\r\n         }\r\n         return row;\r\n       });\r\n       return updatedRows;\r\n     });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n   };\r\n   \r\n   \r\n \r\n@@ -196,12 +200,14 @@\n >\r\n   <option value=\"\">Select reason code</option>\r\n   {options.map((option) => (\r\n     <option key={option.value} value={option.value}>\r\n-      {option.label} {/* Display option.label, not option.value */}\r\n+      {option.label}\r\n     </option>\r\n   ))}\r\n </select>\r\n+\r\n+\r\n  </td>\r\n                             <td>\r\n                               <input\r\n                                className='form-control'\r\n"
                },
                {
                    "date": 1703850929862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,279 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+  setData(combinedArray)\r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850967129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,279 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+ return combinedArray\r\n+    console.log(combinedArray,\":Combined Arrayys\");\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703850981461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,279 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  if (Data.length === tablerow.length) {\r\n+    const combinedArray = Data.map((row, index) => ({\r\n+      ...row,\r\n+      ...tablerow[index]\r\n+    }));\r\n+ return combinedArray\r\n+\r\n+  } else {\r\n+    console.error('Arrays are of different lengths. Cannot combine.');\r\n+  }\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+  console.log(combinedArray,\":Combined Arrayys\");\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851070129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,282 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data.length === tablerow.length) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select>\r\n+                            <option>Select reason code</option>\r\n+                            <option>1</option>\r\n+                            <option >2</option>\r\n+                            <option>3</option>\r\n+                            <option >4</option>\r\n+                            </select> </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851196366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n \r\n   console.log(tablerow,\":tablerow\");\r\n \r\n   useEffect(()=>{\r\n-    if (Data.length === tablerow.length) {\r\n+    if (Data&&tablerow) {\r\n       const combinedArray = Data.map((row, index) => ({\r\n         ...row,\r\n         ...tablerow[index]\r\n       }));\r\n@@ -278,2219 +278,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n- return combinedArray\r\n-\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-  console.log(combinedArray,\":Combined Arrayys\");\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n- return combinedArray\r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  setData(combinedArray)\r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-  className='form-control'\r\n-  value={selectedValue[index] || ''}\r\n-  onChange={(event) => handleSelectChange(index, event)}\r\n->\r\n-  <option value=\"\">Select reason code</option>\r\n-  {options.map((option) => (\r\n-    <option key={option.value} value={option.value}>\r\n-      {option.label}\r\n-    </option>\r\n-  ))}\r\n-</select>\r\n-\r\n-\r\n- </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n-    console.log('Selected Label:', selectedLabel); // Log selectedLabel\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.value}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n- \r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    const selectedValue = event.target.options[event.target.value].text;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value,  selectedValue };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n- \r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    const selectedValue = event.target.options[event.target.selectedIndex].text;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value, selectedValue: selectedValue };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n- \r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-    const selectedLabel = event.target.options[event.target.selectedIndex].text;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value, selectedLabel: selectedLabel };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  if (Data.length === tablerow.length) {\r\n-    const combinedArray = Data.map((row, index) => ({\r\n-      ...row,\r\n-      ...tablerow[index]\r\n-    }));\r\n-  \r\n-    console.log(combinedArray,\":Combined Arrayys\");\r\n-  } else {\r\n-    console.error('Arrays are of different lengths. Cannot combine.');\r\n-  }\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>   <select\r\n-                                  className='form-control'\r\n-                                  value={selectedValue[index] || ''}\r\n-                                  onChange={(event) => handleSelectChange(index, event)}\r\n-                                >\r\n-                                  <option value=\"\">Select reason code</option>\r\n-                                  {options.map((option) => (\r\n-                                    <option key={option.value} value={option.value}>\r\n-                                      {option.label}\r\n-                                    </option>\r\n-                                  ))}\r\n-                                </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851292070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,276 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851322668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,276 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851365449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851414000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851438739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n   \r\n   },[tablerow])\r\n \r\n const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n     const wb = XLSX.utils.book_new();\r\n     XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n     XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n   };\r\n"
                },
                {
                    "date": 1703851586875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703851636191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -220,9 +220,9 @@\n                       ))}\r\n \r\n                     </tbody>\r\n                   </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n                     <thead>\r\n                       <tr>\r\n                         <th>SL NO</th>\r\n                         <th>IP NUMBER</th>\r\n"
                },
                {
                    "date": 1703852186206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852383709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  const handleSelectChange = (event, index) => {\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  ReasonCode: event.target.value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852474680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,283 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  const handleSelectChange = (event, index) => {\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  ReasonCode: event.target.value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852607179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,284 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  const handleSelectChange = (event, index) => {\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: event.target.value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852648382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,12 +59,13 @@\n       return updatedSelected;\r\n     });\r\n   };\r\n   const handleSelectChange = (event, index) => {\r\n+    const value = event.target.value;\r\n \t\tconst updatedTableRows = [...tablerow];\r\n \t\tupdatedTableRows[index] = {\r\n \t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: event.target.value, // Update salaryComponent based on the event value\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n \t\t  id : Number(index + 2 + 1)\r\n \t\t};\r\n \t\r\n \t  console.log(updatedTableRows,\"ii\")\r\n@@ -280,2493 +281,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  const handleSelectChange = (event, index) => {\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  ReasonCode: event.target.value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  const handleSelectChange = (event, index) => {\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  ReasonCode: event.target.value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive \">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.}</td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, selectedValue: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-table'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive d-none\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select>\r\n-                            <option>Select reason code</option>\r\n-                            <option>1</option>\r\n-                            <option >2</option>\r\n-                            <option>3</option>\r\n-                            <option >4</option>\r\n-                            </select> </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852770410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(value)\r\n+  };\r\n+  const handleSelectChange = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852780667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(value)\r\n+  };\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852812582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChanges = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  const handleSelectChange = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852821817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n     // Add more options here as needed...\r\n   ];\r\n \r\n \r\n-  const handleSelectChanges = (index, event) => {\r\n+  const handleSelectChange = (index, event) => {\r\n     const value = event.target.value;\r\n   \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n@@ -58,9 +58,9 @@\n       updatedSelected[index] = value;\r\n       return updatedSelected;\r\n     });\r\n   };\r\n-  const handleSelectChange = (event, index) => {\r\n+  const handleSelectChanges = (event, index) => {\r\n     const value = event.target.value;\r\n \t\tconst updatedTableRows = [...tablerow];\r\n \t\tupdatedTableRows[index] = {\r\n \t\t  ...updatedTableRows[index],\r\n"
                },
                {
                    "date": 1703852846282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const {value} = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852889666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n   ];\r\n \r\n \r\n   const handleSelectChange = (index, event) => {\r\n-    const {value} = event.target.value;\r\n+    const value= event.target.value;\r\n   \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n         if (i === index) {\r\n@@ -211,9 +211,9 @@\n                           <td></td>\r\n                           <td> <select\r\n                             className='form-control'\r\n                             value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n                           >\r\n                             <option value=\"\">Select reason code</option>\r\n                             {options.map((option) => (\r\n                               <option key={option.value} value={option.value}>\r\n"
                },
                {
                    "date": 1703852903061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value= event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(value);\r\n+  };\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852934810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,282 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value= event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, ReasonCode: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      setSelectedValue(value);\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+ \r\n+  };\r\n+  const handleSelectChanges = (event, index) => {\r\n+    const value = event.target.value;\r\n+\t\tconst updatedTableRows = [...tablerow];\r\n+\t\tupdatedTableRows[index] = {\r\n+\t\t  ...updatedTableRows[index],\r\n+\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n+\t\t  id : Number(index + 2 + 1)\r\n+\t\t};\r\n+\t\r\n+\t  console.log(updatedTableRows,\"ii\")\r\n+    setTablerow(updatedTableRows);\r\n+\t  }\r\n+\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852951688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,14 +44,15 @@\n     const value= event.target.value;\r\n   \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n+        setSelectedValue(value);\r\n         if (i === index) {\r\n           return { ...row, ReasonCode: value };\r\n         }\r\n         return row;\r\n       });\r\n-      setSelectedValue(value);\r\n+    \r\n       return updatedRows;\r\n     });\r\n   \r\n  \r\n@@ -278,1703 +279,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value= event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(value);\r\n-  };\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value= event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChange = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(value)\r\n-  };\r\n-  const handleSelectChanges = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(value)\r\n-  };\r\n-  const handleSelectChange = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Esi\n-import React,{useState,useEffect} from 'react'\r\n-import * as XLSX from 'xlsx';\r\n-import { toast } from 'react-toastify';\r\n-import { GetESIReport } from '../../Apicalls/Report';\r\n-\r\n-function Esi() {\r\n-  const [fromMonth, setFromMonth] = useState('');\r\n-  const [toMonth, setToMonth] = useState('');\r\n-  const [Data, setData] = useState([]);\r\n-  const [lastworkday, setLastWorkDay] = useState('');\r\n-  const [tablerow, setTablerow] = useState([]);\r\n-  const [selectedValue, setSelectedValue] = useState('');\r\n-\r\n-\r\n-  const handlesubmit = async (event) => {\r\n-    event.preventDefault();\r\n-    try {\r\n-      const formdata = {\r\n-        fromMonth: fromMonth,\r\n-        toMonth: toMonth,\r\n-      };\r\n-      const response = await GetESIReport(formdata);\r\n-      if (response.success) {\r\n-        setData(response.data);\r\n-        toast.success(response.message);\r\n-      } else {\r\n-        toast.error(response.message);\r\n-      }\r\n-    } catch (error) {\r\n-      console.log(error);\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  const options = [\r\n-    { value: '1', label: 'Option 1' },\r\n-    { value: '2', label: 'Option 2' },\r\n-    { value: '3', label: 'Option 3' },\r\n-    { value: '4', label: 'Option 4' },\r\n-    // Add more options here as needed...\r\n-  ];\r\n-\r\n-\r\n-  const handleSelectChanges = (index, event) => {\r\n-    const value = event.target.value;\r\n-  \r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = prevRows.map((row, i) => {\r\n-        if (i === index) {\r\n-          return { ...row, ReasonCode: value };\r\n-        }\r\n-        return row;\r\n-      });\r\n-      return updatedRows;\r\n-    });\r\n-  \r\n-    setSelectedValue(prevSelected => {\r\n-      const updatedSelected = [...prevSelected];\r\n-      updatedSelected[index] = value;\r\n-      return updatedSelected;\r\n-    });\r\n-  };\r\n-  const handleSelectChange = (event, index) => {\r\n-    const value = event.target.value;\r\n-\t\tconst updatedTableRows = [...tablerow];\r\n-\t\tupdatedTableRows[index] = {\r\n-\t\t  ...updatedTableRows[index],\r\n-\t\t  SelectedValue: value, // Update salaryComponent based on the event value\r\n-\t\t  id : Number(index + 2 + 1)\r\n-\t\t};\r\n-\t\r\n-\t  console.log(updatedTableRows,\"ii\")\r\n-    setTablerow(updatedTableRows);\r\n-\t  }\r\n-\r\n-  \r\n-  \r\n-\r\n-\r\n-\r\n-  const handleDateChange = (index, value) => {\r\n-    setTablerow(prevRows => {\r\n-      const updatedRows = [...prevRows];\r\n-      updatedRows[index] = {\r\n-        ...updatedRows[index],\r\n-        lastworkday: value\r\n-      };\r\n-      return updatedRows;\r\n-    });\r\n-  };\r\n-\r\n-  console.log(tablerow,\":tablerow\");\r\n-\r\n-  useEffect(()=>{\r\n-    if (Data&&tablerow) {\r\n-      const combinedArray = Data.map((row, index) => ({\r\n-        ...row,\r\n-        ...tablerow[index]\r\n-      }));\r\n-      setData(combinedArray)\r\n-      console.log(combinedArray,\":Combined Arrayys\");\r\n-    } else {\r\n-      console.error('Arrays are of different lengths. Cannot combine.');\r\n-    }\r\n-  \r\n-  },[tablerow])\r\n-\r\n-const downloadExcel = () => {\r\n-    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n-    const wb = XLSX.utils.book_new();\r\n-    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n-    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n-  };\r\n-\r\n-  return (\r\n-    <>\r\n-         <div className=\"card card-table show-entire\">\r\n-              <div className=\"card-body\">\r\n-                <div className=\"page-table-header mb-2\">\r\n-                  <div className=\"row align-items-center\">\r\n-                    <div className=\"col\">\r\n-                      <div className=\"doctor-table-blk\">\r\n-                        <h3>ESI REPORT</h3>\r\n-                        <div className=\"doctor-search-blk\">\r\n-                          {/* <div className=\"top-nav-search table-search-blk\">\r\n-                            <form>\r\n-                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n-                              <a className=\"btn\" >\r\n-                                <img src={searchicon} alt=\"\" />\r\n-                              </a>\r\n-                            </form>\r\n-                          \r\n-                          </div> */}\r\n-                          <div className=\"add-groups\">\r\n-                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n-                           \r\n-                              <img src={addicon} alt=\"\" />\r\n-                            </a> */}\r\n-                            \r\n-                          </div>\r\n-                        </div>\r\n-                      </div>\r\n-                    </div>\r\n-                    \r\n-                    <div className=\"col-auto  ms-auto\">\r\n-                      \r\n-                    <form >\r\n-                      \r\n-                          \r\n-                      <a type='button' className=\" me-2\" >\r\n-                        {/* <img src={pdficon} alt=\"\" /> */}\r\n-                        <input\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={fromMonth}\r\n-                          onChange={(e) => setFromMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                      </a>\r\n-                      <a type='button'  className=\" me-2\">\r\n-                        {/* <img src={TXticon} alt=\"\" /> */}\r\n-                        <input\r\n-                          // {...register('toMonth', { required: 'Please select a month' })}\r\n-                        className='form-control'\r\n-                          type=\"date\"\r\n-                          value={toMonth}\r\n-                          onChange={(e) => setToMonth(e.target.value)}\r\n-                          required\r\n-                        />\r\n-                        \r\n-                        </a>\r\n-\r\n-                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n-                          Submit\r\n-                      </button>\r\n-                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n-                      </form>\r\n-                    </div>\r\n-                  </div>\r\n-                </div>\r\n-                {Data.length === 0 ? \r\n-                (<p className='m-3'>No Data Available</p>):(\r\n-                    <div className=\"table-responsive\">\r\n-                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td> <select\r\n-                            className='form-control'\r\n-                            value={selectedValue[index] || ''}\r\n-                            onChange={(event) => handleSelectChange(index, event.target.value)}\r\n-                          >\r\n-                            <option value=\"\">Select reason code</option>\r\n-                            {options.map((option) => (\r\n-                              <option key={option.value} value={option.value}>\r\n-                                {option.label}\r\n-                              </option>\r\n-                            ))}\r\n-                          </select>\r\n-                          </td>\r\n-                            <td>\r\n-                              <input\r\n-                               className='form-control'\r\n-                               type=\"date\"\r\n-                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n-                            />\r\n-                            </td>\r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n-                    <thead>\r\n-                      <tr>\r\n-                        <th>SL NO</th>\r\n-                        <th>IP NUMBER</th>\r\n-                        <th>IP NAME</th>\r\n-                        <th>EMPLOYEE TYPE</th>\r\n-                        <th>No of Days for which wages paid/payable during the month</th>\r\n-                        <th>Total Monthly Wages</th>\r\n-                        <th> Reason Code for Zero workings days</th>\r\n-                        <th>Last Working Day</th>\r\n-                        <th>Employee Contribution</th>\r\n-                        <th>Employer Contribution</th>\r\n-                        <th>TOTAL ESI</th>\r\n-                      </tr>\r\n-                    </thead>\r\n-                 \r\n-                       <tbody>\r\n-                    {Data.map((item, index) => (\r\n-                        <tr key={index}>\r\n-                          <td>{index + 1}</td>\r\n-                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n-                          <td>{item.employeeid && item.employeeid.name}</td>\r\n-                          <td>\r\n-                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n-                              ? item.employeeid.EmployeeTypeId.name\r\n-                              : ''}\r\n-                          </td>\r\n-                          <td></td>\r\n-                          <td></td>\r\n-                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n-                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n-                            \r\n-                        </tr>\r\n-                      ))}\r\n-\r\n-                    </tbody>\r\n-                  </table>\r\n-                </div>\r\n-                      )}  \r\n-                \r\n-              </div>\r\n-              \r\n-            </div>\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Esi\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703852989389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,26 +39,25 @@\n     // Add more options here as needed...\r\n   ];\r\n \r\n \r\n-  const handleSelectChange = (index, event) => {\r\n+  const handleSelectChanges = (index, event) => {\r\n     const value= event.target.value;\r\n   \r\n     setTablerow(prevRows => {\r\n       const updatedRows = prevRows.map((row, i) => {\r\n-        setSelectedValue(value);\r\n         if (i === index) {\r\n           return { ...row, ReasonCode: value };\r\n         }\r\n         return row;\r\n       });\r\n-    \r\n       return updatedRows;\r\n+      \r\n     });\r\n   \r\n  \r\n   };\r\n-  const handleSelectChanges = (event, index) => {\r\n+  const handleSelectChange = (event, index) => {\r\n     const value = event.target.value;\r\n \t\tconst updatedTableRows = [...tablerow];\r\n \t\tupdatedTableRows[index] = {\r\n \t\t  ...updatedTableRows[index],\r\n"
                },
                {
                    "date": 1703853044886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import React,{useState,useEffect} from 'react'\r\n+import * as XLSX from 'xlsx';\r\n+import { toast } from 'react-toastify';\r\n+import { GetESIReport } from '../../Apicalls/Report';\r\n+\r\n+function Esi() {\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState('');\r\n+  const [Data, setData] = useState([]);\r\n+  const [lastworkday, setLastWorkDay] = useState('');\r\n+  const [tablerow, setTablerow] = useState([]);\r\n+  const [selectedValue, setSelectedValue] = useState('');\r\n+\r\n+\r\n+  const handlesubmit = async (event) => {\r\n+    event.preventDefault();\r\n+    try {\r\n+      const formdata = {\r\n+        fromMonth: fromMonth,\r\n+        toMonth: toMonth,\r\n+      };\r\n+      const response = await GetESIReport(formdata);\r\n+      if (response.success) {\r\n+        setData(response.data);\r\n+        toast.success(response.message);\r\n+      } else {\r\n+        toast.error(response.message);\r\n+      }\r\n+    } catch (error) {\r\n+      console.log(error);\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  const options = [\r\n+    { value: '1', label: 'Option 1' },\r\n+    { value: '2', label: 'Option 2' },\r\n+    { value: '3', label: 'Option 3' },\r\n+    { value: '4', label: 'Option 4' },\r\n+    // Add more options here as needed...\r\n+  ];\r\n+\r\n+\r\n+  const handleSelectChange = (index, event) => {\r\n+    const value = event.target.value;\r\n+  \r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = prevRows.map((row, i) => {\r\n+        if (i === index) {\r\n+          return { ...row, selectedValue: value };\r\n+        }\r\n+        return row;\r\n+      });\r\n+      return updatedRows;\r\n+    });\r\n+  \r\n+    setSelectedValue(prevSelected => {\r\n+      const updatedSelected = [...prevSelected];\r\n+      updatedSelected[index] = value;\r\n+      return updatedSelected;\r\n+    });\r\n+  };\r\n+  \r\n+  \r\n+\r\n+\r\n+\r\n+  const handleDateChange = (index, value) => {\r\n+    setTablerow(prevRows => {\r\n+      const updatedRows = [...prevRows];\r\n+      updatedRows[index] = {\r\n+        ...updatedRows[index],\r\n+        lastworkday: value\r\n+      };\r\n+      return updatedRows;\r\n+    });\r\n+  };\r\n+\r\n+  console.log(tablerow,\":tablerow\");\r\n+\r\n+  useEffect(()=>{\r\n+    if (Data&&tablerow) {\r\n+      const combinedArray = Data.map((row, index) => ({\r\n+        ...row,\r\n+        ...tablerow[index]\r\n+      }));\r\n+      setData(combinedArray)\r\n+      console.log(combinedArray,\":Combined Arrayys\");\r\n+    } else {\r\n+      console.error('Arrays are of different lengths. Cannot combine.');\r\n+    }\r\n+  \r\n+  },[tablerow])\r\n+\r\n+const downloadExcel = () => {\r\n+    const worksheet = XLSX.utils.table_to_sheet(document.querySelector('.comman-tabless'));\r\n+    const wb = XLSX.utils.book_new();\r\n+    XLSX.utils.book_append_sheet(wb, worksheet, 'Sheet1');\r\n+    XLSX.writeFile(wb, `EPFO_${fromMonth} to ${toMonth}.xlsx`);\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+         <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>ESI REPORT</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                        \r\n+                        </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n+                          Submit\r\n+                      </button>\r\n+                      <button className='btn btn-primary submit-form m-2' onClick={downloadExcel}>Download Excel</button>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+                {Data.length === 0 ? \r\n+                (<p className='m-3'>No Data Available</p>):(\r\n+                    <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td> <select\r\n+                            className='form-control'\r\n+                            value={selectedValue[index] || ''}\r\n+                            onChange={(event) => handleSelectChange(index, event)}\r\n+                          >\r\n+                            <option value=\"\">Select reason code</option>\r\n+                            {options.map((option) => (\r\n+                              <option key={option.value} value={option.value}>\r\n+                                {option.label}\r\n+                              </option>\r\n+                            ))}\r\n+                          </select>\r\n+                          </td>\r\n+                            <td>\r\n+                              <input\r\n+                               className='form-control'\r\n+                               type=\"date\"\r\n+                               onChange={(e) => handleDateChange(index, e.target.value)}\r\n+                            />\r\n+                            </td>\r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                  <table className=\"table border-0 custom-table comman-tabless  mb-0 table-responsive\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>SL NO</th>\r\n+                        <th>IP NUMBER</th>\r\n+                        <th>IP NAME</th>\r\n+                        <th>EMPLOYEE TYPE</th>\r\n+                        <th>No of Days for which wages paid/payable during the month</th>\r\n+                        <th>Total Monthly Wages</th>\r\n+                        <th> Reason Code for Zero workings days</th>\r\n+                        <th>Last Working Day</th>\r\n+                        <th>Employee Contribution</th>\r\n+                        <th>Employer Contribution</th>\r\n+                        <th>TOTAL ESI</th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                 \r\n+                       <tbody>\r\n+                    {Data.map((item, index) => (\r\n+                        <tr key={index}>\r\n+                          <td>{index + 1}</td>\r\n+                          <td>{item.employeeid && item.employeeid.Ipnumber}</td>\r\n+                          <td>{item.employeeid && item.employeeid.name}</td>\r\n+                          <td>\r\n+                            {item.employeeid && item.employeeid.EmployeeTypeId\r\n+                              ? item.employeeid.EmployeeTypeId.name\r\n+                              : ''}\r\n+                          </td>\r\n+                          <td></td>\r\n+                          <td></td>\r\n+                          <td>{item.selectedValue?item.selectedValue:\"\"}</td>\r\n+                          <td>{item.lastworkday?item.lastworkday:\"\"}</td>\r\n+                            \r\n+                        </tr>\r\n+                      ))}\r\n+\r\n+                    </tbody>\r\n+                  </table>\r\n+                </div>\r\n+                      )}  \r\n+                \r\n+              </div>\r\n+              \r\n+            </div>\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Esi\n\\ No newline at end of file\n"
                }
            ],
            "date": 1703662198942,
            "name": "Commit-0",
            "content": "import React,{useState,useEffect} from 'react'\r\nimport * as XLSX from 'xlsx';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Esi() {\r\n\r\n    const [fromMonth,setFromMonth]=useState('');\r\n    const [toMonth,setToMonth]=useState('');\r\n    const [Data,setData]=useState('');\r\nconsole.log(fromMonth,toMonth);\r\n\r\n\r\nconst handlesubmit =async(event)=>{\r\n  event.preventDefault();\r\ntry {\r\n  const formdata = {\r\n    fromMonth : fromMonth,\r\n    toMonth : toMonth,\r\n  }\r\n// const response = await GetPFReport(formdata)\r\n// if (response.success){\r\n//   setData(response.data);\r\n//   toast.success(response.message)\r\n//   }else{\r\n//     toast.error(response.message)\r\n//   }\r\n} catch (error) {\r\n  console.log(error);\r\n  toast.error(error.message);\r\n}\r\n\r\n }\r\n  return (\r\n    <>\r\n         <div className=\"card card-table show-entire\">\r\n              <div className=\"card-body\">\r\n                <div className=\"page-table-header mb-2\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                      <div className=\"doctor-table-blk\">\r\n                        <h3>ESI REPORT</h3>\r\n                        <div className=\"doctor-search-blk\">\r\n                          {/* <div className=\"top-nav-search table-search-blk\">\r\n                            <form>\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n                              <a className=\"btn\" >\r\n                                <img src={searchicon} alt=\"\" />\r\n                              </a>\r\n                            </form>\r\n                          \r\n                          </div> */}\r\n                          <div className=\"add-groups\">\r\n                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n                           \r\n                              <img src={addicon} alt=\"\" />\r\n                            </a> */}\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-auto  ms-auto\">\r\n                      \r\n                    <form >\r\n                      \r\n                          \r\n                      <a type='button' className=\" me-2\" >\r\n                        {/* <img src={pdficon} alt=\"\" /> */}\r\n                        <input\r\n                        className='form-control'\r\n                          type=\"date\"\r\n                          value={fromMonth}\r\n                          onChange={(e) => setFromMonth(e.target.value)}\r\n                          required\r\n                        />\r\n                      </a>\r\n                      <a type='button'  className=\" me-2\">\r\n                        {/* <img src={TXticon} alt=\"\" /> */}\r\n                        <input\r\n                          // {...register('toMonth', { required: 'Please select a month' })}\r\n                        className='form-control'\r\n                          type=\"date\"\r\n                          value={toMonth}\r\n                          onChange={(e) => setToMonth(e.target.value)}\r\n                          required\r\n                        />\r\n                        \r\n                        </a>\r\n\r\n                      <button className=\" btn btn-primary submit-form m-3\" onClick={handlesubmit}>\r\n                          Submit\r\n                      </button>\r\n                      <button className='btn btn-primary submit-form m-2' >Download Excel</button>\r\n                  \r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n               \r\n                    <div className=\"table-responsive\">\r\n                  <table className=\"table border-0 custom-table comman-table  mb-0 table-responsive\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>SL NO</th>\r\n                        <th>IP NUMBER</th>\r\n                        <th>IP NAME</th>\r\n                        <th>EMPLOYEE TYPE</th>\r\n                        <th>No of Days for which wages paid/payable during the month</th>\r\n                        <th>EPS WAGES</th>\r\n                        <th>EDLI WAGES</th>\r\n                        \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    \r\n                    \r\n                    </tbody>\r\n                  </table>\r\n                \r\n                </div>\r\n                \r\n                \r\n              </div>\r\n              {/* <nav aria-label=\"Page navigation example\">\r\n           \r\n           {memoizedData.length > itemsPerPage && (\r\n             <ul className=\"pagination\">\r\n               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n                 .fill()\r\n                 .map((_, index) => (\r\n                         <li className=\"page-item\" key={index}>\r\n                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n                           </li>\r\n                     \r\n                  \r\n                 ))}\r\n             </ul>\r\n           )}\r\n        \r\n           </nav> */}\r\n            </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Esi"
        }
    ]
}