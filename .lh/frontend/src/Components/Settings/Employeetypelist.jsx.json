{
    "sourceFile": "frontend/src/Components/Settings/Employeetypelist.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1703660438574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1703660438574,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport searchicon from '../../assets/img/icons/search-normal.svg';\r\nimport addicon from '../../assets/img/icons/plus.svg';\r\nimport refreshicon from '../../assets/img/icons/re-fresh.svg';\r\nimport pdficon from '../../assets/img/icons/pdf-icon-01.svg';\r\nimport TXticon from '../../assets/img/icons/pdf-icon-02.svg';\r\nimport csvicon from '../../assets/img/icons/pdf-icon-03.svg';\r\nimport Excelicon from '../../assets/img/icons/pdf-icon-04.svg';\r\n\r\nimport { getallemployeetype } from '../../Apicalls/Employeetype';\r\nimport Employeeedit from '../Modal/Employeeedit';\r\nimport EmployeeTypeDelete from '../Modal/EmployeeTypeDelete';\r\n\r\nfunction Employeetypelist({formdata,setformdata}) {\r\n  const [Data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setshowDeleteModal] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n    if (formdata.length!=0) {\r\n       const isNameInData = Data.some((item) => item.name === formdata.name);\r\n       if (!isNameInData) {\r\n         setData((prevData) => [formdata,...prevData]);\r\n         setformdata([])\r\n       }\r\n    }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const result = await getallemployeetype();\r\n        setData(result.data);\r\n        setIsLoading(false);\r\n        // setrender(!render)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n // Function to handle the click event\r\nconst handleEditClick = (item) => {\r\n  // Set showEditModal to true when the \"Edit\" button is clicked\r\n  setShowEditModal(true);\r\n  setSelectedItem(item);\r\n};\r\n\r\n // Function to handle the click event\r\n const handleDeleteClick = (item) => {\r\n console.log(item);\r\n setshowDeleteModal(true)\r\n setSelectedItem(item)\r\n};\r\n\r\nconst closeDeleteModal = () => {\r\n  // Set showEditModal to false when the modal is closed\r\n  setshowDeleteModal(false);\r\n};\r\n\r\n// Function to close the modal\r\nconst closeEditModal = () => {\r\n  // Set showEditModal to false when the modal is closed\r\n  setShowEditModal(false);\r\n};\r\n\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // You can render a loading indicator here\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          {Data.length ===0 ? (\r\n            <p>No Data available</p> // You can customize this message\r\n          ) : (\r\n            <div className=\"card  card-table show-entire\">\r\n              <div className=\"card-body\">\r\n                <div className=\"page-table-header mb-2\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                      <div className=\"doctor-table-blk\">\r\n                        <h3>Employeelist List</h3>\r\n                        <div className=\"doctor-search-blk\">\r\n                          <div className=\"top-nav-search table-search-blk\">\r\n                            <form>\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n                              <a className=\"btn\">\r\n                                <img src={searchicon} alt=\"\" />\r\n                              </a>\r\n                            </form>\r\n                          </div>\r\n                          <div className=\"add-group\">\r\n                            <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n                              <img src={addicon} alt=\"\" />\r\n                            </a>\r\n                            <a href=\"javascript:;\" className=\"btn btn-primary doctor-refresh ms-2\">\r\n                              <img src={refreshicon} alt=\"\" />\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-auto text-end float-end ms-auto download-grp\">\r\n                      <a href=\"javascript:;\" className=\"me-2\">\r\n                        <img src={pdficon} alt=\"\" />\r\n                      </a>\r\n                      <a href=\"javascript:;\" className=\"me-2\">\r\n                        <img src={TXticon} alt=\"\" />\r\n                      </a>\r\n                      <a href=\"javascript:;\" className=\"me-2\">\r\n                        <img src={csvicon} alt=\"\" />\r\n                      </a>\r\n                      <a href=\"javascript;\">\r\n                        <img src={Excelicon} alt=\"\" />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table border-0 custom-table comman-table datatable mb-0\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>No</th>\r\n                      <th>Employee Id</th>\r\n                      <th>Name</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                 \r\n                  <tbody>\r\n                    {Data.map((item, index) => (\r\n                      <tr  key={`${item._id}-${index}`}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{item.employeeid}</td>\r\n                        <td>{item.name}</td>\r\n                        {index < 1 ? (\r\n\r\n              <td></td> \r\n              ) : (\r\n                        <td className=\"text-end\">\r\n                          <div className=\"dropdown dropdown-action\">\r\n                            <a\r\n                              href=\"#\"\r\n                              className=\"action-icon dropdown-toggle\"\r\n                              data-bs-toggle=\"dropdown\"\r\n                              aria-expanded=\"false\"\r\n                            >\r\n                              <i className=\"fa fa-ellipsis-v\"></i>\r\n                            </a>\r\n                            <div className=\"dropdown-menu dropdown-menu-end\">\r\n                              <a\r\n                             onMouseEnter={() => {\r\n                              setSelectedItem(item);\r\n                              setShowEditModal(true);\r\n                            }}\r\n                            onClick={(event) => {\r\n                              // Prevent the default click behavior to avoid double triggering on mobile devices\r\n                              event.preventDefault();\r\n                              \r\n                              // Your edit click logic\r\n                              handleEditClick(item);\r\n                            }}\r\n                            onTouchStart={() => {\r\n                              // Touch devices do not have onMouseEnter, so use onTouchStart\r\n                              setSelectedItem(item);\r\n                              setShowEditModal(true);\r\n                            }} className=\"dropdown-item\" data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#delete_patients\"\r\n                                >\r\n                                <i className=\"fa-solid fa-pen-to-square m-r-5\"></i> Edit\r\n                              </a>\r\n                              <a\r\n                               onMouseEnter={() => {\r\n                                setshowDeleteModal(true);\r\n                                setSelectedItem(item);\r\n                              }}\r\n                              onClick={() => handleDeleteClick(item)}\r\n                              onTouchStart={() => {\r\n                                // Touch devices do not have onMouseEnter, so use onTouchStart\r\n                                setshowDeleteModal(true);\r\n                                setSelectedItem(item);\r\n                              }}\r\n                                className=\"dropdown-item\"\r\n                                data-bs-toggle=\"modal\"\r\n                                data-bs-target=\"#delete_patient\"\r\n                              >\r\n                                <i className=\"fa fa-trash-alt m-r-5\"></i> Delete\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showEditModal && selectedItem && (\r\n  <Employeeedit\r\n  setData={setData}\r\n  Data={Data}\r\n    item={selectedItem}\r\n    closeEditModal={closeEditModal}\r\n   \r\n  />\r\n)}\r\n\r\n{showDeleteModal && selectedItem &&(<EmployeeTypeDelete\r\n setData={setData}\r\n Data={Data}\r\n item={selectedItem}\r\n closeDeleteModal={closeDeleteModal}\r\n/>)}\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Employeetypelist;\r\n"
        }
    ]
}