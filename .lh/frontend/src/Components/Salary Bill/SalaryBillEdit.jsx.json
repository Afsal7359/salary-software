{
    "sourceFile": "frontend/src/Components/Salary Bill/SalaryBillEdit.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1704797526021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1704797540763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,9 +169,9 @@\n \t\tprice:DAPrice\r\n \t},\r\n \t{\r\n \t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tsalaryComponent:\"659bb617d4d7dd6ffd8dfbf7'\",\r\n \t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n \t\tvalue:IRValue?IRValue:\"\",\r\n \t\tprice:IRPrice\r\n \t}\r\n"
                }
            ],
            "date": 1704797526021,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getallSalary } from \"../../Apicalls/salarymaster\";\r\nimport { getallemployeemaster } from \"../../Apicalls/EmployeeMater\";\r\nimport { EditSalaryBill } from \"../../Apicalls/salaryBill\";\r\nimport List_salary_bill from \"./List_salary_bill\";\r\n\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\n\r\nfunction SalaryBillEdit({  item, setData, Data, }) {\r\n  console.log(item,\"itemddddddddddddddddddddddd\");\r\n\r\n  const MemoizedSalaryBill = React.memo(List_salary_bill);\r\n \r\n\tconst [Editsalary,setEditSalary]=useState(true)\r\n   \r\n\tconst [unit,setUnit]=useState('');\r\n  const [unitid,setUnitid]=useState(item.unitid._id);\r\n  const [units,setUnits]=useState(item.unitid.name);\r\n  const [department,setDepartment]=useState('');\r\n\tconst [departmentid,setDepartmentid]=useState(item.departmentid.name);\r\n  const [departments,setDepartments]=useState(item.departmentid._id);\r\n\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n\tconst [Employeename, setEmployeeName] = useState(item.employeeid.name);\r\n\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n\tconst [absentvalue,setAbsentValue]=useState('')\r\n\tconst [allowedleave,setAllowedLeave]=useState(item.allowedleave)\r\n\tconst [tablerow, setTablerow] = useState(item.tablerow.slice(2));\r\n\tconst [basicSalary,setBasicSalary]=useState(item.basicSalary)\r\n\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n  const [SalaryBillNo,setSalaryBillNo]=useState(item.SalaryBillNo)\r\n\tconst [TotalSalary, setTotalSalary] = useState('');\r\n\tconst [totalAmount, setTotalAmount] = useState(item.totalAmount);\r\n\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n\tconst [employeeid,setEmployeeid]=useState('');\r\n  const [employeeId,setemployeeId]=useState(item.employeeid._id);\r\n\tconst [formdata,setformData]=useState([]);\r\n\tconst [date,setDate]=useState(item.date);\r\n\tconst[count,setcount]=useState('');\r\n  const [salarymasterData, setSalarymasterData] = useState([]);\r\n  const [absentDays, setAbsentDays] = useState(0);\r\n\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n\tconst [salaryTotal, setSalaryTotal] = useState(item.totalAmount);\r\n  const [leaveDifference,setLeaveDifference]=useState('');\r\n  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n  const [itemid, setitemid] = useState(item._id);\r\n  const [month, setmonth] = useState(item.month)\r\n\r\n\r\n  \r\n\t  \r\n  const [DAPercentage,setDAPercentage]=useState(item.tablerow[0]?item.tablerow[0].percentage:\"\");\r\n  const [DAValue,setDAValue]=useState(item.tablerow[0]?item.tablerow[0].value:\"\");\r\n  const [DAPrice,setDAPrice]=useState(item.tablerow[0]?item.tablerow[0].price:\"\");\r\n  const [IRPercentage,setIRPercentage]=useState(item.tablerow[1]?item.tablerow[1].percentage:\"\");\r\n  const [IRValue,setIRValue]=useState(item.tablerow[1]?item.tablerow[1].value:\"\");\r\n  const [IRPrice,setIRPrice]=useState(item.tablerow[1]?item.tablerow[1].price:\"\");\r\n  const [dateOfJoining,setDateOfJoining]=useState(item.employeeid.dateOfJoining); \r\n  const [employeeTypeIds,setEmployeeTypeIds]=useState(item.employeeid.EmployeeTypeId._id);\r\n  const [employeeTypeId,setEmployeeTypeId]=useState(item.employeeid.EmployeeTypeId._id);\r\n  const [tabledisplay,setTableDisplay]=useState(false);\r\n\r\n\tconst [salaryList,setSalaryList]=useState(false)\r\n\r\n\tconst [EPFWage,setEPFWage]=useState(\"\");\r\n\tconst [EPSWage,setEPSWage]=useState(\"\");\r\n\tconst [EPSContri,setEPSContri]=useState(\"\");\r\n\tconst[EPFContri,setEPFContri]=useState(\"\");\r\n\tconst[EPSEPFDiff,setEPSEPFDiff]=useState(\"\");\r\n\tconst [EDLIWage, setEDLIWage]=useState(\"\");\r\n\r\n\tconst handlesalarymasterclick = async () => {\r\n\t\ttry {\r\n\t\t  \r\n\t\t\tconst response = await getallSalary();\r\n\t\t\tif (response.success) {\r\n\t\t\t\tconsole.log(response.data,\"iiiiiiiiiiiiiiiiiiiii\");\r\n\t\t\t  setSalarymasterData(response.data);\r\n\t\t\t} else {\r\n\t\t\t  setSalarymasterData([]);\r\n\t\t\t}\r\n\t\t  \r\n\t\t  console.log(\"hhhhhhhhhhhhhhhhhhhhhhh\");\r\n\t\t  setIsSalarymasterDataFetched(true);\r\n\t\t} catch (error) {\r\n\t\t  toast.error(error.message);\r\n\t\t}\r\n\t  };\r\n\t  useEffect(()=>{\r\n\t\thandlesalarymasterclick()\r\n\t  },[])\r\n\r\nuseEffect(()=>{\r\n\tif(employeeTypeIds||employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n\t\tsetTableDisplay(true)\r\n\t}else if(employeeTypeIds||employeeTypeId !== \"6566be7b0085f19cfbfd00c1\" || \"\"){\r\n\t\tsetTableDisplay(false)\r\n\t}\r\n},[employeeTypeId])\r\n\t\r\n\r\n    const handleEmployeeclick = async () => {\r\n      console.log('ddddddddddEmployee');\r\n      try {\r\n        if (!isEmployeeDataFetched) {\r\n        const response = await getallemployeemaster ();\r\n        if (response.success) {\r\n          setEmployeeData(response.data);\r\n        } else {\r\n          setEmployeeData([]);\r\n        }\r\n        setIsEmployeeDataFetched(true);\r\n        }\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      }\r\n      };\r\n\t  useEffect(()=>{\r\n\t\thandleEmployeeclick()\r\n\t  },[])\r\nconsole.log('ddddddddddddddddddddddddddddddddddddd',EmployeeData);\r\n console.log(employeeTypeId,\"::EmployeeTypeID\");\r\n  \r\n\r\nconsole.log('frfrrrrffrfrffrffrffr',filterEmployeeData);\r\n\r\n\r\n\r\n\r\n  const handlesalarymasterchange = (event, index) => {\r\n    const updatedTableRows = [...tablerow];\r\n    updatedTableRows[index] = {\r\n      ...updatedTableRows[index],\r\n      salaryComponent: event.target.value,\r\n    };\r\n    setTablerow(updatedTableRows); // Update the state with the modified rows\r\n  };\r\n \r\n\r\n\r\n  const handleAddRow = () => {\r\n    const newRow = {\r\n        id: tablerow.length + 1,\r\n        salaryComponent: \"\",\r\n        percentage: \"\",\r\n        value: \"\",\r\n        price: \"\",\r\n  };\r\n    setTablerow([...tablerow, newRow]);\r\n   \r\n  };\r\n\r\n\r\n  const handleRemoveRow = (id) => {\r\n    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n  };\r\n\r\n  \r\n\r\n  const firstrow =[\r\n\t{\r\n\t\tid:1,\r\n\t\tsalaryComponent:\"659bb609d4d7dd6ffd8dfbf3\",\r\n\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n\t\tvalue:DAValue?DAValue:\"\",\r\n\t\tprice:DAPrice\r\n\t},\r\n\t{\r\n\t\tid:2,\r\n\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n\t\tvalue:IRValue?IRValue:\"\",\r\n\t\tprice:IRPrice\r\n\t}\r\n  ]\r\n\r\n  \r\n     \r\n  const [selectedOption, setSelectedOption] = useState([]);\r\n \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t  let totalAmount = basicSalary;\r\n\t\t  let totalDeduction = 0;\r\n\t\t  let totalIncrement = 0;\r\n\t  \r\n\t\t  // Your existing logic for calculating totalAmount\r\n\t  \r\n\t\t  tablerow.forEach((row) => {\r\n\t\t\tconst salaryType = salarymasterData.find(\r\n\t\t\t  (item) =>\r\n\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n\t\t\t);\r\n\t  \r\n\t\t\tif (salaryType) {\r\n\t\t\t  if (salaryType.type === 'Increment') {\r\n\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  });\r\n\t  \r\n\t\t  // Calculate the total after deducting deductions and adding increments\r\n\t\t  totalAmount = (totalAmount - totalDeduction )+ (totalIncrement)+ parseFloat(DAPrice) + parseFloat(IRPrice)\r\n\t  console.log(totalAmount,\":totalammount\");\r\n\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n\t  \r\n\t\t  if (absentDays > allowedleave) {\r\n\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n\t\t\tsetSalaryTotal({\r\n\t\t\t\t...itemdata,\r\n\t\t\t\tTotalSalary: totalAmount.toFixed(2),\r\n\t\t\t\t});;\r\n\t\t  } else {\r\n\t\t\tsetSalaryTotal({\r\n\t\t\t\t...itemdata,\r\n\t\t\t\tTotalSalary: totalAmount.toFixed(2),\r\n\t\t\t\t});\r\n\t\t  }\r\n\t  \r\n\t\t  const balanceleave = allowedleave - absentDays;\r\n\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n\t  \r\n\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement) );\r\n\t\t  setTotalAmount(totalAmount.toFixed(2)); // Set the total amount\r\n\t\t  console.log('total deduction:',totalDeduction);\r\n\t\t  console.log('total increment:',totalincrement);\r\n\t\t  console.log('total :',totalAmount);\r\n\t\t} catch (error) {\r\n\t\t  console.error('Error in useEffect:', error);\r\n\t\t}\r\n\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice,selectedOption]);\r\n\t  \r\n    \r\n\r\n\t  const handleTableClick =()=>{\r\n\t\tsetEditSalary(false)\r\n\t\tsetSalaryList(true)\r\n\t   }\r\n\t\r\n\r\n\tconsole.log('selected name',selectedOption);\r\n\tconsole.log(Employeename,\":Employeename\");\r\n\tconst [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n   \r\n\t const handleInputChange = (newValue) => {\r\n\t   // Implement your search/filter logic here\r\n\t   // For example, filter options based on user input\r\n\t   console.log(\"newwwvaluees\",newValue);\r\n\t   const filteredOptions = EmployeeData.filter((data) =>\r\n\t\t data.name.toLowerCase().includes(newValue.toLowerCase())\r\n\t   ).map((data) => ({ value: data.name, label: data.name }));\r\n\t   setOptions(filteredOptions);\r\n\t };\r\n \r\n\t\t \r\n//  // console.log('opyions',selectedOption.value);\r\n//  console.log(\"employeeid\",EmployeeId);\r\n \r\n\tconst handleSelectChange = (selected) => {\r\n\t setSelectedOption(selected);\r\n\t // console.log(selected,\"haaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaai\");\r\n\t // console.log(selectedOption,'gggggggggggggggiiiiiiiiiiiiiiiiiiiiiii');\r\n\t // console.log('opyions',selectedOption.value);\r\n\t const select = selected.value\r\n\t console.log(select,\"fffffffffffffffffffffdddddddddddddddddddd\");\r\n\t if (select) {\r\n\t\t \r\n\t\t const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n\t\t if(filteredEmployees[0].EmployeeTypeId._id !== \"6566be7b0085f19cfbfd00c1\"){\r\n\t\t\tsetTablerow([])\r\n\t\t\tsetDAValue(\"\")\r\n\t\t\tsetIRValue(\"\")\r\n\t\t\tsetDAPercentage(\"\")\r\n\t\t\tsetIRPercentage(\"\")\r\n\t\t }\r\n\t\t setAllowedLeave(filteredEmployees[0]?filteredEmployees[0].allowedleave :\"\")\r\n\t\r\n\t\t setEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n\t\t setEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n\t\t setDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n\t\t setUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n\t\t setBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n\t\t setTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n\t\t if (\r\n\t\t\tfilteredEmployees[0].tablerow &&\r\n\t\t\tfilteredEmployees[0].tablerow.length > 0 &&\r\n\t\t\tfilteredEmployees[0].tablerow[0]\r\n\t\t  ) {\r\n\t\t\tsetDAPrice(\r\n\t\t\t  filteredEmployees[0].tablerow[0].price\r\n\t\t\t\t? filteredEmployees[0].tablerow[0].price\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t\tsetDAValue(\r\n\t\t\t  filteredEmployees[0].tablerow[0].value\r\n\t\t\t\t? filteredEmployees[0].tablerow[0].value\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t\tsetDAPercentage(\r\n\t\t\t  filteredEmployees[0].tablerow[0].percentage\r\n\t\t\t\t? filteredEmployees[0].tablerow[0].percentage\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t  }\r\n\t\t  \r\n\t\t  if (\r\n\t\t\tfilteredEmployees[0].tablerow &&\r\n\t\t\tfilteredEmployees[0].tablerow.length > 1 &&\r\n\t\t\tfilteredEmployees[0].tablerow[1]\r\n\t\t  ) {\r\n\t\t\tsetIRPrice(\r\n\t\t\t  filteredEmployees[0].tablerow[1].price\r\n\t\t\t\t? filteredEmployees[0].tablerow[1].price\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t\tsetIRValue(\r\n\t\t\t  filteredEmployees[0].tablerow[1].value\r\n\t\t\t\t? filteredEmployees[0].tablerow[1].value\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t\tsetIRPercentage(\r\n\t\t\t  filteredEmployees[0].tablerow[1].percentage\r\n\t\t\t\t? filteredEmployees[0].tablerow[1].percentage\r\n\t\t\t\t: \"\"\r\n\t\t\t);\r\n\t\t  }\r\n\t\t  \r\n\t\t\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n\t\t\t\tsetFilterEmployeeData(filteredEmployees);\r\n\t\t\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n\t\t\t\tif (Array.isArray(tablerowData)) {\r\n\t\t\t\tsetTablerow(tablerowData.slice(2));\r\n\t\t\t\t} else {\r\n\t\t\t\tsetTablerow([]);\r\n\t\t\t\t}\r\n\t\t\t\t  console.log('tablerow',tablerow);\r\n\t\t\t\r\n\t } else {\r\n\t\t setFilterEmployeeData([]);\r\n\t }\r\n };\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n \r\n  \r\n    const handleSecondInputChange = (index, value) => {\r\n      const updatedTableRows = [...tablerow];\r\n      updatedTableRows[index].percentage = \"\";\r\n      updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n      const newPrice = value.trim() !== \"\" ? value : \"\";\r\n      updatedTableRows[index].price = newPrice;\r\n      setTablerow(updatedTableRows);\r\n    };\r\n  \r\n    const   handleChange = (index, percentage) => {\r\n      const updatedTableRows = [...tablerow];\r\n      updatedTableRows[index].percentage = Number(percentage);\r\n  \r\n      // Reset second field's value when first field is updated\r\n      updatedTableRows[index].value = \"\";\r\n  \r\n      // Recalculate the price based on the updated percentage and basic salary\r\n      const newPrice = basicSalary\r\n        ? (basicSalary * Number(percentage)) / 100\r\n        : \"\";\r\n      updatedTableRows[index].price = newPrice || \"\";\r\n  \r\n      setTablerow(updatedTableRows);\r\n    };\r\n  \r\n\r\n\r\n  const handleDAPercentage = (event)=>{\r\n\t const value= event.target.value;\r\n\t setDAPercentage(value)\r\n\t setDAValue('')\r\n   }\r\n   const handleDAValue = (event)=>{\r\n\t const value= event.target.value;\r\n\t setDAValue(value)\r\n\t setDAPercentage('')\r\n   }\r\n   const handleIRPercentage = (event)=>{\r\n\t const value= event.target.value;\r\n\t setIRPercentage(value)\r\n\t setIRValue('')\r\n   }\r\n   const handleIRValue = (event)=>{\r\n\t const value= event.target.value;\r\n\t setIRValue(value)\r\n\t setIRPercentage('')\r\n   }\r\n\r\n   const[updatedRow,setUpdatedRow]=useState('');\r\n\r\n   useEffect(()=>{\r\n\t let updatedFirstRow = [...firstrow];\r\n\t console.log(updatedFirstRow,\"updatedroww\");\r\n\t console.log(tablerow);\r\n \r\n\t if (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n\t   updatedFirstRow = [...updatedFirstRow];\r\n\t   setUpdatedRow(updatedFirstRow)\r\n\t }else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n\t   updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n\t   setUpdatedRow(updatedFirstRow)\r\n\t }\r\n\t console.log(updatedFirstRow,\":::::::::::::::fffff\");\r\n \r\n   },[tablerow,DAPrice,IRPrice]) \r\n\r\n   useEffect(() => {\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n\t\tsetTableDisplay(true)\r\n\t}else{\r\n\t\tsetTableDisplay(false)\r\n\t}\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n\t\tsetEPFWage(EPF)\r\n\t}else{\r\n\t\tsetEPFWage('')\r\n\t};\r\n\r\n\r\n\r\nconst joiningDate = new Date(dateOfJoining);\r\nconst comparisonDate = new Date('2014-01-01');\r\n\r\n\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n\t  setEPSWage(0);\r\n\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n\t  setEPSWage(15000);\r\n\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n\t  setEPSWage(totalAmount);\r\n\t}else{\r\n\t\tsetEPSWage('')\r\n\t};\r\n\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n\t\tsetEDLIWage(15000)\r\n\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n\t\tsetEDLIWage(totalAmount)\r\n\t}else{\r\n\t\tsetEDLIWage('')\r\n\t}\r\n\r\n\t\r\nif(EPSWage === 15000){\r\nsetEPSContri(1250)\r\n}else if(EPSWage === 0){\r\nsetEPSContri(0)\r\n}else{\r\n const EPS = (EPFWage * 8.33)/100\r\n setEPSContri(EPS)\r\n}\r\n\r\nconst targetId = '658112ecc32bc7fefb3b2e3f';\r\nlet foundData = null;\r\n\r\nfor (let i = 0; i < tablerow.length; i++) {\r\nif (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\nfoundData = tablerow[i];\r\nbreak;\r\n}\r\n}\r\nconst EPFcontribution = (EPFWage * 12) / 100;\r\nconsole.log(EPFcontribution,\"::EPFSSS\");\r\nconsole.log(foundData);\r\nif (!foundData) {\r\nsetEPFContri(EPFcontribution)\r\nconsole.log('ffffffffffffffffffuuuuuuuuuuu');\r\n} else {\r\nconsole.log('ddddddddddddddddddddddddd');\r\nconst EPFS =( EPFcontribution + foundData.price)\r\nsetEPFContri(EPFS)\r\n}\r\n\r\nconst EPFSS = (EPFWage * 12) / 100;\r\n\r\nif( EPFContri){\r\nconst EPFEPSDIFF = EPFSS -EPSContri\r\nsetEPSEPFDiff(EPFEPSDIFF)\r\n}\r\n\r\n\r\n\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n\tconsole.log(EPFWage,\":EPF WAGE\");\r\n\tconsole.log(EPSWage,\":Eps WAGE\");\r\n\tconsole.log(dateOfJoining);\r\n\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n\tconsole.log(EDLIWage,\"EdliWage\");\r\n\tconsole.log(tablerow,\"Tableroww\");\r\n\r\n  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n  \r\n\t\t  \r\n  useEffect(() => {\r\n\r\n\tconsole.log(\"hhhhhhhhhhhhhhhhaikkko\");\r\n\t // DA row\r\n\t \r\n\t if (DAPercentage !== 0 && !DAValue) {\r\n\t   const price = (basicSalary * DAPercentage) / 100;\r\n\t   setDAPrice(price);\r\n\t }\r\n   \r\n\t else if (DAValue !== 0 && !DAPercentage) {\r\n\t   const prices = DAValue;\r\n\t   console.log(\"Priceeeeeeeeeee\",prices);\r\n\t   setDAPrice(prices);\r\n\t }\r\n\r\n\t // IR row\r\n\t \r\n\t if (IRPercentage !== 0 && !IRValue) {\r\n\t   const price = (basicSalary * IRPercentage) / 100;\r\n\t   setIRPrice(price);\r\n\t }\r\n   \r\n\t else if (IRValue !== 0 && !IRPercentage) {\r\n\t   const prices = IRValue;\r\n\t   console.log(\"Priceeeeeeeeeee\",prices);\r\n\t   setIRPrice(prices);\r\n\t }\r\n   }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n  \r\n\r\n// useEffect(()=>{\r\n// try{\r\n// \tif(EPSWage === 15000){\r\n// \t\tsetEPSContri(1250)\r\n// \t}else if(EPSWage === 0){\r\n// \t\tsetEPSContri(0)\r\n// \t}else{\r\n// \t\t const EPS = (EPFWage * 8.33)/100\r\n// \t\t console.log(EPS,\"eps\");\r\n// \t\t setEPSContri(EPS)\r\n// \t}\r\n\r\n// \tconst targetId = '6572ef07fb305bd8c621bcee';\r\n// \tlet foundData = null;\r\n\t\r\n// \tfor (let i = 0; i < tablerow.length; i++) {\r\n// \t  if (tablerow[i].salaryComponent._id === targetId) {\r\n// \t\tfoundData = tablerow[i];\r\n// \t\tbreak;\r\n// \t  }\r\n// \t}\r\n\r\n// \tconst EPFs = (EPFWage * 12) / 100;\r\n\r\n// \tif (!foundData) {\r\n// \t setEPFContri(EPFs)\r\n// \t console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n// \t} else {\r\n// \t\tconsole.log('ddddddddddddddddddddddddd');\r\n// \t  const EPFS =( EPFs + foundData.price)\r\n// \t  setEPFContri(EPFS)\r\n// \t}\r\n    \r\n// \tconst EPFSS = (EPFWage * 12) / 100;\r\n\r\n// \tif(EPFSS && EPFContri){\r\n// \t\tconst EPFEPSDIFF = EPFs -EPSContri\r\n// \t\tsetEPSEPFDiff(EPFEPSDIFF)\r\n// \t}\r\n\t\r\n\r\n\t\r\n\r\n// }catch(error){\r\n// \tconsole.log(error);\r\n// }\r\n\r\n// \tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n// \tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n// \tconsole.log(EPSEPFDiff,\":EPSEPFDiff:\");\r\n// },[employeeid,options ])\r\n\r\n\r\n\r\n\r\n\r\nconsole.log(updatedRow,\"::tableroqw\");\r\n  \r\nconst handlesubmit =async(event)=>{\r\n  event.preventDefault()\r\ntry{\r\n  const formdatas = {\r\n\r\n    SalaryBillNo:SalaryBillNo, \r\n    date:date,\t\r\n    employeeid:employeeid?employeeid:employeeId,\r\n    departmentid : department?department:departments,\r\n    unitid : unit?unit:unitid,\r\n    basicSalary:basicSalary,\r\n    // tablerow:tablerow[0]&&tablerow[1]? tablerow.map(row => {\r\n    //   return {\r\n    //     ...row,\r\n    //     salaryComponent: row.salaryComponent._id ? row.salaryComponent._id : row.salaryComponent // or provide a default value if _id doesn't exist\r\n    //   };\r\n    // }):[],\r\n\ttablerow:updatedRow||[],\r\n    allowedleave:allowedleave,\r\n    absentDays : absentDays,\r\n\ttotaldeduction:totaldeduction,\r\n\ttotalincrement:totalincrement,\r\n\tEPFWage,\r\n\tEPSWage,\r\n\tEDLIWage,\r\n\tEPFContri,\r\n\tEPSContri,\r\n\tEPSEPFDiff,\r\n    totalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal,\r\n  }; console.log(\"formdataedit\",formdatas);\r\n\r\n\r\n    formdatas._id = itemid;\r\n  const response = await EditSalaryBill(formdatas);\r\n\r\n  if (response.success){\r\n setformData(response.data);\r\n toast.success(response.message);\r\n setSalaryList(true);\r\n setEditSalary(false)\r\n }\r\n else {\r\n   toast.error(response.message);\r\n   }\r\n\r\n} catch (error) {\r\n  toast.error(error.message);\r\n  console.log(error);\r\n}\r\n   \r\n    \r\n}\r\nconsole.log(salarymasterData,\"::salarymasterDataaaa\");\r\n\r\n\r\n  return (\r\n    <div>\r\n\t\r\n     {Editsalary&&\r\n\t \r\n        <div>\r\n\t\t\t\t<button className='btn btn-success mt-2 ' onClick={handleTableClick}>Table</button>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                 \r\n                <form onSubmit={handlesubmit}>\r\n\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={SalaryBillNo}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t\t   <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:units}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tdefaultInputValue={Employeename}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n\t\t\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:departmentid}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].basicSalary ? filterEmployeeData[0].basicSalary:basicSalary} readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay && employeeTypeId === \"6566be7b0085f19cfbfd00c1\"&&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0]&&<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* {console.log(\"per\",DAPercentage)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1]&&<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n                                                                        onChange={(e) => handleIRPercentage(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n{/* \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}\r\n    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</form>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        </div>\r\n      }\r\n\r\n\t\r\n        { salaryList&&  <div>\r\n\t\t{/* <button className='btn btn-success' onClick={handleAddClick}> Add </button> */}\r\n\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SalaryBillEdit;\r\n"
        }
    ]
}