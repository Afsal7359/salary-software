{
    "sourceFile": "frontend/src/Components/Salary Bill/List_salary_bill.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1703674996015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703675008346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,13 +253,13 @@\n                         <th>Net Pay</th>\r\n                         <th></th>\r\n                       </tr>\r\n                     </thead>\r\n-                    <tbody>\r\n+                    {/* <tbody>\r\n                       {currentItems.map((item, index) => (\r\n                         <tr key={item._id}>\r\n                           <td>{indexOfFirstItem + index + 1}</td>\r\n-                          {/* <td>{item.employeeid.employeeno}</td> */}\r\n+                          <td>{item.employeeid.employeeno}</td>\r\n                           <td>{item.employeeid.name}</td>\r\n                           <td>{item.totalincrement}</td>\r\n                           <td>{item.totaldeduction}</td>\r\n                           <td>{item.totalcontribution}</td>\r\n@@ -297,9 +297,9 @@\n                             </div>\r\n                           </td>\r\n                         </tr>\r\n                       ))}\r\n-                    </tbody>\r\n+                    </tbody> */}\r\n                   </table>\r\n                 \r\n                 </div>\r\n               </div>\r\n"
                },
                {
                    "date": 1703675062087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,437 @@\n+import React, { useEffect, useState,useMemo,useCallback ,useRef } from 'react';\r\n+import { useReactToPrint } from 'react-to-print';\r\n+import { GetSalaryByMonth, getallSalarybill } from '../../Apicalls/salaryBill';\r\n+import SalaryBill from '../Modal/SalaryBill';\r\n+import SalaryBillEdit from './SalaryBillEdit';\r\n+import Salaryview from './Salaryview';\r\n+import { toast } from 'react-toastify';\r\n+import { GetAllCompany } from '../../Apicalls/Company';\r\n+import './Salaryvoucher.css'\r\n+\r\n+function List_salary_bill({ formdata, setformdata }) {\r\n+\r\n+  \r\n+ const componentRefs = useRef(null);\r\n+\r\n+ const handlePrintVoucher = useReactToPrint({\r\n+   content: () => componentRefs.current,\r\n+ });\r\n+\r\n+\r\n+ const [Data, setData] = useState([]);\r\n+ const [showEditModal, setShowEditModal] = useState(false);\r\n+ const [showDeleteModal, setshowDeleteModal] = useState(false);\r\n+ const [showPrint, setshowPrint ] = useState(false);\r\n+ const [selectedItem, setSelectedItem] = useState(null);\r\n+ const [isLoading, setIsLoading] = useState(true);  \r\n+  const [Salarylist,setSalaryList]=useState(true)\r\n+\r\n+  const [fromMonth, setFromMonth] = useState('');\r\n+  const [toMonth, setToMonth] = useState(''); \r\n+\r\n+  console.log(fromMonth);\r\n+  console.log(toMonth);\r\n+  \r\n+console.log('ffffrooooooom',formdata);\r\n+\r\n+  useEffect(() => {\r\n+\tif (formdata.length !== 0) {\r\n+\t  setData((prevData) => [formdata,...prevData]);\r\n+\t  setformdata([]);\r\n+\t}\r\n+}, [formdata]);\r\n+\r\n+const [company,setCompany]=useState([]);\r\n+const CompanyDataFetch = async()=>{\r\n+  try {\r\n+  const response =  await GetAllCompany();\r\n+  if(response.success){\r\n+    setCompany(response.data)\r\n+  }else{\r\n+    setCompany([]);\r\n+  }\r\n+  } catch (error) {\r\n+    console.log(error);\r\n+  }\r\n+}\r\n+  useEffect(() => {\r\n+    CompanyDataFetch()\r\n+    async function fetchData() {\r\n+      try {\r\n+        const result = await getallSalarybill();\r\n+        console.log(result.data, 'response');\r\n+        setData(result.data);\r\n+        setIsLoading(false);\r\n+      } catch (error) {\r\n+        console.error('Error fetching data:', error);\r\n+      }\r\n+    }\r\n+\r\n+    fetchData();\r\n+  }, []);\r\n+\r\n+\r\n+  const memoizedData = useMemo(() => Data, [Data]);\r\n+console.log('memoizedData',memoizedData);\r\n+\r\n+  const handleEditClick = useCallback((item) => {\r\n+\tsetShowEditModal(true);\r\n+\tsetSelectedItem(item);\r\n+  setSalaryList(false)\r\n+ \r\n+  }, []);\r\n+// Inside your DepartmentList component\r\n+const [currentPage, setCurrentPage] = useState(1);\r\n+const itemsPerPage = 10;\r\n+\r\n+// Calculate indexes for pagination\r\n+const indexOfLastItem = currentPage * itemsPerPage;\r\n+const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n+const currentItems = memoizedData.slice(indexOfFirstItem, indexOfLastItem);\r\n+\r\n+  // Function to close the modal\r\n+const closeEditModal = () => {\r\n+\t// Set showEditModal to false when the modal is closed\r\n+\tsetShowEditModal(false);\r\n+  };\r\n+\r\n+   // Function to handle the click event\r\n+ const handleDeleteClick = (item) => {\r\n+\tconsole.log(item);\r\n+\tsetshowDeleteModal(true)\r\n+\tsetSelectedItem(item)\r\n+   };\r\n+\r\n+   const handlePrintClick = (item) => {\r\n+    console.log(item,\"DDDDDDSSSSSSSSSSSSSSSSSSSSSS\");\r\n+    setshowPrint(true)\r\n+    setSelectedItem(item)\r\n+     };\r\n+\r\n+   \r\n+   const closeDeleteModal = () => {\r\n+\t // Set showEditModal to false when the modal is closed\r\n+\t setshowDeleteModal(false);\r\n+   };\r\n+  if (isLoading) {\r\n+    return <div>Loading...</div>; // You can render a loading indicator here\r\n+  }\r\n+\r\n+\r\n+  \r\n+ const handleFilterClick =async(event)=>{\r\n+  event.preventDefault();\r\n+try {\r\n+  const formdata = {\r\n+    fromMonth : fromMonth,\r\n+    toMonth : toMonth,\r\n+  }\r\n+const response = await GetSalaryByMonth(formdata)\r\n+if (response.success){\r\n+  setData(response.data);\r\n+  console.log();\r\n+  toast.success(response.message)\r\n+  }else{\r\n+    toast.error(response.message)\r\n+  }\r\n+} catch (error) {\r\n+  console.log(error);\r\n+  toast.error(error.message);\r\n+}\r\n+\r\n+ }\r\n+ const currentDate = new Date(Date.now());\r\n+ const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\r\n+\r\n+//  const grandTotalIncrement = memoizedData.reduce((total, data) => total + data.totalincrement, 0);\r\n+let grandTotalIncrement = 0;\r\n+let grandDeduction = 0;\r\n+let grandNetPay =0;\r\n+\r\n+memoizedData.forEach((item) => {\r\n+  grandTotalIncrement += parseFloat(item.totalincrement || 0);\r\n+  grandDeduction += parseFloat(item.totaldeduction || 0);\r\n+  grandNetPay += parseFloat(item.totalAmount || 0);\r\n+});\r\n+\r\n+\r\n+ \r\n+console.log(grandTotalIncrement,\"grandotal\");\r\n+console.log(grandDeduction,\":grnddeduction\");\r\n+console.log(grandNetPay,\":Grandnetpay\");\r\n+\r\n+\r\n+   \r\n+\r\n+  return (\r\n+    <>\r\n+    {Salarylist&& \r\n+      <div className=\"row\">\r\n+        <div className=\"col-sm-12\">\r\n+          {/* <button className='btn btn-success submit-form m-2' >Add</button> */}\r\n+          {memoizedData.length === 0 ? (\r\n+            <p>No Data available</p>\r\n+          ) : (\r\n+            <div className=\"card card-table show-entire\">\r\n+              <div className=\"card-body\">\r\n+                <div className=\"page-table-header mb-2\">\r\n+                  <div className=\"row align-items-center\">\r\n+                    <div className=\"col\">\r\n+                      <div className=\"doctor-table-blk\">\r\n+                        <h3>Post List</h3>\r\n+                        <div className=\"doctor-search-blk\">\r\n+                          {/* <div className=\"top-nav-search table-search-blk\">\r\n+                            <form>\r\n+                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n+                              <a className=\"btn\" >\r\n+                                <img src={searchicon} alt=\"\" />\r\n+                              </a>\r\n+                            </form>\r\n+                          \r\n+                          </div> */}\r\n+                          <div className=\"add-groups\">\r\n+                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n+                           \r\n+                              <img src={addicon} alt=\"\" />\r\n+                            </a> */}\r\n+                            \r\n+                          </div>\r\n+                        </div>\r\n+                      </div>\r\n+                    </div>\r\n+                    \r\n+                    <div className=\"col-auto  ms-auto\">\r\n+                      \r\n+                    <form >\r\n+                      \r\n+                          \r\n+                      <a type='button' className=\" me-2\" >\r\n+                        {/* <img src={pdficon} alt=\"\" /> */}\r\n+                        <input\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={fromMonth}\r\n+                          onChange={(e) => setFromMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                      </a>\r\n+                      <a type='button'  className=\" me-2\">\r\n+                        {/* <img src={TXticon} alt=\"\" /> */}\r\n+                        <input\r\n+                          // {...register('toMonth', { required: 'Please select a month' })}\r\n+                        className='form-control'\r\n+                          type=\"date\"\r\n+                          value={toMonth}\r\n+                          onChange={(e) => setToMonth(e.target.value)}\r\n+                          required\r\n+                        />\r\n+                         {/* {errors.month && <p className=\"text-danger\">{errors.toMonth.message}</p>} */}\r\n+                                      </a>\r\n+\r\n+                      <button className=\" btn btn-primary submit-form m-2\"\r\n+                      onClick={handleFilterClick}>\r\n+                        Filter\r\n+                      </button>\r\n+                      <a  className=\" btn btn-primary submit-form m-2\"  onClick={handlePrintVoucher}>\r\n+                              print Voucher\r\n+                            </a>\r\n+                      </form>\r\n+                    </div>\r\n+                  </div>\r\n+                </div>\r\n+\r\n+                <div className=\"table-responsive\">\r\n+                  <table className=\"table border-0 custom-table comman-table datatable mb-0\">\r\n+                    <thead>\r\n+                      <tr>\r\n+                        <th>Sl No</th>\r\n+                        <th>Employee No</th>\r\n+                        <th>Employee Name</th>\r\n+                        <th>Gross Salary</th>\r\n+                        <th>Deduction</th>\r\n+                        <th>Emplyee Contributions</th>\r\n+                        <th>Net Pay</th>\r\n+                        <th></th>\r\n+                      </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                      {currentItems.map((item, index) => (\r\n+                        <tr key={item._id}>\r\n+                          <td>{indexOfFirstItem + index + 1}</td>\r\n+                          <td>{item.employeeid.employeeno}</td>\r\n+                          <td>{item.employeeid.name}</td>\r\n+                          <td>{item.totalincrement}</td>\r\n+                          <td>{item.totaldeduction}</td>\r\n+                          <td>{item.totalcontribution}</td>\r\n+                          <td>{item.totalAmount}</td>\r\n+                          \r\n+                          <td className=\"text-end\">\r\n+                            <div className=\"dropdown dropdown-action\">\r\n+                              <a href=\"#\" className=\"action-icon dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n+                                <i className=\"fa fa-ellipsis-v\"></i>\r\n+                              </a>\r\n+                              <div className=\"dropdown-menu dropdown-menu-end\">\r\n+                                <a  onMouseEnter={() => {\r\n+                                setSelectedItem(item);\r\n+                              \r\n+                              }}\r\n+                               onClick={() => handleEditClick(item)} className=\"dropdown-item\" data-bs-toggle=\"modal\"\r\n+                               data-bs-target=\"#delete_patients\">\r\n+                                  <i className=\"fa-solid fa-pen-to-square m-r-5\"></i> Edit\r\n+                                </a>\r\n+                                <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#delete_patient\"   onMouseEnter={() => {\r\n+                                setshowDeleteModal(true);\r\n+                                setSelectedItem(item);\r\n+                              }}\r\n+                              onClick={() => handleDeleteClick(item)}>\r\n+                                  <i className=\"fa fa-trash-alt m-r-5\"></i> Delete\r\n+                                </a>\r\n+                                <a className=\"dropdown-item\"  onTouchMove={() => {\r\n+                                setshowPrint(true);\r\n+                                setSelectedItem(item);\r\n+                              }}\r\n+                              onClick={() => handlePrintClick(item)}>\r\n+                                  <i className=\"fa fa-print m-r-5\"></i> Print\r\n+                                </a>\r\n+                              </div>\r\n+                            </div>\r\n+                          </td>\r\n+                        </tr>\r\n+                      ))}\r\n+                    </tbody>\r\n+                  </table>\r\n+                \r\n+                </div>\r\n+              </div>\r\n+              <nav aria-label=\"Page navigation example\">\r\n+           \r\n+           {memoizedData.length > itemsPerPage && (\r\n+             <ul className=\"pagination\">\r\n+               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n+                 .fill()\r\n+                 .map((_, index) => (\r\n+                         <li className=\"page-item\" key={index}>\r\n+                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n+                           </li>\r\n+                     \r\n+                  \r\n+                 ))}\r\n+             </ul>\r\n+           )}\r\n+        \r\n+           </nav>\r\n+            </div>\r\n+          )}\r\n+        </div>\r\n+<div className=\"maindiv1\">\r\n+<div className='maindiv'  ref={componentRefs} id=\"content-to-print\">\r\n+        <table>\r\n+    <tbody>\r\n+      <tr\r\n+        height=\"170px\"\r\n+       \r\n+        style={{\r\n+          color: \"#000\",\r\n+          textAlign: \"center\",\r\n+          fontSize: 24,\r\n+          fontWeight: 600\r\n+        }}\r\n+      >\r\n+        <td>\r\n+        <img src={company[0]?company[0].image:\"\"} alt=\"\" height={55} width={155}/>\r\n+        </td>\r\n+        <td colSpan={4}> <h3>{company[0]?company[0].name:\"\"}</h3><h5>{company[0]?company[0]. address:\"\"}</h5></td>\r\n+      </tr>\r\n+      <tr>\r\n+     <td className='date' colSpan={5}>\r\n+     <h4 className='h4d'>{formattedDate}</h4>\r\n+     \r\n+\r\n+     </td>\r\n+       </tr> \r\n+      <tr \r\n+        height=\"55px\"\r\n+        style={{\r\n+          backgroundColor: \"#fae3bd\",\r\n+          color: \"#000\",\r\n+          textAlign: \"center\",\r\n+          fontSize: 24,\r\n+          fontWeight: 600,\r\n+        }}>\r\n+     <td colSpan={4}><h1> SALARY BILL </h1></td>\r\n+      </tr>\r\n+      \r\n+      \r\n+   \r\n+    </tbody>\r\n+  </table>\r\n+\r\n+  <table style={{marginTop:10}}>\r\n+    <tbody>\r\n+    <tr>\r\n+        <th className=\"headnones\">SL NO</th>\r\n+        <th className=\"headnones\">EMPLOYEE NO</th>\r\n+        <th className=\"headnones\">Employee Name</th>\r\n+        <th className=\"headnones\">Gross Salary</th>\r\n+        <th className=\"headnones\">Deduction</th>\r\n+        <th className=\"headnones\">Emplyr Contr</th>\r\n+        <th className=\"headnones\">Net Pay</th>\r\n+      </tr>\r\n+\r\n+      {console.log(memoizedData,\"memoiszzzzzzzeddaataa\") }\r\n+     {memoizedData.map((data, index) => (\r\n+     \r\n+  <tr key={data._id}>\r\n+    <td className='text-center'>{index + 1}</td>\r\n+    <td className='text-center'>{data.employeeid.employeeno}</td>\r\n+    <td className='text-center'>{data.employeeid.name}</td>\r\n+    <td className='text-end'>{data.totalincrement}</td>\r\n+    <td className='text-end'>{data.totaldeduction}</td>\r\n+    <td className='text-end'>{data.totalcontribution}</td>\r\n+    <td className='text-end'>{data.totalAmount}</td>\r\n+  </tr>\r\n+))}\r\n+\r\n+ \r\n+   \r\n+    </tbody>\r\n+  </table>\r\n+\r\n+        <div className='total totals'>\r\n+          <h4 className='h4total'>Total Earnings : <span className='span'>{grandTotalIncrement}.00</span></h4>\r\n+        </div>\r\n+        \r\n+        <div className='total'>\r\n+          <h4 className='h4total'>Total Deductions : <span className='span'>{grandDeduction}.00</span></h4>\r\n+        </div>\r\n+        \r\n+        <div className='total'>\r\n+          <h4 className='h4total'>Total Net Pay : <span className='span'>{grandNetPay}.00</span></h4>\r\n+        </div>\r\n+        </div>\r\n+</div>\r\n+      </div>\r\n+      \r\n+    }\r\n+\t  \r\n+      {showEditModal && selectedItem && (\r\n+        <div> \r\n+  <SalaryBillEdit item={selectedItem} setData={setData} Data={Data}  closeEdit={closeEditModal}/></div>\r\n+)}\r\n+{showDeleteModal && selectedItem &&(<SalaryBill\r\n+ setData={setData}\r\n+ Data={Data}\r\n+ item={selectedItem}\r\n+ closeDeleteModal={closeDeleteModal}\r\n+/>)}\r\n+{showPrint && selectedItem &&(<Salaryview\r\n+ setData={setData}\r\n+ Data={Data}\r\n+ item={selectedItem}\r\n+ \r\n+/>)}\r\n+    </>\r\n+  );\r\n+}\r\n+\r\n+export default React.memo(List_salary_bill);\r\n"
                }
            ],
            "date": 1703674996015,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState,useMemo,useCallback ,useRef } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { GetSalaryByMonth, getallSalarybill } from '../../Apicalls/salaryBill';\r\nimport SalaryBill from '../Modal/SalaryBill';\r\nimport SalaryBillEdit from './SalaryBillEdit';\r\nimport Salaryview from './Salaryview';\r\nimport { toast } from 'react-toastify';\r\nimport { GetAllCompany } from '../../Apicalls/Company';\r\nimport './Salaryvoucher.css'\r\n\r\nfunction List_salary_bill({ formdata, setformdata }) {\r\n\r\n  \r\n const componentRefs = useRef(null);\r\n\r\n const handlePrintVoucher = useReactToPrint({\r\n   content: () => componentRefs.current,\r\n });\r\n\r\n\r\n const [Data, setData] = useState([]);\r\n const [showEditModal, setShowEditModal] = useState(false);\r\n const [showDeleteModal, setshowDeleteModal] = useState(false);\r\n const [showPrint, setshowPrint ] = useState(false);\r\n const [selectedItem, setSelectedItem] = useState(null);\r\n const [isLoading, setIsLoading] = useState(true);  \r\n  const [Salarylist,setSalaryList]=useState(true)\r\n\r\n  const [fromMonth, setFromMonth] = useState('');\r\n  const [toMonth, setToMonth] = useState(''); \r\n\r\n  console.log(fromMonth);\r\n  console.log(toMonth);\r\n  \r\nconsole.log('ffffrooooooom',formdata);\r\n\r\n  useEffect(() => {\r\n\tif (formdata.length !== 0) {\r\n\t  setData((prevData) => [formdata,...prevData]);\r\n\t  setformdata([]);\r\n\t}\r\n}, [formdata]);\r\n\r\nconst [company,setCompany]=useState([]);\r\nconst CompanyDataFetch = async()=>{\r\n  try {\r\n  const response =  await GetAllCompany();\r\n  if(response.success){\r\n    setCompany(response.data)\r\n  }else{\r\n    setCompany([]);\r\n  }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n  useEffect(() => {\r\n    CompanyDataFetch()\r\n    async function fetchData() {\r\n      try {\r\n        const result = await getallSalarybill();\r\n        console.log(result.data, 'response');\r\n        setData(result.data);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const memoizedData = useMemo(() => Data, [Data]);\r\nconsole.log('memoizedData',memoizedData);\r\n\r\n  const handleEditClick = useCallback((item) => {\r\n\tsetShowEditModal(true);\r\n\tsetSelectedItem(item);\r\n  setSalaryList(false)\r\n \r\n  }, []);\r\n// Inside your DepartmentList component\r\nconst [currentPage, setCurrentPage] = useState(1);\r\nconst itemsPerPage = 10;\r\n\r\n// Calculate indexes for pagination\r\nconst indexOfLastItem = currentPage * itemsPerPage;\r\nconst indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\nconst currentItems = memoizedData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  // Function to close the modal\r\nconst closeEditModal = () => {\r\n\t// Set showEditModal to false when the modal is closed\r\n\tsetShowEditModal(false);\r\n  };\r\n\r\n   // Function to handle the click event\r\n const handleDeleteClick = (item) => {\r\n\tconsole.log(item);\r\n\tsetshowDeleteModal(true)\r\n\tsetSelectedItem(item)\r\n   };\r\n\r\n   const handlePrintClick = (item) => {\r\n    console.log(item,\"DDDDDDSSSSSSSSSSSSSSSSSSSSSS\");\r\n    setshowPrint(true)\r\n    setSelectedItem(item)\r\n     };\r\n\r\n   \r\n   const closeDeleteModal = () => {\r\n\t // Set showEditModal to false when the modal is closed\r\n\t setshowDeleteModal(false);\r\n   };\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // You can render a loading indicator here\r\n  }\r\n\r\n\r\n  \r\n const handleFilterClick =async(event)=>{\r\n  event.preventDefault();\r\ntry {\r\n  const formdata = {\r\n    fromMonth : fromMonth,\r\n    toMonth : toMonth,\r\n  }\r\nconst response = await GetSalaryByMonth(formdata)\r\nif (response.success){\r\n  setData(response.data);\r\n  console.log();\r\n  toast.success(response.message)\r\n  }else{\r\n    toast.error(response.message)\r\n  }\r\n} catch (error) {\r\n  console.log(error);\r\n  toast.error(error.message);\r\n}\r\n\r\n }\r\n const currentDate = new Date(Date.now());\r\n const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\r\n\r\n//  const grandTotalIncrement = memoizedData.reduce((total, data) => total + data.totalincrement, 0);\r\nlet grandTotalIncrement = 0;\r\nlet grandDeduction = 0;\r\nlet grandNetPay =0;\r\n\r\nmemoizedData.forEach((item) => {\r\n  grandTotalIncrement += parseFloat(item.totalincrement || 0);\r\n  grandDeduction += parseFloat(item.totaldeduction || 0);\r\n  grandNetPay += parseFloat(item.totalAmount || 0);\r\n});\r\n\r\n\r\n \r\nconsole.log(grandTotalIncrement,\"grandotal\");\r\nconsole.log(grandDeduction,\":grnddeduction\");\r\nconsole.log(grandNetPay,\":Grandnetpay\");\r\n\r\n\r\n   \r\n\r\n  return (\r\n    <>\r\n    {Salarylist&& \r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          {/* <button className='btn btn-success submit-form m-2' >Add</button> */}\r\n          {memoizedData.length === 0 ? (\r\n            <p>No Data available</p>\r\n          ) : (\r\n            <div className=\"card card-table show-entire\">\r\n              <div className=\"card-body\">\r\n                <div className=\"page-table-header mb-2\">\r\n                  <div className=\"row align-items-center\">\r\n                    <div className=\"col\">\r\n                      <div className=\"doctor-table-blk\">\r\n                        <h3>Post List</h3>\r\n                        <div className=\"doctor-search-blk\">\r\n                          {/* <div className=\"top-nav-search table-search-blk\">\r\n                            <form>\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"Search here\" />\r\n                              <a className=\"btn\" >\r\n                                <img src={searchicon} alt=\"\" />\r\n                              </a>\r\n                            </form>\r\n                          \r\n                          </div> */}\r\n                          <div className=\"add-groups\">\r\n                            {/* <a href=\"add-doctor.html\" className=\"btn btn-primary add-pluss ms-2\">\r\n                           \r\n                              <img src={addicon} alt=\"\" />\r\n                            </a> */}\r\n                            \r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-auto  ms-auto\">\r\n                      \r\n                    <form >\r\n                      \r\n                          \r\n                      <a type='button' className=\" me-2\" >\r\n                        {/* <img src={pdficon} alt=\"\" /> */}\r\n                        <input\r\n                        className='form-control'\r\n                          type=\"date\"\r\n                          value={fromMonth}\r\n                          onChange={(e) => setFromMonth(e.target.value)}\r\n                          required\r\n                        />\r\n                      </a>\r\n                      <a type='button'  className=\" me-2\">\r\n                        {/* <img src={TXticon} alt=\"\" /> */}\r\n                        <input\r\n                          // {...register('toMonth', { required: 'Please select a month' })}\r\n                        className='form-control'\r\n                          type=\"date\"\r\n                          value={toMonth}\r\n                          onChange={(e) => setToMonth(e.target.value)}\r\n                          required\r\n                        />\r\n                         {/* {errors.month && <p className=\"text-danger\">{errors.toMonth.message}</p>} */}\r\n                                      </a>\r\n\r\n                      <button className=\" btn btn-primary submit-form m-2\"\r\n                      onClick={handleFilterClick}>\r\n                        Filter\r\n                      </button>\r\n                      <a  className=\" btn btn-primary submit-form m-2\"  onClick={handlePrintVoucher}>\r\n                              print Voucher\r\n                            </a>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table border-0 custom-table comman-table datatable mb-0\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Sl No</th>\r\n                        <th>Employee No</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Gross Salary</th>\r\n                        <th>Deduction</th>\r\n                        <th>Emplyee Contributions</th>\r\n                        <th>Net Pay</th>\r\n                        <th></th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {currentItems.map((item, index) => (\r\n                        <tr key={item._id}>\r\n                          <td>{indexOfFirstItem + index + 1}</td>\r\n                          {/* <td>{item.employeeid.employeeno}</td> */}\r\n                          <td>{item.employeeid.name}</td>\r\n                          <td>{item.totalincrement}</td>\r\n                          <td>{item.totaldeduction}</td>\r\n                          <td>{item.totalcontribution}</td>\r\n                          <td>{item.totalAmount}</td>\r\n                          \r\n                          <td className=\"text-end\">\r\n                            <div className=\"dropdown dropdown-action\">\r\n                              <a href=\"#\" className=\"action-icon dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                <i className=\"fa fa-ellipsis-v\"></i>\r\n                              </a>\r\n                              <div className=\"dropdown-menu dropdown-menu-end\">\r\n                                <a  onMouseEnter={() => {\r\n                                setSelectedItem(item);\r\n                              \r\n                              }}\r\n                               onClick={() => handleEditClick(item)} className=\"dropdown-item\" data-bs-toggle=\"modal\"\r\n                               data-bs-target=\"#delete_patients\">\r\n                                  <i className=\"fa-solid fa-pen-to-square m-r-5\"></i> Edit\r\n                                </a>\r\n                                <a className=\"dropdown-item\" href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#delete_patient\"   onMouseEnter={() => {\r\n                                setshowDeleteModal(true);\r\n                                setSelectedItem(item);\r\n                              }}\r\n                              onClick={() => handleDeleteClick(item)}>\r\n                                  <i className=\"fa fa-trash-alt m-r-5\"></i> Delete\r\n                                </a>\r\n                                <a className=\"dropdown-item\"  onTouchMove={() => {\r\n                                setshowPrint(true);\r\n                                setSelectedItem(item);\r\n                              }}\r\n                              onClick={() => handlePrintClick(item)}>\r\n                                  <i className=\"fa fa-print m-r-5\"></i> Print\r\n                                </a>\r\n                              </div>\r\n                            </div>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                \r\n                </div>\r\n              </div>\r\n              <nav aria-label=\"Page navigation example\">\r\n           \r\n           {memoizedData.length > itemsPerPage && (\r\n             <ul className=\"pagination\">\r\n               {Array(Math.ceil(memoizedData.length / itemsPerPage))\r\n                 .fill()\r\n                 .map((_, index) => (\r\n                         <li className=\"page-item\" key={index}>\r\n                           <a className=\"page-link\"  onClick={() => setCurrentPage(index + 1)}>{index + 1}</a>\r\n                           </li>\r\n                     \r\n                  \r\n                 ))}\r\n             </ul>\r\n           )}\r\n        \r\n           </nav>\r\n            </div>\r\n          )}\r\n        </div>\r\n<div className=\"maindiv1\">\r\n<div className='maindiv'  ref={componentRefs} id=\"content-to-print\">\r\n        <table>\r\n    <tbody>\r\n      <tr\r\n        height=\"170px\"\r\n       \r\n        style={{\r\n          color: \"#000\",\r\n          textAlign: \"center\",\r\n          fontSize: 24,\r\n          fontWeight: 600\r\n        }}\r\n      >\r\n        <td>\r\n        <img src={company[0]?company[0].image:\"\"} alt=\"\" height={55} width={155}/>\r\n        </td>\r\n        <td colSpan={4}> <h3>{company[0]?company[0].name:\"\"}</h3><h5>{company[0]?company[0]. address:\"\"}</h5></td>\r\n      </tr>\r\n      <tr>\r\n     <td className='date' colSpan={5}>\r\n     <h4 className='h4d'>{formattedDate}</h4>\r\n     \r\n\r\n     </td>\r\n       </tr> \r\n      <tr \r\n        height=\"55px\"\r\n        style={{\r\n          backgroundColor: \"#fae3bd\",\r\n          color: \"#000\",\r\n          textAlign: \"center\",\r\n          fontSize: 24,\r\n          fontWeight: 600,\r\n        }}>\r\n     <td colSpan={4}><h1> SALARY BILL </h1></td>\r\n      </tr>\r\n      \r\n      \r\n   \r\n    </tbody>\r\n  </table>\r\n\r\n  <table style={{marginTop:10}}>\r\n    <tbody>\r\n    <tr>\r\n        <th className=\"headnones\">SL NO</th>\r\n        <th className=\"headnones\">EMPLOYEE NO</th>\r\n        <th className=\"headnones\">Employee Name</th>\r\n        <th className=\"headnones\">Gross Salary</th>\r\n        <th className=\"headnones\">Deduction</th>\r\n        <th className=\"headnones\">Emplyr Contr</th>\r\n        <th className=\"headnones\">Net Pay</th>\r\n      </tr>\r\n\r\n      {console.log(memoizedData,\"memoiszzzzzzzeddaataa\") }\r\n     {memoizedData.map((data, index) => (\r\n     \r\n  <tr key={data._id}>\r\n    <td className='text-center'>{index + 1}</td>\r\n    <td className='text-center'>{data.employeeid.employeeno}</td>\r\n    <td className='text-center'>{data.employeeid.name}</td>\r\n    <td className='text-end'>{data.totalincrement}</td>\r\n    <td className='text-end'>{data.totaldeduction}</td>\r\n    <td className='text-end'>{data.totalcontribution}</td>\r\n    <td className='text-end'>{data.totalAmount}</td>\r\n  </tr>\r\n))}\r\n\r\n \r\n   \r\n    </tbody>\r\n  </table>\r\n\r\n        <div className='total totals'>\r\n          <h4 className='h4total'>Total Earnings : <span className='span'>{grandTotalIncrement}.00</span></h4>\r\n        </div>\r\n        \r\n        <div className='total'>\r\n          <h4 className='h4total'>Total Deductions : <span className='span'>{grandDeduction}.00</span></h4>\r\n        </div>\r\n        \r\n        <div className='total'>\r\n          <h4 className='h4total'>Total Net Pay : <span className='span'>{grandNetPay}.00</span></h4>\r\n        </div>\r\n        </div>\r\n</div>\r\n      </div>\r\n      \r\n    }\r\n\t  \r\n      {showEditModal && selectedItem && (\r\n        <div> \r\n  <SalaryBillEdit item={selectedItem} setData={setData} Data={Data}  closeEdit={closeEditModal}/></div>\r\n)}\r\n{showDeleteModal && selectedItem &&(<SalaryBill\r\n setData={setData}\r\n Data={Data}\r\n item={selectedItem}\r\n closeDeleteModal={closeDeleteModal}\r\n/>)}\r\n{showPrint && selectedItem &&(<Salaryview\r\n setData={setData}\r\n Data={Data}\r\n item={selectedItem}\r\n \r\n/>)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(List_salary_bill);\r\n"
        }
    ]
}