{
    "sourceFile": "frontend/src/Components/Salary Bill/Salarybill.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 78,
            "patches": [
                {
                    "date": 1703670168696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1703670234868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -972,9 +972,18 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n@@ -990,16 +999,8 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1703670270277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -981,9 +981,11 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n@@ -999,9 +1001,8 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1703670292127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1027 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670298767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1027 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670351270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670370085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -984,2073 +984,19 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n@@ -3079,1031 +1025,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670376398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670413341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670428053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -984,14 +984,14 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" />\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\"/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n"
                },
                {
                    "date": 1703670475849,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -983,9 +983,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4'>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\"/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n@@ -1025,2063 +1025,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670530455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -984,18 +984,18 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\"/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" className=\"form-control\"type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n"
                },
                {
                    "date": 1703670542575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670560707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -983,9 +983,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 ml-0'>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n"
                },
                {
                    "date": 1703670575684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control text-end\" type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670595010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 align-left'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670600958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -983,9 +983,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 align-left'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n"
                },
                {
                    "date": 1703670752003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1028 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703670781176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1028 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 align-center'>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703671948751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -745,1039 +745,13 @@\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 align-center'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n \t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n@@ -1988,1070 +962,19 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n@@ -3059,2067 +982,18 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 '>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control text-end\" type=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4 ml-0'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input  className=\"form-control\" type=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t</div>\r\n@@ -5139,1034 +1013,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className='text-end col-sm-4'>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"number\" className=\"form-control\"type=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input></input>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703671985385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n"
                },
                {
                    "date": 1703672003133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -976,9 +976,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n"
                },
                {
                    "date": 1703672010946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -976,9 +976,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n"
                },
                {
                    "date": 1703672023286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1018 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672029642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,8 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n"
                },
                {
                    "date": 1703672044353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1017 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672049659,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1017 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672059639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1017 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672068478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1017 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672171030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -972,9 +972,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays} width={2}/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n"
                },
                {
                    "date": 1703672215366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -964,2054 +964,20 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays} width={2}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr></div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"5\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n@@ -3024,1032 +990,15 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n \t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t</div> \r\n \t\t\t\t\t\t\t\t\t\t</div>\r\n@@ -4064,2041 +1013,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"6\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672235427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -964,18 +964,18 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr></div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n@@ -990,14 +990,14 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n \t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n \t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t</div> \r\n"
                },
                {
                    "date": 1703672264219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672275770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672283880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,1027 +966,8 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n@@ -2034,1022 +1015,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672301898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginLeft:\"0\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672322876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginLeft:\"0\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"0\"}}>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n@@ -1015,1024 +1015,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672332743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"0\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n"
                },
                {
                    "date": 1703672345484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672352213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672358963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"3em\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672376582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"3em\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginLeft:\"3em\"}}>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n"
                },
                {
                    "date": 1703672399999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginLeft:\"3em\"}}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 ml-6em\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n@@ -1015,3062 +1015,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\" style={{marginRight:\"2em\"}}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672408309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -966,9 +966,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 ml-6em\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 m-6\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n"
                },
                {
                    "date": 1703672465299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1017 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672585628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672637927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1020 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672664044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -976,9 +976,17 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n"
                },
                {
                    "date": 1703672680606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -967,9 +967,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n@@ -978,9 +978,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n"
                },
                {
                    "date": 1703672721481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t  if (absentDays > allowedleave) {\r\n+\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t  } else {\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  }\r\n+\t  \r\n+\t\t  const balanceleave = allowedleave - absentDays;\r\n+\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672789694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,18 +299,18 @@\n \t  \r\n \t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n \t\t  setPerDaySalary(calculatedPerDaySalary);\r\n \t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n \t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n \t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n \t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n \t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n \t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n@@ -1025,4088 +1025,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t  if (absentDays > allowedleave) {\r\n-\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t  } else {\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  }\r\n-\t  \r\n-\t\t  const balanceleave = allowedleave - absentDays;\r\n-\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4 m-6\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='text-end mt-4'>Absent</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672818563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703672840323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -989,9 +989,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1703673216189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673289116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\t// allowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673382011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\t// allowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673503400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\t// allowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673532764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\t// allowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673597168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\t// allowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673634294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -749,1033 +749,8 @@\n \t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\t// allowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n@@ -2046,6163 +1021,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\t// allowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\t// allowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\t// allowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673658966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673701460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1029 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t//   if (absentDays > allowedleave) {\r\n+\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n+\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n+\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t//   } else {\r\n+\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t//   }\r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703673754540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\tconst calculatedTotal = totalAmount\r\n+\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n+\t\t \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703674805471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1025 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t  \r\n+\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n+                                                   className=\"form-control select\"\r\n+                                                   {...register('month', { required: 'Please select a month' })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n+                                                      >\r\n+                                                         <option value=\"\">Select Type</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n+                                                      \t <option value=\"february\">Feburary</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n+                                                     </select>\r\n+                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div> */}\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675482840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675492764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.EmployeeTypeId}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675543529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675576707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0].EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675631817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675655943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -958,9 +958,9 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:TotalSalary}    readOnly/></td>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n"
                },
                {
                    "date": 1703675688689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675799111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,998 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?filterEmployeeData[0].EmployeeTypeId?filterEmployeeData[0].EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675898624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1013 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0] &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? basicSalary\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: salaryTotal\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675943301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1013 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tallowedleave:allowedleave,\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0] &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId._id == \"6566be7b0085f19cfbfd00c1\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? basicSalary\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: salaryTotal\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1703675984104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -958,25 +958,10 @@\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0] &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId._id == \"6566be7b0085f19cfbfd00c1\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? basicSalary\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: salaryTotal\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n"
                },
                {
                    "date": 1703676705777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,14 @@\n \r\n \r\n \r\n    const handleSelectChange = (selected) => {\r\n-\r\n+setDAPercentage('')\r\n+setDAPrice('')\r\n+setIRPercentage('')\r\n+setIRPrice('')\r\n+setDAValue('')\r\n+setIRValue('')\r\n \tconst select = selected.value\r\n \r\n \t\r\n     if (select) {\r\n"
                },
                {
                    "date": 1703677103715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1002 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\t\tsetDAPercentage('')\r\n+\t\tsetDAPrice('')\r\n+\t\tsetIRPercentage('')\r\n+\t\tsetIRPrice('')\r\n+\t\tsetDAValue('')\r\n+\t\tsetIRValue('')\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let \ttotalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  \r\n+\r\n+\r\n+\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704101680059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,10 @@\n \tconst [totalAmount, setTotalAmount] = useState('');\r\n \tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n \tconst [employeeid,setEmployeeid]=useState('');\r\n \tconst [formdata,setformData]=useState([]);\r\n+\tconst [eligiblePay,setEligiblePay]=useState('');\r\n+\tconst [lossOfPay,setLossOfPay]=useState('');\r\n \t\r\n \tconst [EPFWage,setEPFWage]=useState('');\r\n \tconst [EPSWage,setEPSWage]=useState('');\r\n \tconst [EPSContri,setEPSContri]=useState('');\r\n@@ -527,1014 +529,23 @@\n \tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n \tconsole.log(EDLIWage,\"EdliWage\");\r\n \r\n   }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n+  console.log(absentDays,\":AbsentDays\");\r\n \r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-setDAPercentage('')\r\n-setDAPrice('')\r\n-setIRPercentage('')\r\n-setIRPrice('')\r\n-setDAValue('')\r\n-setIRValue('')\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n   useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n+\tif(absentDays && basicSalary){\r\n+\t\tconst EligiblePay = (30 - absentDays)*basicSalary/30\r\n+\t\tconst LossOfPAY = (absentDays)*basicSalary/30\r\n+\t\tsetEligiblePay(Math.round(EligiblePay))\r\n+\t\tsetLossOfPay(Math.round(LossOfPAY))\r\n+\t\tconsole.log(EligiblePay,\":Eligible Pay\");\r\n \t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n \r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n+  },[absentDays])\r\n \r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n+console.log(eligiblePay,\"Eligible Pay\");\r\n+console.log(lossOfPay,\"LossOfpay\");\r\n const handleformsubmit = async(event)=>{\r\n \t// event.preventDefault();\r\n \tconsole.log(tablerow,\":tablerow:\");\r\n \treset\r\n@@ -1558,16 +569,17 @@\n \t\t\ttotaldeduction:totaldeduction,\r\n \t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n \t\t\ttotalincrement:totalincrement,\r\n \t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tlossOfPay,\r\n+\t\t\teligiblePay,\r\n \t\t\tEPFWage,\r\n \t\t\tEPSWage,\r\n \t\t\tEDLIWage,\r\n \t\t\tEPFContri,\r\n \t\t\tEPSContri,\r\n \t\t\tEPSEPFDiff,\r\n \t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n \t\t\tabsentDays : absentDays,\r\n \t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n \t\t\t}\r\n \t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n@@ -1586,8 +598,10 @@\n \t\t\tsetIRPercentage('');\r\n \t\t\tsetIRPrice('');\r\n \t\t\tsetDAValue('');\r\n \t\t\tsetIRValue('');\r\n+\t\t\tsetLossOfPay('');\r\n+\t\t\tsetEligiblePay('');\r\n \t\t\tsetTotalContributions([])\r\n \t\t\tconst response = await AddSalaryBill(formdata);\r\n \r\n \t\t\t if (response.success){\r\n@@ -2001,13137 +1015,5 @@\n     </>\r\n   )\r\n }\r\n \r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0] &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterEmployeeData[0].EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? basicSalary\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: salaryTotal\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?filterEmployeeData[0].EmployeeTypeId?filterEmployeeData[0].EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0]?.EmployeeTypeId?._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:TotalSalary}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData[0].EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.EmployeeTypeId._id === \"6566be7b0085f19cfbfd00c1\"?basicSalary:salaryTotal}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.EmployeeTypeId}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}} value={filterEmployeeData.}    readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\r\n-\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t  \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t\tconst calculatedTotal = totalAmount\r\n-\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t \r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\tallowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n-export default Salarybill\n-import React,{ useMemo,useEffect, useState} from 'react'\r\n-import PageHeader from '../PageHeader'\r\n-import { toast } from 'react-toastify';\r\n-import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n-import { getallSalary } from '../../Apicalls/salarymaster';\r\n-import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n-import list_salary_bill from './List_salary_bill';\r\n-import { useForm } from 'react-hook-form';\r\n-\r\n-import Select from 'react-select';\r\n-\r\n-const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n-function Salarybill() {\r\n-\t\r\n-\r\n-\tconst [unit,setUnit]=useState('');\r\n-\tconst [department,setDepartment]=useState('');\r\n-\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n-\tconst [EmployeeId, setEmployeeId] = useState('');\r\n-\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n-\tconst [absentvalue,setAbsentValue]=useState('')\r\n-\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n-\tconst [tablerow, setTablerow] = useState([]);\r\n-\tconst [tablerows, setTablerows] = useState([]);\r\n-\tconst [basicSalary,setBasicSalary]=useState('')\r\n-\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n-\tconst [TotalSalary, setTotalSalary] = useState('');\r\n-\tconst [totalAmount, setTotalAmount] = useState('');\r\n-\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n-\tconst [employeeid,setEmployeeid]=useState('');\r\n-\tconst [formdata,setformData]=useState([]);\r\n-\t\r\n-\tconst [EPFWage,setEPFWage]=useState('');\r\n-\tconst [EPSWage,setEPSWage]=useState('');\r\n-\tconst [EPSContri,setEPSContri]=useState('');\r\n-\tconst[EPFContri,setEPFContri]=useState('');\r\n-\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n-\tconst [EDLIWage, setEDLIWage]=useState('');\r\n-\r\n-\tconst[count,setcount]=useState('');\r\n-\tconst[salarybill,setSalarybill]=useState(false);\r\n-\tconst [salaryList,setSalaryList]=useState(true)\r\n-\r\n-\r\n-\tconst [DAPercentage,setDAPercentage]=useState('');\r\n-\tconst [DAValue,setDAValue]=useState('');\r\n-\tconst [DAPrice,setDAPrice]=useState('');\r\n-\tconst [IRPercentage,setIRPercentage]=useState('');\r\n-\tconst [IRValue,setIRValue]=useState('');\r\n-\tconst [IRPrice,setIRPrice]=useState('');\r\n-\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n-\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n-\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n-\r\n-\tconst {\r\n-\t\t\r\n-\t\tregister,\r\n-\t\thandleSubmit,\r\n-\t\tformState: { errors },\r\n-\t\treset,\r\n-\t  } = useForm({\r\n-\t\tcriteriaMode: 'all',\r\n-\t\r\n-\t  });\r\n-\r\n-\r\n-\t  useEffect(() => {\r\n-\t\tconst fetchUniqueSixCharacterID = async () => {\r\n-\t\t  try {\r\n-\t\t\tconst response = await GetSalaryBillCount();\r\n-\t\t\tsetcount( response.data.count+1);\r\n-\t\t  } catch (error) {\r\n-\t\t\tconsole.error(\"Error:\", error);\r\n-\t\t  }\r\n-\t\t};\r\n-\t  \r\n-\t\tfetchUniqueSixCharacterID();\r\n-\t  }, []);\r\n-\t\r\n-\r\n-\tconst handleEmployeeclick = async () => {\r\n-\t\r\n-\t try {\r\n-\t   if (!isEmployeeDataFetched) {\r\n-\t\t const response = await getallemployeemaster ();\r\n-\t\t if (response.success) {\r\n-\t\t   setEmployeeData(response.data);\r\n-\t\t } else {\r\n-\t\t   setEmployeeData([]);\r\n-\t\t }\r\n-\t\t setIsEmployeeDataFetched(true);\r\n-\t   }\r\n-\t } catch (error) {\r\n-\t   toast.error(error.message);\r\n-\t }\r\n-   };\r\n-   useEffect(()=>{\r\n-\thandleEmployeeclick()\r\n-  },[])\r\n-\r\n-  \r\n-\r\n-   const [selectedOption, setSelectedOption] = useState(null);\r\n-   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n-  \r\n-\tconst  handleInputChange = (newValue) => {\r\n-\t\r\n-\t  const filteredOptions = EmployeeData.filter((data) =>\r\n-\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n-\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n-\t  setOptions(filteredOptions);\r\n-\t};\r\n-\r\n-\r\n-\r\n-   const handleSelectChange = (selected) => {\r\n-\r\n-\tconst select = selected.value\r\n-\r\n-\t\r\n-    if (select) {\r\n-\t\t\r\n-        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n-       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n-\t\r\n-\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n-\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n-\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n-\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n-\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n-\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n-// Check if tablerow exists and has elements before accessing properties\r\n-if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 0 &&\r\n-\tfilteredEmployees[0].tablerow[0]\r\n-  ) {\r\n-\tsetDAPrice(\r\n-\t  filteredEmployees[0].tablerow[0].price\r\n-\t\t? filteredEmployees[0].tablerow[0].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAValue(\r\n-\t  filteredEmployees[0].tablerow[0].value\r\n-\t\t? filteredEmployees[0].tablerow[0].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetDAPercentage(\r\n-\t  filteredEmployees[0].tablerow[0].percentage\r\n-\t\t? filteredEmployees[0].tablerow[0].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-  if (\r\n-\tfilteredEmployees[0].tablerow &&\r\n-\tfilteredEmployees[0].tablerow.length > 1 &&\r\n-\tfilteredEmployees[0].tablerow[1]\r\n-  ) {\r\n-\tsetIRPrice(\r\n-\t  filteredEmployees[0].tablerow[1].price\r\n-\t\t? filteredEmployees[0].tablerow[1].price\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRValue(\r\n-\t  filteredEmployees[0].tablerow[1].value\r\n-\t\t? filteredEmployees[0].tablerow[1].value\r\n-\t\t: \"\"\r\n-\t);\r\n-\tsetIRPercentage(\r\n-\t  filteredEmployees[0].tablerow[1].percentage\r\n-\t\t? filteredEmployees[0].tablerow[1].percentage\r\n-\t\t: \"\"\r\n-\t);\r\n-  }\r\n-  \r\n-\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n-        setFilterEmployeeData(filteredEmployees);\r\n-\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n-\t\tif (Array.isArray(tablerowData)) {\r\n-\t\tsetTablerow(tablerowData.slice(2));\r\n-\t\t} else {\r\n-\t\tsetTablerow([]);\r\n-\t\t}\r\n-\t\t  console.log('tablerow',tablerow);\r\n-    }\r\n-};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n-\r\n- \r\n-\r\n-\r\n-console.log('filtered data :',filterEmployeeData);\r\n-const headerdata = useMemo(() => {\r\n-\treturn {\r\n-\t  data:\"Salary master\",\r\n-\t  page:\"salary bill\"\r\n-\t};\r\n-  }, []);\r\n-\r\n-\r\n-\r\n-  const handleAddRow = () => {\r\n-    setTablerow((prevRows) => [\r\n-      ...prevRows,\r\n-      {\r\n-        id: Date.now(),\r\n-        salaryComponent: \"\",\r\n-        percentage: \"\",\r\n-        value: \"\",\r\n-        price: \"\",\r\n-      },\r\n-    ]);\r\n-  };\r\n-  const handleRemoveRow = (id) => {\r\n-    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n-  };\r\n-\r\n-  const [month, setmonth] = useState('')\r\n-  \r\n-\r\n-  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n-  const [salarymasterData, setSalarymasterData] = useState([]);\r\n-  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n-\r\n-  const data = tablerow.slice(2)\r\n-  \r\n- \r\n-  const handlesalarymasterclick = async () => {\r\n-    try {\r\n-      if (!issalarymasterDataFetched) {\r\n-        const response = await getallSalary();\r\n-        if (response.success) {\r\n-          setSalarymasterData(response.data);\r\n-        } else {\r\n-          setSalarymasterData([]);\r\n-        }\r\n-      }\r\n-      setIsSalarymasterDataFetched(true);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    }\r\n-  };\r\n-  useEffect(()=>{\r\n-\thandlesalarymasterclick()\r\n-  },[])\r\n-\r\n-\r\n-\r\n-\r\n-const handlesalarymasterchange = (event, index) => {\r\n-\tconst updatedTableRows = [...tablerow];\r\n-\tupdatedTableRows[index] = {\r\n-\t  ...updatedTableRows[index],\r\n-\t  salaryComponent: event.target.value,\r\n-\t};\r\n-\tsetTablerow(updatedTableRows);\r\n-  };\r\n-  \r\n-  const [salarycomponent, setSalaryComponent] = useState([]);\r\n-\r\n-   \r\n-\tconst [absentDays, setAbsentDays] = useState(0);\r\n-\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n-\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n-    const [leaveDifference,setLeaveDifference]=useState('');\r\n- \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n-\r\n-\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n-\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n-\tuseEffect(() => {\r\n-\t\ttry {\r\n-\t\t  let \ttotalAmount = basicSalary;\r\n-\t\t  let totalDeduction = 0;\r\n-\t\t  let totalIncrement = 0;\r\n-\t\t  let totalcontribution =0;\r\n-\t  \r\n-\r\n-\t\t  // Your existing logic for calculating totalAmount\r\n-\t  \r\n-\t\t  tablerow.forEach((row) => {\r\n-\t\t\tconst salaryType = salarymasterData.find(\r\n-\t\t\t  (item) =>\r\n-\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n-\t\t\t);\r\n-\t  \r\n-\t\t\tif (salaryType) {\r\n-\t\t\t  if (salaryType.type === 'Increment') {\r\n-\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n-\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n-\t\t\t  } else if (salaryType.type === 'nill') {\r\n-\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n-\t\t\t  }\r\n-\t\t\t}\r\n-\t\t  });\r\n-\t  \r\n-\t\t  // Calculate the total after deducting deductions and adding increments\r\n-\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n-\t  \r\n-\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n-\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n-\t  \r\n-\t\t//   if (absentDays > allowedleave) {\r\n-\t\t// \tconst leaveDifferences = absentDays - allowedleave;\r\n-\t\t// \tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n-\t\t// \tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n-\t\t//   } else {\r\n-\t\t// \tsetSalaryTotal(totalAmount.toFixed(2));\r\n-\t\t//   }\r\n-\t  \r\n-\t\t//   const balanceleave = allowedleave - absentDays;\r\n-\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n-\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n-\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n-\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n-\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n-\t\t} catch (error) {\r\n-\t\t  console.error('Error in useEffect:', error);\r\n-\t\t}\r\n-\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n-\t  \r\n-\t  \r\n-\r\n-\r\n-  const handleSecondInputChange = (index, value) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = \"\";\r\n-    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n-    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n-    updatedTableRows[index].price = newPrice;\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-  const   handleChange = (index, percentage) => {\r\n-    const updatedTableRows = [...tablerow];\r\n-    updatedTableRows[index].percentage = Number(percentage);\r\n-\r\n-    // Reset second field's value when first field is updated\r\n-    updatedTableRows[index].value = \"\";\r\n-\r\n-    // Recalculate the price based on the updated percentage and basic salary\r\n-    const newPrice = basicSalary\r\n-      ? (basicSalary * Number(percentage)) / 100\r\n-      : \"\";\r\n-    updatedTableRows[index].price = newPrice || \"\";\r\n-\r\n-    setTablerow(updatedTableRows);\r\n-  };\r\n-\r\n-\r\n-\r\n-\r\n-  const handleDAPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAPercentage(value)\r\n-\t setDAValue('')\r\n-   }\r\n-   const handleDAValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setDAValue(value)\r\n-\t setDAPercentage('')\r\n-   }\r\n-   const handleIRPercentage = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRPercentage(value)\r\n-\t setIRValue('')\r\n-   }\r\n-   const handleIRValue = (event)=>{\r\n-\t const value= event.target.value;\r\n-\t setIRValue(value)\r\n-\t setIRPercentage('')\r\n-   }\r\n-\r\n-   useEffect(() => {\r\n-\r\n-\t// DA row\r\n-\t\r\n-\tif (DAPercentage !== 0 && !DAValue) {\r\n-\t  const price = (basicSalary * DAPercentage) / 100;\r\n-\t  setDAPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (DAValue !== 0 && !DAPercentage) {\r\n-\t  const prices = DAValue;\r\n-\t  setDAPrice(prices);\r\n-\t}\r\n-\r\n-\t// IR row\r\n-\t\r\n-\tif (IRPercentage !== 0 && !IRValue) {\r\n-\t  const price = (basicSalary * IRPercentage) / 100;\r\n-\t  setIRPrice(price);\r\n-\t}\r\n-  \r\n-\telse if (IRValue !== 0 && !IRPercentage) {\r\n-\t  const prices = IRValue;\r\n-\t  setIRPrice(prices);\r\n-\t}\r\n-\r\n-   \r\n-  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n-\r\n-\r\n-  \r\n-\r\n-\r\n-\r\n-\r\n-const firstrow =[\r\n-\t{\r\n-\t\tid:1,\r\n-\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n-\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n-\t\tvalue:DAValue?DAValue:\"\",\r\n-\t\tprice:DAPrice\r\n-\t},\r\n-\t{\r\n-\t\tid:2,\r\n-\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n-\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n-\t\tvalue:IRValue?IRValue:\"\",\r\n-\t\tprice:IRPrice\r\n-\t}\r\n-  ]\r\n-  const[updatedRow,setUpdatedRow]=useState('');\r\n-\r\n-  useEffect(()=>{\r\n-\tlet updatedFirstRow = [...firstrow];\r\n-\r\n-\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n-\t  updatedFirstRow = [...updatedFirstRow];\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n-\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n-\t  setUpdatedRow(updatedFirstRow)\r\n-\t}\r\n-\r\n-  },[tablerow,DAPrice,IRPrice]) \r\n-\r\n-console.log(updatedRow,\"::tableroqw\");\r\n-\r\n-\r\n-useEffect(() => {\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n-\t\tsetTableDisplay(true)\r\n-\t}else{\r\n-\t\tsetTableDisplay(false)\r\n-\t}\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n-\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n-\t\tsetEPFWage(EPF)\r\n-\t}else{\r\n-\t\tsetEPFWage('')\r\n-\t};\r\n-\r\n-\r\n-\r\n-const joiningDate = new Date(dateOfJoining);\r\n-const comparisonDate = new Date('2014-01-01');\r\n-\r\n-\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n-\t  setEPSWage(0);\r\n-\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n-\t  setEPSWage(15000);\r\n-\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n-\t  setEPSWage(totalAmount);\r\n-\t}else{\r\n-\t\tsetEPSWage('')\r\n-\t};\r\n-\r\n-\r\n-\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n-\t\tsetEDLIWage(15000)\r\n-\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n-\t\tsetEDLIWage(totalAmount)\r\n-\t}else{\r\n-\t\tsetEDLIWage('')\r\n-\t}\r\n-\r\n-\t\r\n-if(EPSWage === 15000){\r\n-setEPSContri(1250)\r\n-}else if(EPSWage === 0){\r\n-setEPSContri(0)\r\n-}else{\r\n- const EPS = (EPFWage * 8.33)/100\r\n- setEPSContri(EPS)\r\n-}\r\n-\r\n-const targetId = '658112ecc32bc7fefb3b2e3f';\r\n-let foundData = null;\r\n-\r\n-for (let i = 0; i < tablerow.length; i++) {\r\n-if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n-foundData = tablerow[i];\r\n-break;\r\n-}\r\n-}\r\n-const EPFcontribution = (EPFWage * 12) / 100;\r\n-console.log(EPFcontribution,\"::EPFSSS\");\r\n-if (!foundData) {\r\n-setEPFContri(EPFcontribution)\r\n-console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n-} else {\r\n-console.log('ddddddddddddddddddddddddd');\r\n-const EPFS =( EPFcontribution + foundData.price)\r\n-setEPFContri(EPFS)\r\n-}\r\n-\r\n-const EPFSS = (EPFWage * 12) / 100;\r\n-\r\n-if( EPFContri){\r\n-const EPFEPSDIFF = EPFSS -EPSContri\r\n-setEPSEPFDiff(EPFEPSDIFF)\r\n-}\r\n-\r\n-\r\n-\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n-\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n-\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n-\tconsole.log(EPFWage,\":EPF WAGE\");\r\n-\tconsole.log(EPSWage,\":Eps WAGE\");\r\n-\tconsole.log(dateOfJoining);\r\n-\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n-\tconsole.log(EDLIWage,\"EdliWage\");\r\n-\r\n-  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n-  \r\n-\r\n-\r\n-\r\n-const handleformsubmit = async(event)=>{\r\n-\t// event.preventDefault();\r\n-\tconsole.log(tablerow,\":tablerow:\");\r\n-\treset\r\n-\t\ttry {\r\n-\t\t\t// const LeaveBalance = {\r\n-\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n-\t\t\t// \tallowedleave: Number(leaveDifference)\r\n-\t\t\t// };\r\n-\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n-\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n-\t\t\t// if (responses.success){\r\n-\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n-\t\t\t// }\r\n-\t\t\tconst formdata = {\r\n-\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n-\t\t\tdate:date,\t\r\n-\t\t\temployeeid:employeeid,\r\n-\t\t\tdepartmentid : department,\r\n-\t\t\tunitid : unit,\r\n-\t\t\tbasicSalary:basicSalary,\r\n-\t\t\ttotaldeduction:totaldeduction,\r\n-\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n-\t\t\ttotalincrement:totalincrement,\r\n-\t\t\temployeeTypeId:employeeTypeId,\r\n-\t\t\tEPFWage,\r\n-\t\t\tEPSWage,\r\n-\t\t\tEDLIWage,\r\n-\t\t\tEPFContri,\r\n-\t\t\tEPSContri,\r\n-\t\t\tEPSEPFDiff,\r\n-\t\t\ttablerow:updatedRow||[],\r\n-\t\t\t// allowedleave:allowedleave,\r\n-\t\t\tabsentDays : absentDays,\r\n-\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n-\t\t\t}\r\n-\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n-\t\t\tsetcount((prevCount) => prevCount + 1);\r\n-\t\t\tsetFilterEmployeeData([])\r\n-\t\t\tsetTablerow([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetAbsentDays(0)\r\n-\t\t\tsetAllowedLeave('')\r\n-\t\t\tsetEmployeeId([])\r\n-\t\t\tsetBasicSalary([])\r\n-\t\t\tsetSalaryTotal([])\r\n-\t\t\tsetUpdatedRow([])\r\n-\t\t\tsetDAPercentage('')\r\n-\t\t\tsetDAPrice('');\r\n-\t\t\tsetIRPercentage('');\r\n-\t\t\tsetIRPrice('');\r\n-\t\t\tsetDAValue('');\r\n-\t\t\tsetIRValue('');\r\n-\t\t\tsetTotalContributions([])\r\n-\t\t\tconst response = await AddSalaryBill(formdata);\r\n-\r\n-\t\t\t if (response.success){\r\n-\t\t\tsetformData(response.data);\r\n-\t\t\ttoast.success(response.message);\r\n-\t\t\tsetSalarybill(false);\r\n-\t\t\tsetSalaryList(true)\r\n-\t\t\treset\r\n-\t\t\t}\r\n-\t\t\telse {\r\n-\t\t\t\ttoast.error(response.message);\r\n-\t\t\t  }\r\n-\t\t\t\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t\tconsole.log(error);\r\n-\t\t}\r\n-\r\n-\t}\r\n-const handleAddClick =()=>{\r\n-\tsetSalarybill(true);\r\n-\tsetSalaryList(false)\r\n-}\r\n-const handleTableClick =()=>{\r\n-\tsetSalarybill(false);\r\n-\tsetSalaryList(true)\r\n-}\r\n-\r\n-console.log(\"absent\",absentvalue);\r\n-\r\n-\r\n-const [date, setDate] = useState(() => {\r\n-\tconst today = new Date();\r\n-\tconst year = today.getFullYear();\r\n-\tlet month = today.getMonth() + 1;\r\n-\tlet day = today.getDate();\r\n-  \r\n-\t// Pad the month and day with leading zeros if needed\r\n-\tmonth = month < 10 ? `0${month}` : month;\r\n-\tday = day < 10 ? `0${day}` : day;\r\n-  \r\n-\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n-\treturn `${year}-${month}-${day}`;\r\n-  });\r\n-\r\n-console.log('ssssss',basicSalary);\r\n-\t\r\n-return (\r\n-    <>\r\n-      <PageHeader headerdata={headerdata}/>\r\n-\r\n-\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n-\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n-\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n-\t\t\t\t\t\t\t\t<div class=\"row\">\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t   <input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t\t  \r\n-\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n-                                                   className=\"form-control select\"\r\n-                                                   {...register('month', { required: 'Please select a month' })}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n-                                                      >\r\n-                                                         <option value=\"\">Select Type</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n-                                                      \t <option value=\"february\">Feburary</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n-                                                     </select>\r\n-                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div> */}\r\n-\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t<Select\r\n-\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n-\t\t\t\t\t\t\t\t\t\toptions={options}\r\n-\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n-\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n-\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n-\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n-\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t</div>\t\r\n-\t\t\t\t\t\t\t</div>\r\n-\r\n-\t\t\t\t\r\n-\t\t\t\t\t\t\t\t<div className=\"row\">\r\n-\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n-                                                                        onChange={(e) => handleIRPercentage(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}  value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n-\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\t</div> \r\n-\t\t\t\t\t\t\t\t\t\t</div>\r\n-\t\t\t\t\t\t\t\t\t\t\r\n-\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n-\r\n-\t\r\n-\t\t\t{ salaryList&&  <div>\r\n-\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n-\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n-\t\t\r\n-    </>\r\n-  )\r\n-}\r\n-\r\n export default Salarybill\n\\ No newline at end of file\n"
                },
                {
                    "date": 1704428858114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,1019 @@\n+import React,{ useMemo,useEffect, useState} from 'react'\r\n+import PageHeader from '../PageHeader'\r\n+import { toast } from 'react-toastify';\r\n+import { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\n+import { getallSalary } from '../../Apicalls/salarymaster';\r\n+import { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\n+import list_salary_bill from './List_salary_bill';\r\n+import { useForm } from 'react-hook-form';\r\n+\r\n+import Select from 'react-select';\r\n+\r\n+const MemoizedSalaryBill = React.memo(list_salary_bill);\r\n+function Salarybill() {\r\n+\t\r\n+\r\n+\tconst [unit,setUnit]=useState('');\r\n+\tconst [department,setDepartment]=useState('');\r\n+\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n+\tconst [EmployeeId, setEmployeeId] = useState('');\r\n+\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n+\tconst [absentvalue,setAbsentValue]=useState('')\r\n+\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n+\tconst [tablerow, setTablerow] = useState([]);\r\n+\tconst [tablerows, setTablerows] = useState([]);\r\n+\tconst [basicSalary,setBasicSalary]=useState('')\r\n+\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n+\tconst [TotalSalary, setTotalSalary] = useState('');\r\n+\tconst [totalAmount, setTotalAmount] = useState('');\r\n+\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n+\tconst [employeeid,setEmployeeid]=useState('');\r\n+\tconst [formdata,setformData]=useState([]);\r\n+\tconst [eligiblePay,setEligiblePay]=useState('');\r\n+\tconst [lossOfPay,setLossOfPay]=useState('');\r\n+\t\r\n+\tconst [EPFWage,setEPFWage]=useState('');\r\n+\tconst [EPSWage,setEPSWage]=useState('');\r\n+\tconst [EPSContri,setEPSContri]=useState('');\r\n+\tconst[EPFContri,setEPFContri]=useState('');\r\n+\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n+\tconst [EDLIWage, setEDLIWage]=useState('');\r\n+\r\n+\tconst[count,setcount]=useState('');\r\n+\tconst[salarybill,setSalarybill]=useState(false);\r\n+\tconst [salaryList,setSalaryList]=useState(true)\r\n+\r\n+\r\n+\tconst [DAPercentage,setDAPercentage]=useState('');\r\n+\tconst [DAValue,setDAValue]=useState('');\r\n+\tconst [DAPrice,setDAPrice]=useState('');\r\n+\tconst [IRPercentage,setIRPercentage]=useState('');\r\n+\tconst [IRValue,setIRValue]=useState('');\r\n+\tconst [IRPrice,setIRPrice]=useState('');\r\n+\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n+\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n+\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n+\r\n+\tconst {\r\n+\t\t\r\n+\t\tregister,\r\n+\t\thandleSubmit,\r\n+\t\tformState: { errors },\r\n+\t\treset,\r\n+\t  } = useForm({\r\n+\t\tcriteriaMode: 'all',\r\n+\t\r\n+\t  });\r\n+\r\n+\r\n+\t  useEffect(() => {\r\n+\t\tconst fetchUniqueSixCharacterID = async () => {\r\n+\t\t  try {\r\n+\t\t\tconst response = await GetSalaryBillCount();\r\n+\t\t\tsetcount( response.data.count+1);\r\n+\t\t  } catch (error) {\r\n+\t\t\tconsole.error(\"Error:\", error);\r\n+\t\t  }\r\n+\t\t};\r\n+\t  \r\n+\t\tfetchUniqueSixCharacterID();\r\n+\t  }, []);\r\n+\t\r\n+\r\n+\tconst handleEmployeeclick = async () => {\r\n+\t\r\n+\t try {\r\n+\t   if (!isEmployeeDataFetched) {\r\n+\t\t const response = await getallemployeemaster ();\r\n+\t\t if (response.success) {\r\n+\t\t   setEmployeeData(response.data);\r\n+\t\t } else {\r\n+\t\t   setEmployeeData([]);\r\n+\t\t }\r\n+\t\t setIsEmployeeDataFetched(true);\r\n+\t   }\r\n+\t } catch (error) {\r\n+\t   toast.error(error.message);\r\n+\t }\r\n+   };\r\n+   useEffect(()=>{\r\n+\thandleEmployeeclick()\r\n+  },[])\r\n+\r\n+  \r\n+\r\n+   const [selectedOption, setSelectedOption] = useState(null);\r\n+   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n+  \r\n+\tconst  handleInputChange = (newValue) => {\r\n+\t\r\n+\t  const filteredOptions = EmployeeData.filter((data) =>\r\n+\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n+\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n+\t  setOptions(filteredOptions);\r\n+\t};\r\n+\r\n+\r\n+\r\n+   const handleSelectChange = (selected) => {\r\n+\t\tsetDAPercentage('')\r\n+\t\tsetDAPrice('')\r\n+\t\tsetIRPercentage('')\r\n+\t\tsetIRPrice('')\r\n+\t\tsetDAValue('')\r\n+\t\tsetIRValue('')\r\n+\tconst select = selected.value\r\n+\r\n+\t\r\n+    if (select) {\r\n+\t\t\r\n+        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n+       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n+\t\r\n+\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n+\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n+\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n+\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n+\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n+\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n+// Check if tablerow exists and has elements before accessing properties\r\n+if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 0 &&\r\n+\tfilteredEmployees[0].tablerow[0]\r\n+  ) {\r\n+\tsetDAPrice(\r\n+\t  filteredEmployees[0].tablerow[0].price\r\n+\t\t? filteredEmployees[0].tablerow[0].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAValue(\r\n+\t  filteredEmployees[0].tablerow[0].value\r\n+\t\t? filteredEmployees[0].tablerow[0].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetDAPercentage(\r\n+\t  filteredEmployees[0].tablerow[0].percentage\r\n+\t\t? filteredEmployees[0].tablerow[0].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+  if (\r\n+\tfilteredEmployees[0].tablerow &&\r\n+\tfilteredEmployees[0].tablerow.length > 1 &&\r\n+\tfilteredEmployees[0].tablerow[1]\r\n+  ) {\r\n+\tsetIRPrice(\r\n+\t  filteredEmployees[0].tablerow[1].price\r\n+\t\t? filteredEmployees[0].tablerow[1].price\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRValue(\r\n+\t  filteredEmployees[0].tablerow[1].value\r\n+\t\t? filteredEmployees[0].tablerow[1].value\r\n+\t\t: \"\"\r\n+\t);\r\n+\tsetIRPercentage(\r\n+\t  filteredEmployees[0].tablerow[1].percentage\r\n+\t\t? filteredEmployees[0].tablerow[1].percentage\r\n+\t\t: \"\"\r\n+\t);\r\n+  }\r\n+  \r\n+\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n+        setFilterEmployeeData(filteredEmployees);\r\n+\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n+\t\tif (Array.isArray(tablerowData)) {\r\n+\t\tsetTablerow(tablerowData.slice(2));\r\n+\t\t} else {\r\n+\t\tsetTablerow([]);\r\n+\t\t}\r\n+\t\t  console.log('tablerow',tablerow);\r\n+    }\r\n+};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n+\r\n+ \r\n+\r\n+\r\n+console.log('filtered data :',filterEmployeeData);\r\n+const headerdata = useMemo(() => {\r\n+\treturn {\r\n+\t  data:\"Salary master\",\r\n+\t  page:\"salary bill\"\r\n+\t};\r\n+  }, []);\r\n+\r\n+\r\n+\r\n+  const handleAddRow = () => {\r\n+    setTablerow((prevRows) => [\r\n+      ...prevRows,\r\n+      {\r\n+        id: Date.now(),\r\n+        salaryComponent: \"\",\r\n+        percentage: \"\",\r\n+        value: \"\",\r\n+        price: \"\",\r\n+      },\r\n+    ]);\r\n+  };\r\n+  const handleRemoveRow = (id) => {\r\n+    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n+  };\r\n+\r\n+  const [month, setmonth] = useState('')\r\n+  \r\n+\r\n+  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n+  const [salarymasterData, setSalarymasterData] = useState([]);\r\n+  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n+\r\n+  const data = tablerow.slice(2)\r\n+  \r\n+ \r\n+  const handlesalarymasterclick = async () => {\r\n+    try {\r\n+      if (!issalarymasterDataFetched) {\r\n+        const response = await getallSalary();\r\n+        if (response.success) {\r\n+          setSalarymasterData(response.data);\r\n+        } else {\r\n+          setSalarymasterData([]);\r\n+        }\r\n+      }\r\n+      setIsSalarymasterDataFetched(true);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    }\r\n+  };\r\n+  useEffect(()=>{\r\n+\thandlesalarymasterclick()\r\n+  },[])\r\n+\r\n+\r\n+\r\n+\r\n+const handlesalarymasterchange = (event, index) => {\r\n+\tconst updatedTableRows = [...tablerow];\r\n+\tupdatedTableRows[index] = {\r\n+\t  ...updatedTableRows[index],\r\n+\t  salaryComponent: event.target.value,\r\n+\t};\r\n+\tsetTablerow(updatedTableRows);\r\n+  };\r\n+  \r\n+  const [salarycomponent, setSalaryComponent] = useState([]);\r\n+\r\n+   \r\n+\tconst [absentDays, setAbsentDays] = useState(0);\r\n+\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n+\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n+    const [leaveDifference,setLeaveDifference]=useState('');\r\n+ \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n+\r\n+\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n+\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n+\tuseEffect(() => {\r\n+\t\ttry {\r\n+\t\t  let totalAmount = basicSalary;\r\n+\t\t  let totalDeduction = 0;\r\n+\t\t  let totalIncrement = 0;\r\n+\t\t  let totalcontribution =0;\r\n+\t  \r\n+\r\n+\t\t  // Your existing logic for calculating totalAmount\r\n+\t  \r\n+\t\t  tablerow.forEach((row) => {\r\n+\t\t\tconst salaryType = salarymasterData.find(\r\n+\t\t\t  (item) =>\r\n+\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n+\t\t\t);\r\n+\t  \r\n+\t\t\tif (salaryType) {\r\n+\t\t\t  if (salaryType.type === 'Increment') {\r\n+\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n+\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n+\t\t\t  } else if (salaryType.type === 'nill') {\r\n+\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n+\t\t\t  }\r\n+\t\t\t}\r\n+\t\t  });\r\n+\t  \r\n+\t\t  // Calculate the total after deducting deductions and adding increments\r\n+\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n+\t  \r\n+\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n+\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n+\t  \r\n+\t\t\r\n+\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n+\t\t  \r\n+\t  \r\n+\t\t//   const balanceleave = allowedleave - absentDays;\r\n+\t\t//   setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n+\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n+\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n+\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n+\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n+\t\t} catch (error) {\r\n+\t\t  console.error('Error in useEffect:', error);\r\n+\t\t}\r\n+\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n+\t  \r\n+\t  \r\n+\r\n+\r\n+  const handleSecondInputChange = (index, value) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = \"\";\r\n+    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n+    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n+    updatedTableRows[index].price = newPrice;\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+  const   handleChange = (index, percentage) => {\r\n+    const updatedTableRows = [...tablerow];\r\n+    updatedTableRows[index].percentage = Number(percentage);\r\n+\r\n+    // Reset second field's value when first field is updated\r\n+    updatedTableRows[index].value = \"\";\r\n+\r\n+    // Recalculate the price based on the updated percentage and basic salary\r\n+    const newPrice = basicSalary\r\n+      ? (basicSalary * Number(percentage)) / 100\r\n+      : \"\";\r\n+    updatedTableRows[index].price = newPrice || \"\";\r\n+\r\n+    setTablerow(updatedTableRows);\r\n+  };\r\n+\r\n+\r\n+\r\n+\r\n+  const handleDAPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAPercentage(value)\r\n+\t setDAValue('')\r\n+   }\r\n+   const handleDAValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setDAValue(value)\r\n+\t setDAPercentage('')\r\n+   }\r\n+   const handleIRPercentage = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRPercentage(value)\r\n+\t setIRValue('')\r\n+   }\r\n+   const handleIRValue = (event)=>{\r\n+\t const value= event.target.value;\r\n+\t setIRValue(value)\r\n+\t setIRPercentage('')\r\n+   }\r\n+\r\n+   useEffect(() => {\r\n+\r\n+\t// DA row\r\n+\t\r\n+\tif (DAPercentage !== 0 && !DAValue) {\r\n+\t  const price = (basicSalary * DAPercentage) / 100;\r\n+\t  setDAPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (DAValue !== 0 && !DAPercentage) {\r\n+\t  const prices = DAValue;\r\n+\t  setDAPrice(prices);\r\n+\t}\r\n+\r\n+\t// IR row\r\n+\t\r\n+\tif (IRPercentage !== 0 && !IRValue) {\r\n+\t  const price = (basicSalary * IRPercentage) / 100;\r\n+\t  setIRPrice(price);\r\n+\t}\r\n+  \r\n+\telse if (IRValue !== 0 && !IRPercentage) {\r\n+\t  const prices = IRValue;\r\n+\t  setIRPrice(prices);\r\n+\t}\r\n+\r\n+   \r\n+  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n+\r\n+\r\n+  \r\n+\r\n+\r\n+\r\n+\r\n+const firstrow =[\r\n+\t{\r\n+\t\tid:1,\r\n+\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n+\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n+\t\tvalue:DAValue?DAValue:\"\",\r\n+\t\tprice:DAPrice\r\n+\t},\r\n+\t{\r\n+\t\tid:2,\r\n+\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n+\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n+\t\tvalue:IRValue?IRValue:\"\",\r\n+\t\tprice:IRPrice\r\n+\t}\r\n+  ]\r\n+  const[updatedRow,setUpdatedRow]=useState('');\r\n+\r\n+  useEffect(()=>{\r\n+\tlet updatedFirstRow = [...firstrow];\r\n+\r\n+\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n+\t  updatedFirstRow = [...updatedFirstRow];\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n+\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n+\t  setUpdatedRow(updatedFirstRow)\r\n+\t}\r\n+\r\n+  },[tablerow,DAPrice,IRPrice]) \r\n+\r\n+console.log(updatedRow,\"::tableroqw\");\r\n+\r\n+\r\n+useEffect(() => {\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n+\t\tsetTableDisplay(true)\r\n+\t}else{\r\n+\t\tsetTableDisplay(false)\r\n+\t}\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n+\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n+\t\tsetEPFWage(EPF)\r\n+\t}else{\r\n+\t\tsetEPFWage('')\r\n+\t};\r\n+\r\n+\r\n+\r\n+const joiningDate = new Date(dateOfJoining);\r\n+const comparisonDate = new Date('2014-01-01');\r\n+\r\n+\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n+\t  setEPSWage(0);\r\n+\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n+\t  setEPSWage(15000);\r\n+\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n+\t  setEPSWage(totalAmount);\r\n+\t}else{\r\n+\t\tsetEPSWage('')\r\n+\t};\r\n+\r\n+\r\n+\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n+\t\tsetEDLIWage(15000)\r\n+\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n+\t\tsetEDLIWage(totalAmount)\r\n+\t}else{\r\n+\t\tsetEDLIWage('')\r\n+\t}\r\n+\r\n+\t\r\n+if(EPSWage === 15000){\r\n+setEPSContri(1250)\r\n+}else if(EPSWage === 0){\r\n+setEPSContri(0)\r\n+}else{\r\n+ const EPS = (EPFWage * 8.33)/100\r\n+ setEPSContri(EPS)\r\n+}\r\n+\r\n+const targetId = '658112ecc32bc7fefb3b2e3f';\r\n+let foundData = null;\r\n+\r\n+for (let i = 0; i < tablerow.length; i++) {\r\n+if (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\n+foundData = tablerow[i];\r\n+break;\r\n+}\r\n+}\r\n+const EPFcontribution = (EPFWage * 12) / 100;\r\n+console.log(EPFcontribution,\"::EPFSSS\");\r\n+if (!foundData) {\r\n+setEPFContri(EPFcontribution)\r\n+console.log('ffffffffffffffffffuuuuuuuuuuu');\r\n+} else {\r\n+console.log('ddddddddddddddddddddddddd');\r\n+const EPFS =( EPFcontribution + foundData.price)\r\n+setEPFContri(EPFS)\r\n+}\r\n+\r\n+const EPFSS = (EPFWage * 12) / 100;\r\n+\r\n+if( EPFContri){\r\n+const EPFEPSDIFF = EPFSS -EPSContri\r\n+setEPSEPFDiff(EPFEPSDIFF)\r\n+}\r\n+\r\n+\r\n+\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n+\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n+\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n+\tconsole.log(EPFWage,\":EPF WAGE\");\r\n+\tconsole.log(EPSWage,\":Eps WAGE\");\r\n+\tconsole.log(dateOfJoining);\r\n+\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n+\tconsole.log(EDLIWage,\"EdliWage\");\r\n+\r\n+  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n+  console.log(absentDays,\":AbsentDays\");\r\n+\r\n+  useEffect(()=>{\r\n+\tif(absentDays && basicSalary){\r\n+\t\tconst EligiblePay = (30 - absentDays)*basicSalary/30\r\n+\t\tconst LossOfPAY = (absentDays)*basicSalary/30\r\n+\t\tsetEligiblePay(Math.round(EligiblePay))\r\n+\t\tsetLossOfPay(Math.round(LossOfPAY))\r\n+\t\tconsole.log(EligiblePay,\":Eligible Pay\");\r\n+\t}\r\n+\r\n+  },[absentDays])\r\n+\r\n+console.log(eligiblePay,\"Eligible Pay\");\r\n+console.log(lossOfPay,\"LossOfpay\");\r\n+const handleformsubmit = async(event)=>{\r\n+\t// event.preventDefault();\r\n+\tconsole.log(tablerow,\":tablerow:\");\r\n+\treset\r\n+\t\ttry {\r\n+\t\t\t// const LeaveBalance = {\r\n+\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n+\t\t\t// \tallowedleave: Number(leaveDifference)\r\n+\t\t\t// };\r\n+\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n+\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n+\t\t\t// if (responses.success){\r\n+\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n+\t\t\t// }\r\n+\t\t\tconst formdata = {\r\n+\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n+\t\t\tdate:date,\t\r\n+\t\t\temployeeid:employeeid,\r\n+\t\t\tdepartmentid : department,\r\n+\t\t\tunitid : unit,\r\n+\t\t\tbasicSalary:basicSalary,\r\n+\t\t\ttotaldeduction:totaldeduction,\r\n+\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n+\t\t\ttotalincrement:totalincrement,\r\n+\t\t\temployeeTypeId:employeeTypeId,\r\n+\t\t\tlossOfPay,\r\n+\t\t\teligiblePay,\r\n+\t\t\tEPFWage,\r\n+\t\t\tEPSWage,\r\n+\t\t\tEDLIWage,\r\n+\t\t\tEPFContri,\r\n+\t\t\tEPSContri,\r\n+\t\t\tEPSEPFDiff,\r\n+\t\t\ttablerow:updatedRow||[],\r\n+\t\t\tabsentDays : absentDays,\r\n+\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n+\t\t\t}\r\n+\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n+\t\t\tsetcount((prevCount) => prevCount + 1);\r\n+\t\t\tsetFilterEmployeeData([])\r\n+\t\t\tsetTablerow([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetAbsentDays(0)\r\n+\t\t\tsetAllowedLeave('')\r\n+\t\t\tsetEmployeeId([])\r\n+\t\t\tsetBasicSalary([])\r\n+\t\t\tsetSalaryTotal([])\r\n+\t\t\tsetUpdatedRow([])\r\n+\t\t\tsetDAPercentage('')\r\n+\t\t\tsetDAPrice('');\r\n+\t\t\tsetIRPercentage('');\r\n+\t\t\tsetIRPrice('');\r\n+\t\t\tsetDAValue('');\r\n+\t\t\tsetIRValue('');\r\n+\t\t\tsetLossOfPay('');\r\n+\t\t\tsetEligiblePay('');\r\n+\t\t\tsetTotalContributions([])\r\n+\t\t\tconst response = await AddSalaryBill(formdata);\r\n+\r\n+\t\t\t if (response.success){\r\n+\t\t\tsetformData(response.data);\r\n+\t\t\ttoast.success(response.message);\r\n+\t\t\tsetSalarybill(false);\r\n+\t\t\tsetSalaryList(true)\r\n+\t\t\treset\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\ttoast.error(response.message);\r\n+\t\t\t  }\r\n+\t\t\t\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t\tconsole.log(error);\r\n+\t\t}\r\n+\r\n+\t}\r\n+const handleAddClick =()=>{\r\n+\tsetSalarybill(true);\r\n+\tsetSalaryList(false)\r\n+}\r\n+const handleTableClick =()=>{\r\n+\tsetSalarybill(false);\r\n+\tsetSalaryList(true)\r\n+}\r\n+\r\n+console.log(\"absent\",absentvalue);\r\n+\r\n+\r\n+const [date, setDate] = useState(() => {\r\n+\tconst today = new Date();\r\n+\tconst year = today.getFullYear();\r\n+\tlet month = today.getMonth() + 1;\r\n+\tlet day = today.getDate();\r\n+  \r\n+\t// Pad the month and day with leading zeros if needed\r\n+\tmonth = month < 10 ? `0${month}` : month;\r\n+\tday = day < 10 ? `0${day}` : day;\r\n+  \r\n+\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n+\treturn `${year}-${month}-${day}`;\r\n+  });\r\n+\r\n+console.log('ssssss',basicSalary);\r\n+\t\r\n+return (\r\n+    <>\r\n+      <PageHeader headerdata={headerdata}/>\r\n+\r\n+\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n+\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n+\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n+\t\t\t\t\t\t\t\t<div class=\"row\">\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t\t   <input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t<Select\r\n+\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n+\t\t\t\t\t\t\t\t\t\toptions={options}\r\n+\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n+\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n+\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n+\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n+\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t</div>\t\r\n+\t\t\t\t\t\t\t</div>\r\n+\r\n+\t\t\t\t\r\n+\t\t\t\t\t\t\t\t<div className=\"row\">\r\n+\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n+                                                                        onChange={(e) => handleIRPercentage(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Absent:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={absentDays} min={0}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\" \tstyle={{backgroundColor:\"#cbd0d6\"}}   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n+\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\t</div> \r\n+\t\t\t\t\t\t\t\t\t\t</div>\r\n+\t\t\t\t\t\t\t\t\t\t\r\n+\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n+\r\n+\t\r\n+\t\t\t{ salaryList&&  <div>\r\n+\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n+\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n+\t\t\r\n+    </>\r\n+  )\r\n+}\r\n+\r\n+export default Salarybill\n\\ No newline at end of file\n"
                }
            ],
            "date": 1703670168696,
            "name": "Commit-0",
            "content": "import React,{ useMemo,useEffect, useState} from 'react'\r\nimport PageHeader from '../PageHeader'\r\nimport { toast } from 'react-toastify';\r\nimport { editemployeemaster, getallemployeemaster } from '../../Apicalls/EmployeeMater';\r\nimport { getallSalary } from '../../Apicalls/salarymaster';\r\nimport { AddSalaryBill, GetSalaryBillCount } from '../../Apicalls/salaryBill';\r\nimport list_salary_bill from './List_salary_bill';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport Select from 'react-select';\r\n\r\nconst MemoizedSalaryBill = React.memo(list_salary_bill);\r\nfunction Salarybill() {\r\n\t\r\n\r\n\tconst [unit,setUnit]=useState('');\r\n\tconst [department,setDepartment]=useState('');\r\n\tconst [EmployeeData, setEmployeeData] = useState([]);\r\n\tconst [EmployeeId, setEmployeeId] = useState('');\r\n\tconst [isEmployeeDataFetched, setIsEmployeeDataFetched] = useState(false);\r\n\tconst [absentvalue,setAbsentValue]=useState('')\r\n\tconst [allowedleave,setAllowedLeave]=useState(0)\r\n\tconst [tablerow, setTablerow] = useState([]);\r\n\tconst [tablerows, setTablerows] = useState([]);\r\n\tconst [basicSalary,setBasicSalary]=useState('')\r\n\tconst [filterEmployeeData,setFilterEmployeeData]=useState([]);\r\n\tconst [TotalSalary, setTotalSalary] = useState('');\r\n\tconst [totalAmount, setTotalAmount] = useState('');\r\n\tconst [totalrowprice,setTotalRowPrice]=useState([]);\r\n\tconst [employeeid,setEmployeeid]=useState('');\r\n\tconst [formdata,setformData]=useState([]);\r\n\t\r\n\tconst [EPFWage,setEPFWage]=useState('');\r\n\tconst [EPSWage,setEPSWage]=useState('');\r\n\tconst [EPSContri,setEPSContri]=useState('');\r\n\tconst[EPFContri,setEPFContri]=useState('');\r\n\tconst[EPSEPFDiff,setEPSEPFDiff]=useState('');\r\n\tconst [EDLIWage, setEDLIWage]=useState('');\r\n\r\n\tconst[count,setcount]=useState('');\r\n\tconst[salarybill,setSalarybill]=useState(false);\r\n\tconst [salaryList,setSalaryList]=useState(true)\r\n\r\n\r\n\tconst [DAPercentage,setDAPercentage]=useState('');\r\n\tconst [DAValue,setDAValue]=useState('');\r\n\tconst [DAPrice,setDAPrice]=useState('');\r\n\tconst [IRPercentage,setIRPercentage]=useState('');\r\n\tconst [IRValue,setIRValue]=useState('');\r\n\tconst [IRPrice,setIRPrice]=useState('');\r\n\tconst [dateOfJoining,setDateOfJoining]=useState(''); \r\n\tconst [employeeTypeId,setEmployeeTypeId]=useState('');\r\n\tconst [tabledisplay,setTableDisplay]=useState(false);\r\n\r\n\tconst {\r\n\t\t\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { errors },\r\n\t\treset,\r\n\t  } = useForm({\r\n\t\tcriteriaMode: 'all',\r\n\t\r\n\t  });\r\n\r\n\r\n\t  useEffect(() => {\r\n\t\tconst fetchUniqueSixCharacterID = async () => {\r\n\t\t  try {\r\n\t\t\tconst response = await GetSalaryBillCount();\r\n\t\t\tsetcount( response.data.count+1);\r\n\t\t  } catch (error) {\r\n\t\t\tconsole.error(\"Error:\", error);\r\n\t\t  }\r\n\t\t};\r\n\t  \r\n\t\tfetchUniqueSixCharacterID();\r\n\t  }, []);\r\n\t\r\n\r\n\tconst handleEmployeeclick = async () => {\r\n\t\r\n\t try {\r\n\t   if (!isEmployeeDataFetched) {\r\n\t\t const response = await getallemployeemaster ();\r\n\t\t if (response.success) {\r\n\t\t   setEmployeeData(response.data);\r\n\t\t } else {\r\n\t\t   setEmployeeData([]);\r\n\t\t }\r\n\t\t setIsEmployeeDataFetched(true);\r\n\t   }\r\n\t } catch (error) {\r\n\t   toast.error(error.message);\r\n\t }\r\n   };\r\n   useEffect(()=>{\r\n\thandleEmployeeclick()\r\n  },[])\r\n\r\n  \r\n\r\n   const [selectedOption, setSelectedOption] = useState(null);\r\n   const [options, setOptions] = useState(EmployeeData.map((data) => ({ value: data.name, label: data.name })));\r\n  \r\n\tconst  handleInputChange = (newValue) => {\r\n\t\r\n\t  const filteredOptions = EmployeeData.filter((data) =>\r\n\t\tdata.name.toLowerCase().includes(newValue.toLowerCase())\r\n\t  ).map((data) => ({ value: data.name, label: data.name }));\r\n\t  setOptions(filteredOptions);\r\n\t};\r\n\r\n\r\n\r\n   const handleSelectChange = (selected) => {\r\n\r\n\tconst select = selected.value\r\n\r\n\t\r\n    if (select) {\r\n\t\t\r\n        const filteredEmployees = EmployeeData.filter(data => data.name === select);\r\n       console.log(filteredEmployees,\":FilterEmployeeees\");\r\n\t\r\n\t\tsetEmployeeTypeId(filteredEmployees[0]?filteredEmployees[0].EmployeeTypeId._id:\"\");\r\n\t\tsetEmployeeid(filteredEmployees[0]?filteredEmployees[0]._id :\"\")\r\n\t\tsetDepartment(filteredEmployees[0]?filteredEmployees[0].PostId.department._id : '')\r\n\t\tsetUnit(filteredEmployees[0]?filteredEmployees[0].PostId.unit._id : \"\"\t)\r\n\t\tsetBasicSalary(filteredEmployees[0]?filteredEmployees[0].basicSalary :\"\")\r\n\t\tsetTotalSalary(filteredEmployees[0]?filteredEmployees[0].TotalSalary:\"\")\r\n// Check if tablerow exists and has elements before accessing properties\r\nif (\r\n\tfilteredEmployees[0].tablerow &&\r\n\tfilteredEmployees[0].tablerow.length > 0 &&\r\n\tfilteredEmployees[0].tablerow[0]\r\n  ) {\r\n\tsetDAPrice(\r\n\t  filteredEmployees[0].tablerow[0].price\r\n\t\t? filteredEmployees[0].tablerow[0].price\r\n\t\t: \"\"\r\n\t);\r\n\tsetDAValue(\r\n\t  filteredEmployees[0].tablerow[0].value\r\n\t\t? filteredEmployees[0].tablerow[0].value\r\n\t\t: \"\"\r\n\t);\r\n\tsetDAPercentage(\r\n\t  filteredEmployees[0].tablerow[0].percentage\r\n\t\t? filteredEmployees[0].tablerow[0].percentage\r\n\t\t: \"\"\r\n\t);\r\n  }\r\n  \r\n  if (\r\n\tfilteredEmployees[0].tablerow &&\r\n\tfilteredEmployees[0].tablerow.length > 1 &&\r\n\tfilteredEmployees[0].tablerow[1]\r\n  ) {\r\n\tsetIRPrice(\r\n\t  filteredEmployees[0].tablerow[1].price\r\n\t\t? filteredEmployees[0].tablerow[1].price\r\n\t\t: \"\"\r\n\t);\r\n\tsetIRValue(\r\n\t  filteredEmployees[0].tablerow[1].value\r\n\t\t? filteredEmployees[0].tablerow[1].value\r\n\t\t: \"\"\r\n\t);\r\n\tsetIRPercentage(\r\n\t  filteredEmployees[0].tablerow[1].percentage\r\n\t\t? filteredEmployees[0].tablerow[1].percentage\r\n\t\t: \"\"\r\n\t);\r\n  }\r\n  \r\n\t\tsetDateOfJoining(filteredEmployees[0].dateOfJoining?filteredEmployees[0].dateOfJoining:\"\");\r\n        setFilterEmployeeData(filteredEmployees);\r\n\t\tconst tablerowData = filteredEmployees[0]?.tablerow;\r\n\t\tif (Array.isArray(tablerowData)) {\r\n\t\tsetTablerow(tablerowData.slice(2));\r\n\t\t} else {\r\n\t\tsetTablerow([]);\r\n\t\t}\r\n\t\t  console.log('tablerow',tablerow);\r\n    }\r\n};\tconst [itemdata,setitemdata]=useState(filterEmployeeData[0])\r\n\r\n \r\n\r\n\r\nconsole.log('filtered data :',filterEmployeeData);\r\nconst headerdata = useMemo(() => {\r\n\treturn {\r\n\t  data:\"Salary master\",\r\n\t  page:\"salary bill\"\r\n\t};\r\n  }, []);\r\n\r\n\r\n\r\n  const handleAddRow = () => {\r\n    setTablerow((prevRows) => [\r\n      ...prevRows,\r\n      {\r\n        id: Date.now(),\r\n        salaryComponent: \"\",\r\n        percentage: \"\",\r\n        value: \"\",\r\n        price: \"\",\r\n      },\r\n    ]);\r\n  };\r\n  const handleRemoveRow = (id) => {\r\n    setTablerow((prevRows) => prevRows.filter((row) => row.id !== id));\r\n  };\r\n\r\n  const [month, setmonth] = useState('')\r\n  \r\n\r\n  const [issalarymasterDataFetched, setIsSalarymasterDataFetched] =useState(false);\r\n  const [salarymasterData, setSalarymasterData] = useState([]);\r\n  const [salarymasterId, setSalarymasterId] = useState(\"\");\r\n\r\n  const data = tablerow.slice(2)\r\n  \r\n \r\n  const handlesalarymasterclick = async () => {\r\n    try {\r\n      if (!issalarymasterDataFetched) {\r\n        const response = await getallSalary();\r\n        if (response.success) {\r\n          setSalarymasterData(response.data);\r\n        } else {\r\n          setSalarymasterData([]);\r\n        }\r\n      }\r\n      setIsSalarymasterDataFetched(true);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n\thandlesalarymasterclick()\r\n  },[])\r\n\r\n\r\n\r\n\r\nconst handlesalarymasterchange = (event, index) => {\r\n\tconst updatedTableRows = [...tablerow];\r\n\tupdatedTableRows[index] = {\r\n\t  ...updatedTableRows[index],\r\n\t  salaryComponent: event.target.value,\r\n\t};\r\n\tsetTablerow(updatedTableRows);\r\n  };\r\n  \r\n  const [salarycomponent, setSalaryComponent] = useState([]);\r\n\r\n   \r\n\tconst [absentDays, setAbsentDays] = useState(0);\r\n\tconst [perDaySalary, setPerDaySalary] = useState('');\r\n\tconst [salaryTotal, setSalaryTotal] = useState('');\r\n    const [leaveDifference,setLeaveDifference]=useState('');\r\n \tconst [totalincrement,setTotalIncrement]=useState(0);\r\n\r\n\tconst [totaldeduction,setTotalDeduction]=useState(0)\r\n\tconst [totalcontribution,setTotalContributions]=useState(0)\r\n\tuseEffect(() => {\r\n\t\ttry {\r\n\t\t  let \ttotalAmount = basicSalary;\r\n\t\t  let totalDeduction = 0;\r\n\t\t  let totalIncrement = 0;\r\n\t\t  let totalcontribution =0;\r\n\t  \r\n\r\n\t\t  // Your existing logic for calculating totalAmount\r\n\t  \r\n\t\t  tablerow.forEach((row) => {\r\n\t\t\tconst salaryType = salarymasterData.find(\r\n\t\t\t  (item) =>\r\n\t\t\t\titem._id === row.salaryComponent?._id || item._id === row.salaryComponent\r\n\t\t\t);\r\n\t  \r\n\t\t\tif (salaryType) {\r\n\t\t\t  if (salaryType.type === 'Increment') {\r\n\t\t\t\ttotalIncrement += parseFloat(row.price) || 0;\r\n\t\t\t  } else if (salaryType.type === 'Decrement') {\r\n\t\t\t\ttotalDeduction += parseFloat(row.price) || 0;\r\n\t\t\t  } else if (salaryType.type === 'nill') {\r\n\t\t\t\tsetTotalContributions(totalcontribution += parseFloat(row.price) || 0)\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  });\r\n\t  \r\n\t\t  // Calculate the total after deducting deductions and adding increments\r\n\t\t  totalAmount = totalAmount - totalDeduction + totalIncrement + parseFloat(DAPrice) + parseFloat(IRPrice);\r\n\t  \r\n\t\t  const calculatedPerDaySalary = basicSalary / 30;\r\n\t\t  setPerDaySalary(calculatedPerDaySalary);\r\n\t  \r\n\t\t  if (absentDays > allowedleave) {\r\n\t\t\tconst leaveDifferences = absentDays - allowedleave;\r\n\t\t\tconst calculatedTotal = totalAmount - leaveDifferences * perDaySalary;\r\n\t\t\tsetSalaryTotal(calculatedTotal.toFixed(2));\r\n\t\t  } else {\r\n\t\t\tsetSalaryTotal(totalAmount.toFixed(2));\r\n\t\t  }\r\n\t  \r\n\t\t  const balanceleave = allowedleave - absentDays;\r\n\t\t  setLeaveDifference(balanceleave < 0 ? 0 : balanceleave);\r\n\t\t  setTotalDeduction(totalDeduction.toFixed(2));\r\n\t\t//   const TotalIncrements=(basicSalary)+parseFloat(totalIncrement);\r\n\t\t  setTotalIncrement(parseFloat(basicSalary) + parseFloat(totalIncrement));\r\n\t\t  setTotalAmount(totalAmount.toFixed(2)); \r\n\t\t} catch (error) {\r\n\t\t  console.error('Error in useEffect:', error);\r\n\t\t}\r\n\t  }, [tablerow, basicSalary, salarymasterData, allowedleave, absentDays, perDaySalary,IRPrice,DAPrice]);\r\n\t  \r\n\t  \r\n\r\n\r\n  const handleSecondInputChange = (index, value) => {\r\n    const updatedTableRows = [...tablerow];\r\n    updatedTableRows[index].percentage = \"\";\r\n    updatedTableRows[index].value = value.trim() !== \"\" ? Number(value) : \"\";\r\n    const newPrice = value.trim() !== \"\" ? value : \"\";\r\n    updatedTableRows[index].price = newPrice;\r\n    setTablerow(updatedTableRows);\r\n  };\r\n\r\n  const   handleChange = (index, percentage) => {\r\n    const updatedTableRows = [...tablerow];\r\n    updatedTableRows[index].percentage = Number(percentage);\r\n\r\n    // Reset second field's value when first field is updated\r\n    updatedTableRows[index].value = \"\";\r\n\r\n    // Recalculate the price based on the updated percentage and basic salary\r\n    const newPrice = basicSalary\r\n      ? (basicSalary * Number(percentage)) / 100\r\n      : \"\";\r\n    updatedTableRows[index].price = newPrice || \"\";\r\n\r\n    setTablerow(updatedTableRows);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleDAPercentage = (event)=>{\r\n\t const value= event.target.value;\r\n\t setDAPercentage(value)\r\n\t setDAValue('')\r\n   }\r\n   const handleDAValue = (event)=>{\r\n\t const value= event.target.value;\r\n\t setDAValue(value)\r\n\t setDAPercentage('')\r\n   }\r\n   const handleIRPercentage = (event)=>{\r\n\t const value= event.target.value;\r\n\t setIRPercentage(value)\r\n\t setIRValue('')\r\n   }\r\n   const handleIRValue = (event)=>{\r\n\t const value= event.target.value;\r\n\t setIRValue(value)\r\n\t setIRPercentage('')\r\n   }\r\n\r\n   useEffect(() => {\r\n\r\n\t// DA row\r\n\t\r\n\tif (DAPercentage !== 0 && !DAValue) {\r\n\t  const price = (basicSalary * DAPercentage) / 100;\r\n\t  setDAPrice(price);\r\n\t}\r\n  \r\n\telse if (DAValue !== 0 && !DAPercentage) {\r\n\t  const prices = DAValue;\r\n\t  setDAPrice(prices);\r\n\t}\r\n\r\n\t// IR row\r\n\t\r\n\tif (IRPercentage !== 0 && !IRValue) {\r\n\t  const price = (basicSalary * IRPercentage) / 100;\r\n\t  setIRPrice(price);\r\n\t}\r\n  \r\n\telse if (IRValue !== 0 && !IRPercentage) {\r\n\t  const prices = IRValue;\r\n\t  setIRPrice(prices);\r\n\t}\r\n\r\n   \r\n  }, [DAPercentage, DAValue, basicSalary,IRPercentage,IRValue]);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\nconst firstrow =[\r\n\t{\r\n\t\tid:1,\r\n\t\tsalaryComponent:\"6581128dc32bc7fefb3b2e30\",\r\n\t\tpercentage:DAPercentage?DAPercentage:\"\",\r\n\t\tvalue:DAValue?DAValue:\"\",\r\n\t\tprice:DAPrice\r\n\t},\r\n\t{\r\n\t\tid:2,\r\n\t\tsalaryComponent:\"658112c9c32bc7fefb3b2e3b\",\r\n\t\tpercentage:IRPercentage?IRPercentage:\"\",\r\n\t\tvalue:IRValue?IRValue:\"\",\r\n\t\tprice:IRPrice\r\n\t}\r\n  ]\r\n  const[updatedRow,setUpdatedRow]=useState('');\r\n\r\n  useEffect(()=>{\r\n\tlet updatedFirstRow = [...firstrow];\r\n\r\n\tif (tablerow && tablerow.length > 0 && tablerow[0].price === '') {\r\n\t  updatedFirstRow = [...updatedFirstRow];\r\n\t  setUpdatedRow(updatedFirstRow)\r\n\t}else if( tablerow && tablerow.length > 0 && tablerow[0].price > 0){\r\n\t  updatedFirstRow=[...updatedFirstRow, ...tablerow]\r\n\t  setUpdatedRow(updatedFirstRow)\r\n\t}\r\n\r\n  },[tablerow,DAPrice,IRPrice]) \r\n\r\nconsole.log(updatedRow,\"::tableroqw\");\r\n\r\n\r\nuseEffect(() => {\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\"){\r\n\t\tsetTableDisplay(true)\r\n\t}else{\r\n\t\tsetTableDisplay(false)\r\n\t}\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && basicSalary ){\r\n\t\tconst EPF = parseFloat(basicSalary) + parseFloat(DAPrice) + parseFloat(IRPrice)\r\n\t\tsetEPFWage(EPF)\r\n\t}else{\r\n\t\tsetEPFWage('')\r\n\t};\r\n\r\n\r\n\r\nconst joiningDate = new Date(dateOfJoining);\r\nconst comparisonDate = new Date('2014-01-01');\r\n\r\n\tif (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (joiningDate >= comparisonDate)) {\r\n\t  setEPSWage(0);\r\n\t} else if (employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount >= 15000)) {\r\n\t  setEPSWage(15000);\r\n\t} else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" && (totalAmount < 15000)) {\r\n\t  setEPSWage(totalAmount);\r\n\t}else{\r\n\t\tsetEPSWage('')\r\n\t};\r\n\r\n\r\n\tif(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount >= 15000)){\r\n\t\tsetEDLIWage(15000)\r\n\t}else if(employeeTypeId === \"6566be7b0085f19cfbfd00c1\" &&(totalAmount < 15000)){\r\n\t\tsetEDLIWage(totalAmount)\r\n\t}else{\r\n\t\tsetEDLIWage('')\r\n\t}\r\n\r\n\t\r\nif(EPSWage === 15000){\r\nsetEPSContri(1250)\r\n}else if(EPSWage === 0){\r\nsetEPSContri(0)\r\n}else{\r\n const EPS = (EPFWage * 8.33)/100\r\n setEPSContri(EPS)\r\n}\r\n\r\nconst targetId = '658112ecc32bc7fefb3b2e3f';\r\nlet foundData = null;\r\n\r\nfor (let i = 0; i < tablerow.length; i++) {\r\nif (tablerow[i].salaryComponent._id ?tablerow[i].salaryComponent._id :tablerow[i].salaryComponent === targetId) {\r\nfoundData = tablerow[i];\r\nbreak;\r\n}\r\n}\r\nconst EPFcontribution = (EPFWage * 12) / 100;\r\nconsole.log(EPFcontribution,\"::EPFSSS\");\r\nif (!foundData) {\r\nsetEPFContri(EPFcontribution)\r\nconsole.log('ffffffffffffffffffuuuuuuuuuuu');\r\n} else {\r\nconsole.log('ddddddddddddddddddddddddd');\r\nconst EPFS =( EPFcontribution + foundData.price)\r\nsetEPFContri(EPFS)\r\n}\r\n\r\nconst EPFSS = (EPFWage * 12) / 100;\r\n\r\nif( EPFContri){\r\nconst EPFEPSDIFF = EPFSS -EPSContri\r\nsetEPSEPFDiff(EPFEPSDIFF)\r\n}\r\n\r\n\r\n\tconsole.log(EPSContri,\";;;;;;;EPSContri;;;;;;;\");\r\n\tconsole.log(EPFContri,\"....................EPFContri.............................\");\r\n\tconsole.log(EPSEPFDiff,\":EPSEPFDiff::::::\");\r\n\tconsole.log(EPFWage,\":EPF WAGE\");\r\n\tconsole.log(EPSWage,\":Eps WAGE\");\r\n\tconsole.log(dateOfJoining);\r\n\tconsole.log(EDLIWage,\":EDLI WAGE\");\r\n\tconsole.log(EDLIWage,\"EdliWage\");\r\n\r\n  }, [totalAmount, dateOfJoining,EPSWage,EPFWage,EDLIWage,filterEmployeeData,employeeTypeId,,employeeid,options,tablerow,DAPrice,IRPrice,updatedRow]);\r\n  \r\n\r\n\r\n\r\nconst handleformsubmit = async(event)=>{\r\n\t// event.preventDefault();\r\n\tconsole.log(tablerow,\":tablerow:\");\r\n\treset\r\n\t\ttry {\r\n\t\t\t// const LeaveBalance = {\r\n\t\t\t// \t_id: filterEmployeeData[0]._id,\r\n\t\t\t// \tallowedleave: Number(leaveDifference)\r\n\t\t\t// };\r\n\t\t\t// console.log('formdaaats:', LeaveBalance);\r\n\t\t\t// const responses = await editemployeemaster(LeaveBalance);\r\n\t\t\t// if (responses.success){\r\n\t\t\t// \tconsole.log(\"sucessfully updated\");\r\n\t\t\t// }\r\n\t\t\tconst formdata = {\r\n\t\t\tSalaryBillNo:`ME${count.toString().padStart(3, '0')}`, \r\n\t\t\tdate:date,\t\r\n\t\t\temployeeid:employeeid,\r\n\t\t\tdepartmentid : department,\r\n\t\t\tunitid : unit,\r\n\t\t\tbasicSalary:basicSalary,\r\n\t\t\ttotaldeduction:totaldeduction,\r\n\t\t\ttotalcontribution:totalcontribution?totalcontribution:\"\",\r\n\t\t\ttotalincrement:totalincrement,\r\n\t\t\temployeeTypeId:employeeTypeId,\r\n\t\t\tEPFWage,\r\n\t\t\tEPSWage,\r\n\t\t\tEDLIWage,\r\n\t\t\tEPFContri,\r\n\t\t\tEPSContri,\r\n\t\t\tEPSEPFDiff,\r\n\t\t\ttablerow:updatedRow||[],\r\n\t\t\tallowedleave:allowedleave,\r\n\t\t\tabsentDays : absentDays,\r\n\t\t\ttotalAmount: salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal\r\n\t\t\t}\r\n\t\t\tconsole.log(formdata,\"foooooooooooooooorm datasssssssssssssssssssssss\");\r\n\t\t\tsetcount((prevCount) => prevCount + 1);\r\n\t\t\tsetFilterEmployeeData([])\r\n\t\t\tsetTablerow([])\r\n\t\t\tsetSalaryTotal([])\r\n\t\t\tsetAbsentDays(0)\r\n\t\t\tsetAllowedLeave('')\r\n\t\t\tsetEmployeeId([])\r\n\t\t\tsetBasicSalary([])\r\n\t\t\tsetSalaryTotal([])\r\n\t\t\tsetUpdatedRow([])\r\n\t\t\tsetDAPercentage('')\r\n\t\t\tsetDAPrice('');\r\n\t\t\tsetIRPercentage('');\r\n\t\t\tsetIRPrice('');\r\n\t\t\tsetDAValue('');\r\n\t\t\tsetIRValue('');\r\n\t\t\tsetTotalContributions([])\r\n\t\t\tconst response = await AddSalaryBill(formdata);\r\n\r\n\t\t\t if (response.success){\r\n\t\t\tsetformData(response.data);\r\n\t\t\ttoast.success(response.message);\r\n\t\t\tsetSalarybill(false);\r\n\t\t\tsetSalaryList(true)\r\n\t\t\treset\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttoast.error(response.message);\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error(error.message);\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t}\r\nconst handleAddClick =()=>{\r\n\tsetSalarybill(true);\r\n\tsetSalaryList(false)\r\n}\r\nconst handleTableClick =()=>{\r\n\tsetSalarybill(false);\r\n\tsetSalaryList(true)\r\n}\r\n\r\nconsole.log(\"absent\",absentvalue);\r\n\r\n\r\nconst [date, setDate] = useState(() => {\r\n\tconst today = new Date();\r\n\tconst year = today.getFullYear();\r\n\tlet month = today.getMonth() + 1;\r\n\tlet day = today.getDate();\r\n  \r\n\t// Pad the month and day with leading zeros if needed\r\n\tmonth = month < 10 ? `0${month}` : month;\r\n\tday = day < 10 ? `0${day}` : day;\r\n  \r\n\t// Format the date as 'YYYY-MM-DD' (required by input type='date')\r\n\treturn `${year}-${month}-${day}`;\r\n  });\r\n\r\nconsole.log('ssssss',basicSalary);\r\n\t\r\nreturn (\r\n    <>\r\n      <PageHeader headerdata={headerdata}/>\r\n\r\n\t\t\t\t\t\t\t{salarybill&& <div>\t<button className='btn btn-success' onClick={handleTableClick}> Table </button>\r\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit(handleformsubmit)}>\r\n\t\t\t\t\t\t\t<div class=\"container mt-5\">\r\n\t\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Salary No <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" value={`MSB${count.toString().padStart(3, '0')}`}  style={{backgroundColor:\"#cbd0d6\"}} readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Date <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t\t   <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...register('date', { required: true })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.date ? 'is-invalid' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.date && errors.date.type === 'required' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Date  is required</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{/* <div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Month <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t  <select\r\n                                                   className=\"form-control select\"\r\n                                                   {...register('month', { required: 'Please select a month' })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t   value={month}\r\n\t\t\t\t\t\t\t\t\t\t\t\t   onChange={(e) => setmonth(e.target.value)}\r\n                                                      >\r\n                                                         <option value=\"\">Select Type</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <option value=\"january\">January</option>\r\n                                                      \t <option value=\"february\">Feburary</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"march\">March</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"april\">April</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"may\">May</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"june\">June</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"july\">July</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"august\">August</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"september\">September</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"october\">October</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"november\">November</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"december\">December</option>\r\n                                                     </select>\r\n                                                       {errors.month && <p className=\"text-danger\">{errors.month.message}</p>}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Unit <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.unit.name ? filterEmployeeData[0].PostId.unit.name:\"\"}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// style={{ backgroundColor: \"#cbd0d6\" }}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t<label>Employee Name <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleSelectChange}\r\n\t\t\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\t\t\tonInputChange={handleInputChange}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search....\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Department <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" style={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={filterEmployeeData[0] && filterEmployeeData[0].PostId.department.name ? filterEmployeeData[0].PostId.department.name:\"\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"col-sm-4\">\r\n\t\t\t\t\t\t\t\t\t   <div className=\"form-group local-forms\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>Basic Salary <span className=\"login-danger\">*</span></label>\r\n\t\t\t\t\t\t\t\t\t\t    <input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{backgroundColor:\"#cbd0d6\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={basicSalary} readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-md-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card invoices-add-card\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"invoice-add-table\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tabledisplay &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table className=\"table table-striped table-nowrap  mb-0 no-footer add-table-items\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>No</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Salary Components</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>%</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Value</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Total</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={1454}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 1} readOnly \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId1(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[0]._id} key={salarymasterData[0]._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[0].name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAPercentage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n                                                                        onChange={(e)=>handleDAPercentage(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{console.log(\"per\",DAPercentage)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={DAValue ? DAValue : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleDAValue( e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={DAPrice?DAPrice:''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={235435}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" value={ 2 } readOnly \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setRowId2(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select className=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onKeyDown={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onMouseEnter={handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={salarymasterData[1]._id} key={salarymasterData[0]._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData[1].name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control ${errors.percentage ? 'is-invalid' : ''}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"%\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRPercentage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value={row.percentage ? row.percentage : ''}\r\n                                                                        onChange={(e) => handleIRPercentage(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{errors.percentage && errors.percentage.type === 'pattern' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-danger\">Please enter a valid percentage</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={IRValue}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleIRValue(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t value={IRPrice?IRPrice:''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tablerow.map((row,index)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={row.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"  value={index+2+1}  readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control \"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => handlesalarymasterchange(event, index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  onChange= {handlesalarymasterclick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={row._id} key={row._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{row.salaryComponent.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{salarymasterData.map(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(option) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={option._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.percentage ? row.percentage : \"\"}   onChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\" value={row.value ? row.value : \"\"}   onChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSecondInputChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" className=\"form-control\"   value={row.price ? row.price : \"\"} onChange={(e)=>setTotalRowPrice(index,e.target.value)} readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td className=\"add-remove text-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"me-2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleAddRow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"javascript:void(0);\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"remove-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveRow(row.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash-alt\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {tablerow.length === 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTablerow((prevRows) => [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prevRows,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsalaryComponent: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpercentage: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice: \"\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tfoot>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td colSpan=\"4\" className='text-end'>Allowed Leaves</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <td><input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={allowedleave ? allowedleave : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#cbd0d6\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className='text-end mt-4'>Absent</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAbsentDays(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={absentDays}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{display:\"none\"}}>balance Leave</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td colSpan=\"4\" className=\"text-end\"><strong>Total Amount:</strong></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"number\" className=\"form-control\"   value={salaryTotal?.TotalSalary?salaryTotal.TotalSalary :salaryTotal} readOnly/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td><input className=\"form-control\" type=\"number\" value={itemdata?.TotalSalary?itemdata.TotalSalary :TotalSalary}  readOnly/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td><input type=\"text\" style={{display:\"none\"}} value={leaveDifference}/></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tfoot>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"doctor-submit text-end m-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary submit-form me-2\">Submit</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary cancel-form\">Cancel</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</form></div>\t}\r\n\r\n\t\r\n\t\t\t{ salaryList&&  <div>\r\n\t\t<button className='btn btn-success' onClick={handleAddClick}> Add </button>\r\n\t\t\t<MemoizedSalaryBill formdata={formdata} setformdata={setformData}/> \t</div>}\r\n\t\t\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Salarybill"
        }
    ]
}